{"version":3,"file":"3568.11deb2d16c343d2fc3fb.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLang.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useOldLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from \"../../../lib/teact/teact\";\nimport React, { memo, useEffect, useMemo } from \"../../../lib/teact/teact\";\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from \"../../../api/types\";\nimport type { GlobalState } from \"../../../global/types\";\nimport type { ISettings, ThreadId } from \"../../../types\";\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from \"../../../config\";\nimport {\n  getMessageAudio,\n  getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo,\n  getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from \"../../../global/helpers\";\nimport { getDebugLogs } from \"../../../util/debugConsole\";\nimport { validateFiles } from \"../../../util/files\";\nimport { openSystemFilesDialog } from \"../../../util/systemFilesDialog\";\nimport { IS_TOUCH_ENV } from \"../../../util/windowEnvironment\";\n\nimport useFlag from \"../../../hooks/useFlag\";\nimport useLastCallback from \"../../../hooks/useLastCallback\";\nimport useMouseInside from \"../../../hooks/useMouseInside\";\nimport useOldLang from \"../../../hooks/useOldLang\";\n\nimport Icon from \"../../common/icons/Icon\";\nimport Menu from \"../../ui/Menu\";\nimport MenuItem from \"../../ui/MenuItem\";\nimport ResponsiveHoverButton from \"../../ui/ResponsiveHoverButton\";\nimport AttachBotItem from \"./AttachBotItem\";\n\nimport \"./AttachMenu.scss\";\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState[\"attachMenu\"][\"bots\"];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings[\"theme\"];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(\n    isAttachMenuOpen,\n    closeAttachMenu\n  );\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [\n    isAttachmentBotMenuOpen,\n    markAttachmentBotMenuOpen,\n    unmarkAttachmentBotMenuOpen,\n  ] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo =\n    editingMessage &&\n    editingMessage?.groupedId &&\n    Boolean(\n      getMessagePhoto(editingMessage) ||\n        getMessageWebPagePhoto(editingMessage) ||\n        Boolean(\n          getMessageVideo(editingMessage) ||\n            getMessageWebPageVideo(editingMessage)\n        )\n    );\n  const isFile =\n    editingMessage &&\n    editingMessage?.groupedId &&\n    Boolean(\n      getMessageAudio(editingMessage) ||\n        getMessageVoice(editingMessage) ||\n        getMessageDocument(editingMessage)\n    );\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback(\n    (e: Event, shouldSuggestCompression?: boolean) => {\n      const { files } = e.target as HTMLInputElement;\n      const validatedFiles = validateFiles(files);\n\n      if (validatedFiles?.length) {\n        onFileSelect(validatedFiles, shouldSuggestCompression);\n      }\n    }\n  );\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      !canSendDocuments && canSendAudios\n        ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(\",\")\n        : \"*\",\n      (e) => handleFileSelect(e, false)\n    );\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, {\n      type: \"text/plain\",\n    });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n          if (!peerType || !bot.isForAttachMenu) return false;\n          if (\n            peerType === \"bots\" &&\n            bot.id === chatId &&\n            bot.attachMenuPeerTypes.includes(\"self\")\n          ) {\n            return true;\n          }\n          return bot.attachMenuPeerTypes!.includes(peerType);\n        })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {editingMessage && hasReplaceableMedia ? (\n        <ResponsiveHoverButton\n          id=\"replace-menu-button\"\n          className={\n            isAttachMenuOpen\n              ? \"AttachMenu--button activated\"\n              : \"AttachMenu--button\"\n          }\n          round\n          color=\"translucent\"\n          onActivate={handleToggleAttachMenu}\n          ariaLabel=\"Replace an attachment\"\n          ariaControls=\"replace-menu-controls\"\n          hasPopup\n        >\n          <Icon name=\"replace\" />\n        </ResponsiveHoverButton>\n      ) : (\n        <ResponsiveHoverButton\n          id=\"attach-menu-button\"\n          disabled={Boolean(editingMessage)}\n          className={\n            isAttachMenuOpen\n              ? \"AttachMenu--button activated\"\n              : \"AttachMenu--button\"\n          }\n          round\n          color=\"translucent\"\n          onActivate={handleToggleAttachMenu}\n          ariaLabel=\"Add an attachment\"\n          ariaControls=\"attach-menu-controls\"\n          hasPopup\n        >\n          <Icon name=\"attach\" />\n        </ResponsiveHoverButton>\n      )}\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n         ** Using ternary operator here causes some attributes from first clause\n         ** transferring to the fragment content in the second clause\n         */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            Posting media content is not allowed in this group.\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(\n                  canSendVideoAndPhoto\n                    ? \"AttachmentMenu.PhotoOrVideo\"\n                    : canSendPhotos\n                    ? \"InputAttach.Popover.Photo\"\n                    : \"InputAttach.Popover.Video\"\n                )}\n              </MenuItem>\n            )}\n            {(canSendDocuments || canSendAudios) && !isPhotoOrVideo && (\n              <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                {lang(\n                  !canSendDocuments && canSendAudios\n                    ? \"InputAttach.Popover.Music\"\n                    : \"AttachDocument\"\n                )}\n              </MenuItem>\n            )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang(\"DebugSendLogs\")}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {/* {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )} */}\n\n        {!editingMessage &&\n          !hasReplaceableMedia &&\n          !isScheduled &&\n          bots?.map((bot) => {\n            if (bot.shortName !== \"Wallet\")\n              return (\n                <AttachBotItem\n                  bot={bot}\n                  chatId={chatId}\n                  threadId={threadId}\n                  theme={theme}\n                  onMenuOpened={markAttachmentBotMenuOpen}\n                  onMenuClosed={unmarkAttachmentBotMenuOpen}\n                />\n              );\n          })}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        transformOriginX={transformOriginX}\n        transformOriginY={transformOriginY}\n        positionX={positionX}\n        positionY={positionY}\n        style={menuStyle}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {/* {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )} */}\n\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              hasReplaceableMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const isContactRequirePremium = selectUserFullInfo(global, chatId)?.isContactRequirePremium;\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: never;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', 'canvas-blur-setup', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useOldLang';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus, draftDate }) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={buildClassName(styles.canvas, 'canvas-blur-setup')}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { CustomPeer, CustomPeerType, UniqueCustomPeer } from '../../types';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByKey } from '../../util/iteratees';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  className?: string;\n  categories?: UniqueCustomPeer[];\n  itemIds: string[];\n  selectedCategories?: CustomPeerType[];\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  onSelectedCategoriesChange?: (categories: CustomPeerType[]) => void;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n  isCountryList?: boolean;\n  countryList?: ApiCountry[];\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  className,\n  categories,\n  itemIds,\n  selectedCategories,\n  categoryPlaceholderKey,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedSelectedIds,\n  lockedUnselectedIds,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  onSelectedCategoriesChange,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  isCountryList,\n  countryList,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      onSelectedCategoriesChange?.(newSelectedCategories);\n    } else {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      onSelectedIdsChange?.(newSelectedIds);\n    }\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const lang = useOldLang();\n\n  const countriesByIso = useMemo(() => {\n    if (!countryList) return undefined;\n    return buildCollectionByKey(countryList, 'iso2');\n  }, [countryList]);\n\n  const renderCategory = useLastCallback((category: CustomPeer) => {\n    return (\n      <PrivateChatInfo\n        customPeer={category}\n      />\n    );\n  });\n\n  const renderChatInfo = useLastCallback((id: string) => {\n    const isUnselectable = lockedUnselectedIdsSet.has(id);\n    if (isCountryList && countriesByIso) {\n      const country = countriesByIso[id];\n      return <div>{country.defaultName}</div>;\n    } else if (isUserId(id)) {\n      return (\n        <PrivateChatInfo\n          forceShowSelf={forceShowSelf}\n          userId={id}\n          status={isUnselectable ? lockedUnselectedSubtitle : undefined}\n        />\n      );\n    } else {\n      return <GroupChatInfo chatId={id} status={isUnselectable ? lockedUnselectedSubtitle : undefined} />;\n    }\n  });\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const shouldRenderLockIcon = lockedUnselectedIdsSet.has(id);\n    const isLocked = lockedSelectedIdsSet.has(id) || shouldRenderLockIcon;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n    const renderCheckbox = () => {\n      return (isViewOnly || shouldRenderLockIcon) ? undefined : (\n        <Checkbox\n          label=\"\"\n          disabled={isLocked}\n          checked={isChecked}\n          round={isRoundCheckbox}\n        />\n      );\n    };\n    return (\n      <ListItem\n        key={id}\n        className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        allowDisabledClick={Boolean(onDisabledClick)}\n        secondaryIcon={shouldRenderLockIcon ? 'lock-badge' : undefined}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        ripple\n      >\n        {!isRoundCheckbox ? renderCheckbox() : undefined}\n        {category ? renderCategory(category) : renderChatInfo(id)}\n        {isRoundCheckbox ? renderCheckbox() : undefined}\n      </ListItem>\n    );\n  }, [\n    categoriesByType, isRoundCheckbox, isViewOnly, lockedSelectedIdsSet, lockedUnselectedIdsSet,\n    onDisabledClick, renderChatInfo, selectedCategories, selectedIds,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    return (\n      <div key=\"categories\">\n        {Boolean(categories?.length) && (\n          <>\n            {categoryPlaceholderKey && <div className=\"picker-category-title\">{lang(categoryPlaceholderKey)}</div>}\n            {categories?.map((category) => renderItem(category.type, true))}\n            <div className=\"picker-category-title\">{lang('FilterChats')}</div>\n          </>\n        )}\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName('Picker', className)}>\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PickerSelectedItem\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName('picker-list', 'custom-scroll', isRoundCheckbox && 'withRoundedCheckbox')}\n          items={viewportIds}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  customPeer?: CustomPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  customPeer,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <Icon name={icon} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (customPeer || user || chat) {\n    iconElement = (\n      <Avatar\n        peer={customPeer || user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = (customPeer && lang(customPeer.titleKey))\n      || (!chat || (user && !isSavedMessages)\n        ? getUserFirstOrLastName(user)\n        : getChatTitle(lang, chat, isSavedMessages));\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    (chat?.isForum || customPeer?.isAvatarSquare) && 'square-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(customPeer || chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb canvas-blur-setup\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const userProfilePhotos = user?.profilePhotos;\n  const chatProfilePhotos = chat?.profilePhotos;\n  const photos = userProfilePhotos?.photos || chatProfilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePrevious(mediaIndex);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, userProfilePhotos?.count || 0, chatProfilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userProfilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userProfilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userProfilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userProfilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userProfilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        lang={lang}\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content);\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n  return orderBy(chatIds, (id) => {\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftPremiumModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftPremiumModal({ forUserIds: [user.id] });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\">{renderText(lang(valueKey, [formattedDate, age], undefined, age))}</div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUserFullInfo, ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { debounce } from '../../../util/schedulers';\nimport stopEvent from '../../../util/stopEvent';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const lang = useOldLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: lang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, lang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), lang(isChat ? 'Link' : 'Username'));\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir=\"auto\">{formatUsername(mainUsername.username, isChat)}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{lang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {lang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{lang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" ripple onClick={handleOpenSavedDialog}>\n          <span>{lang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  shouldDelayInit?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  shouldDelayInit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          loopLimit={loopLimit}\n          forceAlways={!shouldDelayInit}\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways={!shouldDelayInit}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways={!shouldDelayInit}\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden, isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div className=\"blur\" />\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useOldLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaHasPreview = lastMessage && !getMessageSticker(lastMessage);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(lastMessage) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getPhotoMediaHash, getVideoProfilePhotoMediaHash } from '../../global/helpers';\nimport { fetchBlob } from '../../util/files';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const photo = message.content.action!.photo!;\n  const suggestedPhotoUrl = useMedia(getPhotoMediaHash(photo, 'full'));\n  const suggestedVideoUrl = useMedia(getVideoProfilePhotoMediaHash(photo));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    if (!suggestedVideoUrl) return;\n\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const blob = await fetchBlob(suggestedVideoUrl);\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetchBlob(suggestedPhotoUrl));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        messageId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(chat: ApiChat, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(chat), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const {\n    openPremiumModal, requestConfetti, checkGiftCode, getReceipt,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isGiftCode = Boolean(message.content.action?.text.startsWith('BoostingReceivedGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}</strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(lang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(lang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'BoostingUnclaimedPrizeDuration',\n            lang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{lang('BoostingReceivedGiftOpenBtn')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type LangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', !noThumb && 'canvas-blur-setup', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useSignal,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat, getMessageMediaThumbDataUri, getVideoMediaHash, hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled);\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', 'canvas-blur-setup', thumbClassNames)}\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldSpinnerRender && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldSpinnerRender && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', !noThumb && 'canvas-blur-setup', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    case 'telegram_stickerset':\n      return 'lng_view_button_stickerset';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useCanvasBlur(\n    dataUri,\n    isDisabled,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n  scrollTargetPosition?: ScrollTargetPosition,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          scrollPosition,\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  onClose,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions,\n\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction, ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../../hooks/useMenuPosition';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  shouldDelayInit?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  shouldDelayInit,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n\n  const getLayout = () => ({ withPortal: true, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n        shouldDelayInit={shouldDelayInit}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuPosition && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiPostStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport {\n  selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"suggestedReaction\":\"WQ5DA3P_\",\"dark\":\"eic2vQ8c\",\"background\":\"j4MKFabm\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const {\n    openMapModal, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url': {\n            const isShiny = isActive && (mediaArea.type !== 'channelPost');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    Boolean(radius) && `border-radius: ${radius}%`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type {\n  ApiInputInvoice, ApiRequestInputInvoice, ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { GlobalState } from '../types';\n\nimport { formatInteger } from '../../util/textFormat';\nimport { selectChat, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug' || inputInvoice.type === 'stars') return inputInvoice;\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      peerColorId: -1, // Defaults to black\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(amount: number) {\n  if (amount < 0) {\n    return `- ${formatInteger(Math.abs(amount))}`;\n  }\n\n  return `+ ${formatInteger(amount)}`;\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        canvas.classList.remove('canvas-blur-setup');\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useSignal } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  addLocalizationCallback,\n  getTranslationFn,\n  type LangFn,\n} from '../util/localization';\nimport useEffectOnce from './useEffectOnce';\nimport useForceUpdate from './useForceUpdate';\n\nconst useLang = (): LangFn => {\n  const forceUpdate = useForceUpdate();\n\n  useEffectOnce(() => {\n    return addLocalizationCallback(forceUpdate);\n  });\n\n  return getTranslationFn();\n};\n\nexport default useLang;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollTargetPosition,\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import twemojiRegex from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_TO_BE_DISTRIBUTED: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'toBeDistributed',\n  titleKey: 'BoostingToBeDistributed',\n  avatarIcon: 'user',\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerMediaHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","decodedWaveform","decodeWaveform","Uint8Array","interpolateArray","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","DEFAULT_LIMIT","limit","badgeText","renderingBadgeText","root","peer","Avatar","avatar","badge","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","result","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","COLOR_REPLACE_PATTERN","icon","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","bot","threadId","isInSideMenu","canShowNew","onMenuOpened","onMenuClosed","callAttachBot","toggleAttachBot","icons","find","isMenuOpen","openMenu","closeMenu","menuPosition","setMenuPosition","handleContextMenu","rect","currentTarget","right","bottom","handleClick","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","botId","isEnabled","MenuItem","key","customIcon","AttachBotIcon","onContextMenu","shortName","isDisclaimerNeeded","Menu","isOpen","positionX","autoClose","withPortal","onClose","onCloseAnimationEnd","destructive","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","positionY","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","AttachBotItem","BotCommandMenu","selectCurrentMessageList","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuPosition","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","ClosableEmbeddedMessage","isInComposer","faded","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","getHtml","isDisabled","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","value","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","isUserId","chatBotFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","user","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isContactRequirePremium","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","floor","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleActivateBotCommandMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMediaThumbUri","localBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","DotAnimation","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","withAnimation","clientY","shiftX","shiftY","Keys","DEFAULT_TEXT","description","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","categories","itemIds","selectedCategories","categoryPlaceholderKey","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedSelectedIds","lockedUnselectedIds","lockedUnselectedSubtitle","forceShowSelf","isViewOnly","onSelectedCategoriesChange","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","isCountryList","countryList","shouldMinimize","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","handleItemClick","categoryType","newSelectedCategories","splice","newSelectedIds","handleFilterChange","viewportIds","getMore","useInfiniteScroll","countriesByIso","renderCategory","category","PrivateChatInfo","customPeer","renderChatInfo","isUnselectable","country","defaultName","GroupChatInfo","renderItem","isCategory","shouldRenderLockIcon","isLocked","isChecked","renderCheckbox","ListItem","inactive","secondaryIcon","beforeChildren","PickerSelectedItem","clickArg","canClose","isMinimized","InputText","InfiniteScroll","Loading","isSelf","fluid","withPeerColors","iconElement","titleText","titleKey","isAvatarSquare","leftText","rightText","floatingBadgeText","floatingBadgeIcon","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","isSynced","userStatus","selectUserStatus","noFake","noVerified","adminMember","rightElement","loadFullUser","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","userProfilePhotos","profilePhotos","chatProfilePhotos","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isReadDateRestrictedByMe","renderStatus","ProfilePhoto","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentHeight","handleResize","entry","contentRect","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","priority","lastMessage","selectChatLastMessage","isVerified","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","iconClassName","multiline","isStatic","narrow","withColorTransition","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","birthday","isInSettings","openGiftPremiumModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserIds","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","runDebounced","debounce","chatOrUserId","phoneCodes","phoneCodeList","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","userFullInfo","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","areNotificationsEnabled","setAreNotificationsEnabled","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","UserBirthday","Switcher","BusinessHours","usernameList","otherUsernames","usernameLinks","s","idx","particleSize","onEnded","stickerHash","getStickerHashById","previewMediaData","paths","generateRandomDropPath","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","genericEffects","effectSize","shouldPause","shouldDelayInit","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","AnimatedSticker","animatedIcon","roundToNearestEven","play","CustomEmojiEffect","ChatFolderModal","MuteChatModal","lastMessageId","selectChatLastMessageId","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","shouldShowOnlyMostImportant","forceHidden","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","suggestedVideoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetchBlob","videoTs","videoSizes","l","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","fallbackColor","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","selectSimilarChannelIds","toggleChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","clearTimeout","handleToggle","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","checkGiftCode","getReceipt","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","shouldShowConfettiRef","withStars","targetUsers","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","ActionMessageSuggestedAvatar","SimilarChannels","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","setProperty","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","closest","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","showSpoiler","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","handleQuickButtonClick","useEnsureStory","hasCustomColor","isWithTextColor","documents","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","Audio","Document","isEmoji","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","scrollTargetPosition","isRelocatedRef","isRelocated","messagesContainer","isToBottom","scrollPosition","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","innerWidth","anchorCenterY","anchorBottomY","REACTION_SIZE","chosen","noAppearAnimation","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","hintText","parts","isPrimary","ReactionSelectorReaction","getReactionKey","ReactionSelectorCustomReaction","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","PromptDialog","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","statistics","period","schema","getSchemaByType","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideo","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","closeStoryViewer","openUrl","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","removeProperty","screenAspectRatio","clientWidth","mediaAreas","isShiny","channelId","handleMediaAreaClick","MediaAreaSuggestedReaction","getRequestInputInvoice","inputInvoice","boostChannelId","amount","currency","option","purpose","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","peerColorId","withPremiumGradient","formatStarsTransactionAmount","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","savedCallback","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","scrollLeft","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","useEffectOnce","addLocalizationCallback","getTranslationFn","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","ConnectorClass","_len","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","p","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","RE_EMOJI_ONLY","lines","fixNonStandardEmoji","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_TO_BE_DISTRIBUTED","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange","encoded5bit","bitsCount","valuesCount","bitsData","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","fitCount","newData","springFactor","leftFiller","rightFiller","val"],"sourceRoot":""}