{"version":3,"file":"5168.9a0c6a9f58132da450c0.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLang.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useOldLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && hasReplaceableMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !hasReplaceableMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        transformOriginX={transformOriginX}\n        transformOriginY={transformOriginY}\n        positionX={positionX}\n        positionY={positionY}\n        style={menuStyle}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              hasReplaceableMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const isContactRequirePremium = selectUserFullInfo(global, chatId)?.isContactRequirePremium;\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: never;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', 'canvas-blur-setup', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useOldLang';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus, draftDate }) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={buildClassName(styles.canvas, 'canvas-blur-setup')}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { CustomPeer, CustomPeerType, UniqueCustomPeer } from '../../types';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByKey } from '../../util/iteratees';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  className?: string;\n  categories?: UniqueCustomPeer[];\n  itemIds: string[];\n  selectedCategories?: CustomPeerType[];\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  onSelectedCategoriesChange?: (categories: CustomPeerType[]) => void;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n  isCountryList?: boolean;\n  countryList?: ApiCountry[];\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  className,\n  categories,\n  itemIds,\n  selectedCategories,\n  categoryPlaceholderKey,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedSelectedIds,\n  lockedUnselectedIds,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  onSelectedCategoriesChange,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  isCountryList,\n  countryList,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      onSelectedCategoriesChange?.(newSelectedCategories);\n    } else {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      onSelectedIdsChange?.(newSelectedIds);\n    }\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const lang = useOldLang();\n\n  const countriesByIso = useMemo(() => {\n    if (!countryList) return undefined;\n    return buildCollectionByKey(countryList, 'iso2');\n  }, [countryList]);\n\n  const renderCategory = useLastCallback((category: CustomPeer) => {\n    return (\n      <PrivateChatInfo\n        customPeer={category}\n      />\n    );\n  });\n\n  const renderChatInfo = useLastCallback((id: string) => {\n    const isUnselectable = lockedUnselectedIdsSet.has(id);\n    if (isCountryList && countriesByIso) {\n      const country = countriesByIso[id];\n      return <div>{country.defaultName}</div>;\n    } else if (isUserId(id)) {\n      return (\n        <PrivateChatInfo\n          forceShowSelf={forceShowSelf}\n          userId={id}\n          status={isUnselectable ? lockedUnselectedSubtitle : undefined}\n        />\n      );\n    } else {\n      return <GroupChatInfo chatId={id} status={isUnselectable ? lockedUnselectedSubtitle : undefined} />;\n    }\n  });\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const shouldRenderLockIcon = lockedUnselectedIdsSet.has(id);\n    const isLocked = lockedSelectedIdsSet.has(id) || shouldRenderLockIcon;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n    const renderCheckbox = () => {\n      return (isViewOnly || shouldRenderLockIcon) ? undefined : (\n        <Checkbox\n          label=\"\"\n          disabled={isLocked}\n          checked={isChecked}\n          round={isRoundCheckbox}\n        />\n      );\n    };\n    return (\n      <ListItem\n        key={id}\n        className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        allowDisabledClick={Boolean(onDisabledClick)}\n        secondaryIcon={shouldRenderLockIcon ? 'lock-badge' : undefined}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        ripple\n      >\n        {!isRoundCheckbox ? renderCheckbox() : undefined}\n        {category ? renderCategory(category) : renderChatInfo(id)}\n        {isRoundCheckbox ? renderCheckbox() : undefined}\n      </ListItem>\n    );\n  }, [\n    categoriesByType, isRoundCheckbox, isViewOnly, lockedSelectedIdsSet, lockedUnselectedIdsSet,\n    onDisabledClick, renderChatInfo, selectedCategories, selectedIds,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    return (\n      <div key=\"categories\">\n        {Boolean(categories?.length) && (\n          <>\n            {categoryPlaceholderKey && <div className=\"picker-category-title\">{lang(categoryPlaceholderKey)}</div>}\n            {categories?.map((category) => renderItem(category.type, true))}\n            <div className=\"picker-category-title\">{lang('FilterChats')}</div>\n          </>\n        )}\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName('Picker', className)}>\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PickerSelectedItem\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName('picker-list', 'custom-scroll', isRoundCheckbox && 'withRoundedCheckbox')}\n          items={viewportIds}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  customPeer?: CustomPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  customPeer,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <Icon name={icon} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (customPeer || user || chat) {\n    iconElement = (\n      <Avatar\n        peer={customPeer || user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = (customPeer && lang(customPeer.titleKey))\n      || (!chat || (user && !isSavedMessages)\n        ? getUserFirstOrLastName(user)\n        : getChatTitle(lang, chat, isSavedMessages));\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    (chat?.isForum || customPeer?.isAvatarSquare) && 'square-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(customPeer || chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb canvas-blur-setup\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const userProfilePhotos = user?.profilePhotos;\n  const chatProfilePhotos = chat?.profilePhotos;\n  const photos = userProfilePhotos?.photos || chatProfilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePrevious(mediaIndex);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, userProfilePhotos?.count || 0, chatProfilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userProfilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userProfilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userProfilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userProfilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userProfilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        lang={lang}\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content);\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n  return orderBy(chatIds, (id) => {\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftPremiumModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftPremiumModal({ forUserIds: [user.id] });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\">{renderText(lang(valueKey, [formattedDate, age], undefined, age))}</div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUserFullInfo, ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { debounce } from '../../../util/schedulers';\nimport stopEvent from '../../../util/stopEvent';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const lang = useOldLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: lang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, lang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), lang(isChat ? 'Link' : 'Username'));\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir=\"auto\">{formatUsername(mainUsername.username, isChat)}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{lang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {lang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{lang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" ripple onClick={handleOpenSavedDialog}>\n          <span>{lang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  shouldDelayInit?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  shouldDelayInit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          loopLimit={loopLimit}\n          forceAlways={!shouldDelayInit}\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways={!shouldDelayInit}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways={!shouldDelayInit}\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden, isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useOldLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaHasPreview = lastMessage && !getMessageSticker(lastMessage);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(lastMessage) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getPhotoMediaHash, getVideoProfilePhotoMediaHash } from '../../global/helpers';\nimport { fetchBlob } from '../../util/files';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const photo = message.content.action!.photo!;\n  const suggestedPhotoUrl = useMedia(getPhotoMediaHash(photo, 'full'));\n  const suggestedVideoUrl = useMedia(getVideoProfilePhotoMediaHash(photo));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    if (!suggestedVideoUrl) return;\n\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const blob = await fetchBlob(suggestedVideoUrl);\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetchBlob(suggestedPhotoUrl));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        messageId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(chat: ApiChat, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(chat), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const {\n    openPremiumModal, requestConfetti, checkGiftCode, getReceipt,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isGiftCode = Boolean(message.content.action?.text.startsWith('BoostingReceivedGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}</strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(lang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(lang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'BoostingUnclaimedPrizeDuration',\n            lang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{lang('BoostingReceivedGiftOpenBtn')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type LangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', !noThumb && 'canvas-blur-setup', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useSignal,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat, getMessageMediaThumbDataUri, getVideoMediaHash, hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled);\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', 'canvas-blur-setup', thumbClassNames)}\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldSpinnerRender && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldSpinnerRender && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', !noThumb && 'canvas-blur-setup', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    case 'telegram_stickerset':\n      return 'lng_view_button_stickerset';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useCanvasBlur(\n    dataUri,\n    isDisabled,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n  scrollTargetPosition?: ScrollTargetPosition,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          scrollPosition,\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  onClose,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions,\n\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction, ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../../hooks/useMenuPosition';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  shouldDelayInit?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  shouldDelayInit,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n\n  const getLayout = () => ({ withPortal: true, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n        shouldDelayInit={shouldDelayInit}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuPosition && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiPostStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport {\n  selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"suggestedReaction\":\"WQ5DA3P_\",\"dark\":\"eic2vQ8c\",\"background\":\"j4MKFabm\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const {\n    openMapModal, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url': {\n            const isShiny = isActive && (mediaArea.type !== 'channelPost');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    Boolean(radius) && `border-radius: ${radius}%`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type {\n  ApiInputInvoice, ApiRequestInputInvoice, ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { GlobalState } from '../types';\n\nimport { formatInteger } from '../../util/textFormat';\nimport { selectChat, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug' || inputInvoice.type === 'stars') return inputInvoice;\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      peerColorId: -1, // Defaults to black\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(amount: number) {\n  if (amount < 0) {\n    return `- ${formatInteger(Math.abs(amount))}`;\n  }\n\n  return `+ ${formatInteger(amount)}`;\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        canvas.classList.remove('canvas-blur-setup');\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useSignal } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  addLocalizationCallback,\n  getTranslationFn,\n  type LangFn,\n} from '../util/localization';\nimport useEffectOnce from './useEffectOnce';\nimport useForceUpdate from './useForceUpdate';\n\nconst useLang = (): LangFn => {\n  const forceUpdate = useForceUpdate();\n\n  useEffectOnce(() => {\n    return addLocalizationCallback(forceUpdate);\n  });\n\n  return getTranslationFn();\n};\n\nexport default useLang;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollTargetPosition,\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import twemojiRegex from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_TO_BE_DISTRIBUTED: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'toBeDistributed',\n  titleKey: 'BoostingToBeDistributed',\n  avatarIcon: 'user',\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerMediaHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","decodedWaveform","decodeWaveform","Uint8Array","interpolateArray","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","DEFAULT_LIMIT","limit","badgeText","renderingBadgeText","root","peer","Avatar","avatar","badge","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","result","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","value","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","isUserId","chatBotFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","user","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isContactRequirePremium","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","floor","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","getMediaThumbUri","localBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","DotAnimation","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","DEFAULT_TEXT","description","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","categories","itemIds","selectedCategories","categoryPlaceholderKey","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedSelectedIds","lockedUnselectedIds","lockedUnselectedSubtitle","forceShowSelf","isViewOnly","onSelectedCategoriesChange","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","isCountryList","countryList","shouldMinimize","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","handleItemClick","categoryType","newSelectedCategories","splice","newSelectedIds","handleFilterChange","viewportIds","getMore","useInfiniteScroll","countriesByIso","renderCategory","category","PrivateChatInfo","customPeer","renderChatInfo","isUnselectable","country","defaultName","GroupChatInfo","renderItem","isCategory","shouldRenderLockIcon","isLocked","isChecked","renderCheckbox","ListItem","inactive","secondaryIcon","beforeChildren","PickerSelectedItem","clickArg","canClose","isMinimized","InputText","InfiniteScroll","Loading","isSelf","fluid","withPeerColors","iconElement","titleText","titleKey","isAvatarSquare","leftText","rightText","floatingBadgeText","floatingBadgeIcon","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","isSynced","userStatus","selectUserStatus","noFake","noVerified","adminMember","rightElement","loadFullUser","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","userProfilePhotos","profilePhotos","chatProfilePhotos","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isReadDateRestrictedByMe","renderStatus","ProfilePhoto","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentHeight","handleResize","entry","contentRect","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","priority","lastMessage","selectChatLastMessage","isVerified","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","iconClassName","multiline","isStatic","narrow","withColorTransition","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","birthday","isInSettings","openGiftPremiumModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserIds","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","runDebounced","debounce","chatOrUserId","phoneCodes","phoneCodeList","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","userFullInfo","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","areNotificationsEnabled","setAreNotificationsEnabled","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","UserBirthday","Switcher","BusinessHours","usernameList","otherUsernames","usernameLinks","s","idx","particleSize","onEnded","stickerHash","getStickerHashById","previewMediaData","paths","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","genericEffects","effectSize","shouldPause","shouldDelayInit","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","AnimatedSticker","animatedIcon","roundToNearestEven","play","CustomEmojiEffect","ChatFolderModal","MuteChatModal","lastMessageId","selectChatLastMessageId","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","shouldShowOnlyMostImportant","forceHidden","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","suggestedVideoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetchBlob","videoTs","videoSizes","l","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","fallbackColor","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","selectSimilarChannelIds","toggleChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","clearTimeout","handleToggle","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","checkGiftCode","getReceipt","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","shouldShowConfettiRef","withStars","targetUsers","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","ActionMessageSuggestedAvatar","SimilarChannels","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","isDisclaimerNeeded","withPortal","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","showSpoiler","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","handleQuickButtonClick","useEnsureStory","hasCustomColor","isWithTextColor","documents","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","Audio","Document","isEmoji","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","scrollTargetPosition","isRelocatedRef","isRelocated","messagesContainer","isToBottom","scrollPosition","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","innerWidth","anchorCenterY","anchorBottomY","REACTION_SIZE","chosen","noAppearAnimation","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","hintText","parts","isPrimary","ReactionSelectorReaction","getReactionKey","ReactionSelectorCustomReaction","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","PromptDialog","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","statistics","period","schema","getSchemaByType","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideo","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","closeStoryViewer","openUrl","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","isShiny","channelId","handleMediaAreaClick","MediaAreaSuggestedReaction","getRequestInputInvoice","inputInvoice","boostChannelId","amount","currency","option","purpose","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","peerColorId","withPremiumGradient","formatStarsTransactionAmount","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","savedCallback","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","scrollLeft","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","useEffectOnce","addLocalizationCallback","getTranslationFn","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","ConnectorClass","_len","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","p","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","RE_EMOJI_ONLY","lines","fixNonStandardEmoji","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_TO_BE_DISTRIBUTED","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange","encoded5bit","bitsCount","valuesCount","bitsData","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","fitCount","newData","springFactor","leftFiller","rightFiller","val"],"sourceRoot":""}