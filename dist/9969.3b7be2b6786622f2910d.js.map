{"version":3,"file":"9969.3b7be2b6786622f2910d.js","mappings":"yOAgCA,MA0FA,GAAeA,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAA6B,IAA3B,OAAEC,GAAQD,EACjB,MAAME,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1BG,GAAYC,EAAAA,EAAAA,IAAoBN,EAAQE,GAG9C,MAAO,CACLG,YACAE,WAJwBC,EAAAA,EAAAA,KAAeR,GAAQS,YAAcT,EAAOU,WAAWC,uBAAoBC,KAInEP,GAAWQ,IAAMC,QAC/CT,EACIA,EAAUU,kBAAoB,GAAKV,EAAUW,SAC7Cb,GAAQA,EAAKc,gBAAkBd,EAAKe,cAE3C,GAbenB,EAxFgCoB,IAM9C,IAN+C,OACnDjB,EAAM,SACNK,EAAQ,UACRa,EAAS,UACTf,EAAS,gBACTgB,GACDF,EACC,MAAM,8BACJG,EAA6B,4BAC7BC,IACEC,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEPC,GAAsBC,EAAAA,EAAAA,KAAY,KACtCN,EAA8B,CAC5BpB,UACA,GACD,CAACoB,EAA+BpB,IAE7B2B,EAAexB,GAAWwB,aAE1BC,GAAsBC,EAAAA,EAAAA,KAAQ,KAClC,IAAKF,EACH,MAAO,GAIT,MAAMG,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KAC9BC,GAAYH,EAAAA,EAAAA,MAAYI,MAAMF,KAEpC,OAAOG,OAAOC,OAAOV,GAClBW,MAAM,EAlCiB,GAmCvBC,KAAIC,IAAA,IAAC,GAAE7B,GAAI6B,EAAA,OAAKV,EAAUnB,IAAOuB,EAAUvB,EAAG,IAC9C8B,OAAO7B,QAAQ,GACjB,CAACe,KAEJe,EAAAA,EAAAA,KAAU,KACR,GAAKvC,GAAWQ,KACXN,IAAYF,EAAUW,UAO3B,OALAO,EAA4B,CAC1BV,GAAIR,EAAUQ,GACdgC,YAAY,IAGP,KACLtB,EAA4B,CAC1BV,GAAIR,EAAUQ,GACdgC,YAAY,GACZ,CACH,GACA,CAACxC,GAAWQ,GAAIR,GAAWW,SAAUT,EAAUgB,IAElD,MAAM,aACJuB,EAAY,qBACZC,IACEC,EAAAA,EAAAA,GAAkBlC,QAAQT,GAAaE,IAErC0C,GAA4BC,EAAAA,EAAAA,GAAiB7C,GAAWU,mBAAmB,GAC3EoC,GAA+BD,EAAAA,EAAAA,GAAiBpB,GAAqB,GAE3E,GAAKgB,EAEL,OACEM,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GACT,mBACAjC,GAAmB,oBACnBD,EACA2B,GAEFQ,QAAS5B,GAETyB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACbgC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAASK,EAAK,uBAC9B2B,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAgBK,EAAK,eAAgBwB,GAA6B,EAAG,OAEtFnC,QAAQqC,GAA8BK,SACrCJ,EAAAA,GAAAC,cAACI,EAAAA,EAAU,CAACC,KAAK,QAAQC,MAAOR,EAA8B/B,UAAU,YAE1EgC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACC,OAAK,EAACzC,UAAU,QACrBK,EAAK,iBAEJ,I,yGCrHV,MCsEA,EApDsCN,IAGhC,IAHiC,KACrC2C,EAAI,UACJ1C,GACDD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEPqC,GAAcC,EAAAA,EAAAA,OACbC,EAAaC,EAAeC,IAAmBC,EAAAA,EAAAA,IAAQ,GAExDC,GAAgBC,EAAAA,EAAAA,MAA0BrC,EAAAA,EAAAA,OAE1CsC,GAAcxC,EAAAA,EAAAA,KAAQ,KAC1B,IAAKsC,EACH,OAAOP,EAET,IAAKG,EACH,OAAOF,EAAYS,SAAWV,EAGhC,MAAMW,EAAWV,EAAYS,QAEvBE,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAKN,OAAQmB,IAC3BF,GAAYX,EAAKa,KAAOF,EAASE,GACnCD,EAASE,KACPxB,EAAAA,GAAAC,cAAA,OAAKjC,UD3CyE,YC4C5EgC,EAAAA,GAAAC,cAAA,OAAKjC,UD5C8F,YC4ChE0C,EAAKa,IACxCvB,EAAAA,GAAAC,cAAA,OAAKjC,UD7CmJ,WC6CnHyD,eAAgBV,GAAkBM,EAASE,IAChFvB,EAAAA,GAAAC,cAAA,OAAKjC,UD9CyQ,WC8CzOyD,eAAgBV,GAAkBL,EAAKa,MAIhFD,EAASE,KAAKxB,EAAAA,GAAAC,cAAA,YAAOS,EAAKa,KAM9B,OAFAZ,EAAYS,QAAUV,EAEfY,CAAQ,GACd,CAACL,EAAeJ,EAAaH,IAMhC,OAJAlB,EAAAA,EAAAA,KAAU,KACRsB,GAAe,GACd,CAACJ,IAGFV,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GDhEE,WCgE0BlC,GAAY0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAChF2D,EACI,C,kUC1BX,SAAezE,EAAAA,EAAAA,KAzBf,SAAiCkF,GAC/B,MAAM,QACJC,EAAO,OAAEC,EAAM,aAAEC,KAAiBC,GAChCJ,EAEEK,EAAeJ,GAASK,WAAWC,QACnCC,EAAiBP,GAAY,UAASA,EAAQpE,KAC9C4E,GAAiBC,EAAAA,EAAAA,GACrBT,GAAUU,EAAAA,EAAAA,IAAsBV,EAAQpE,SAAMD,EAC9CsE,IAAWC,EACXS,EAAAA,GAAeC,SAEXC,GAASJ,EAAAA,EAAAA,GAASF,EAAgBN,GAExC,OACE9B,EAAAA,GAAAC,cAAC0C,EAAAA,EAAuBC,EAAA,CACtBF,OAAQA,EACRG,WAAYR,EACZJ,aAAcA,GAEVD,GAGV,G,mHCtCA,QAA4C,W,oOCkB5C,MAEMc,EAAoB,IAAIC,IAoD9B,GAAerG,EAAAA,EAAAA,KAlDf,SAAiCkF,GAC/B,MAAM,WACJiB,EAAU,aAAEZ,EAAY,UAAEjE,KAAcgE,GACtCJ,GAEGoB,EAAY,CAAGC,IAAmBjC,EAAAA,EAAAA,GAAQtD,QAAQuE,IACnDiB,GAAkBC,EAAAA,EAAAA,GAAmBH,IAEpCI,EAAeC,EAAiBC,IAAqBtC,EAAAA,EAAAA,GAAQ8B,EAAkBS,IAAIV,IACpFW,GAAoBL,EAAAA,EAAAA,GAAmBC,IAEtCK,EAAkBC,IAAsB1C,EAAAA,EAAAA,IAAQ,GAEjD2C,GAAoBC,EAAAA,EAAAA,IAAgB,KACxCP,IACAP,EAAkBe,IAAIhB,EAAW,IAG7BiB,GAAuBF,EAAAA,EAAAA,IAAgB,KAC3CX,IACAK,IACAS,WAAWL,EAzBY,IAyB2B,KAG9C,KAAEpD,GAASsB,EAEjB,OACE5B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAelC,EDlDT,YCmDjBgG,OAAOC,EAAAA,EAAAA,QAAoBzG,IAAT8C,GAAuB,UAASA,gBAAmBA,SAEpE2B,IAAiBwB,GAEhBzD,EAAAA,GAAAC,cAAA,OAAKiE,IAAKjC,EAAcjE,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAgBjB,GAAkBkB,WAAW,IAEhGvB,IAAeY,GAEdzD,EAAAA,GAAAC,cAAA,OACEiE,IAAKrB,EACL7E,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAgBX,GAC1CY,WAAW,EACXC,OAAQV,IAIZ3D,EAAAA,GAAAC,cAACqE,EAAAA,EAAY1B,EAAA,GAAKZ,EAAU,CAAEqC,OAAQP,KAG5C,G,wUCMO,MAAMS,EAAwBC,OAAOC,WAAW,sBAC1CC,EAAoCF,OAAOC,WAAW,sBA8lBnE,SAASE,EACPC,EACAC,EACAC,GAEA,OACE9E,EAAAA,GAAAC,cAAA,OACEjC,UAAU,WACV+G,IAAKD,GAEJD,EAAexF,KAAIC,IAAA,IAAC,MAAE0F,EAAK,IAAEC,GAAK3F,EAAA,OACjCU,EAAAA,GAAAC,cAAA,OACEjC,UAAU,6BACVgG,MAAQ,SAAgB,IAARgB,cAAwB,IAAY,IAANC,MAC9C,IAEJjF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,0BACdgC,EAAAA,GAAAC,cAAA,KACEjC,UAAU,+BACVgG,MAAQ,yBAAuC,IAAfY,SAGpC5E,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,kBACdgC,EAAAA,GAAAC,cAAA,KACEjC,UAAU,uBACVgG,MAAQ,yBAAuC,IAAfY,SAK1C,CAEA,SAAelI,EAAAA,EAAAA,KAznBaqB,IAyBtB,IAzBuB,MAC3BmH,EAAK,QACLC,EAAO,YACPC,EAAW,eACXC,EAAc,OACdC,EAAM,KACNC,EAAI,UACJC,EAAS,UACTxH,EAAS,aACTyH,EAAY,WACZC,EAAU,cACVC,EAAa,eACbC,EAAc,sBACdC,EAAqB,cACrBC,EAAa,qBACbC,EAAoB,YACpBC,EAAW,cACXC,EAAa,SACbC,EAAQ,oBACRC,EAAmB,OACnBC,EAAM,QACNC,EAAO,YACPC,EAAW,eACXC,EAAc,YACdC,GACDzI,EACC,MAAM,2BACJ0I,GAA0B,qBAAEC,GAAoB,gBAAEC,GAAe,sBAAEC,KACjExI,EAAAA,EAAAA,OAGFyI,SACEC,MAAOC,GAAY,MAAEC,GAAK,MAAEC,IAC7B,cAAEC,IACD/B,EACE2B,GAAQC,KAAgBI,EAAAA,EAAAA,IAAuBhC,GAC/CiC,GAAU1J,QAAQsJ,IAASC,IAC3BI,IAAYzG,EAAAA,EAAAA,KAAgB,GAE5BkE,IAAYlE,EAAAA,EAAAA,IAAuB,MACnCvC,IAAOC,EAAAA,EAAAA,MACP,MAAEqD,IAAUtD,IAEZ,SAAEiJ,KAAaC,EAAAA,EAAAA,OACdC,GAAaC,KAAkBC,EAAAA,EAAAA,KAAS,GACzCC,GAAaH,KA/CL,EAgDRI,IAAYC,EAAAA,EAAAA,IAAoB1C,EAAS,aACzC2C,IAAexF,EAAAA,EAAAA,GAASsF,IAAW,EAAOpF,EAAAA,GAAeC,SACzDsF,IAASC,EAAAA,EAAAA,IAAc7C,GACvB8C,GAAmB3C,IAAW4C,EAAAA,GAAYC,aAC1CC,GAAYhB,GAAWW,GAAS,eAAiB,QAAW,QAE5DM,IAAY/F,EAAAA,EAAAA,IAChBuF,EAAAA,EAAAA,IAAoB1C,EAAS,WAC5BwC,IACDW,EAAAA,EAAAA,IAAsBnD,EAAS,YAGzBoD,aAAcC,KAAqBC,EAAAA,EAAAA,IACzCZ,EAAAA,EAAAA,IAAoB1C,EAAS,aAC5BQ,GACD2C,EAAAA,EAAAA,IAAsBnD,EAAS,aAG3BuD,IAAkB9E,EAAAA,EAAAA,IAAgB,KACtC6D,IAAe,GACfrB,IAASjB,EAAQ1H,GAAI0H,EAAQrI,OAAO,IAGhC6L,IAAoB/E,EAAAA,EAAAA,IAAgB,KACxC6D,IAAe,EAAM,KAGjB,WACJmB,GAAU,eAAE/D,GAAc,kBAAEgE,GAAiB,eAAEC,KAC7CC,EAAAA,EAAAA,KAEEC,GAAUf,IACV,UACJgB,GAAS,aAAErE,GAAY,UAAEsE,GAAS,eAAEC,GAAc,SAAEC,KAClDC,EAAAA,EAAAA,IACFC,EAAAA,EAAAA,IAAYnE,IACZoE,EAAAA,EAAAA,IAAiBpE,GACjBiD,GACAC,GACAQ,QACArL,EACAsL,GACApL,QAAQ8J,IAAetB,GACvBwC,GACAC,IACAa,EAAAA,EAAAA,IAAerE,IAAY4C,QAC3BvK,EACA6I,EACA2C,GACAjB,KAAWE,IAGPwB,GAAsB,EAAI7E,GAC1B8E,IAAQC,EAAAA,EAAAA,IAAaxE,GACrByE,GAAY7B,IAAUE,GAEtB4B,GAybR,SACE3E,EACA8B,GAMA,IALApC,EAAYkF,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,EACfJ,EAAKI,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACLC,EAAUD,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACVxC,EAAQwC,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACRF,EAASE,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAGT,MAAME,GAAYpJ,EAAAA,EAAAA,IAA0B,OAEpCqJ,KAAMC,EAAM,KAAEC,IAASxL,EAAAA,EAAAA,KAAQ,KACrC,IAAKqI,EACH,OAGF,MAAM,SAAEoD,EAAQ,SAAEhB,GAAapC,EAC/B,IAAKoD,EACH,MAAO,CACLH,KAAM,IAAII,MAAMC,KAAKC,IAAInB,EChoBQ,KDgoB8BoB,KAAK,GACpEL,KAAM,GAIV,MAAM,WAAEM,EAAU,WAAEC,GAtKxB,SAAiCpD,EAAoByC,GACnD,MAAO,CACLU,WAAYnD,EAAY/C,EAAsBoG,QAAU,GAAK,GAAM,GACnED,WAAYpD,EACP/C,EAAsBoG,QACrB,GACCZ,GAAcrF,EAAkCiG,QAAU,GAAK,GAClE,GAER,CA6JuCC,CAAwBtD,EAAUyC,GAC/Dc,EAAiBP,KAAKC,IAAInB,EA7jBT,GA6jBwC,GACzD0B,EAAcR,KAAK7J,MAAMgK,GAAcC,EAAaD,GAAcI,GAClEE,GAAkBC,EAAAA,EAAAA,GAAe,IAAIC,WAAWb,IAEtD,OAAOc,EAAAA,EAAAA,GAAiBH,EAAiBD,EAAY,GACpD,CAACxD,EAAUN,EAAO+C,KAAgB,CAAC,EAwBtC,OAtBAoB,EAAAA,EAAAA,KAAgB,KACd,MAAMC,EAASpB,EAAU5I,QAEpBgK,GAAWlB,QAAmB1M,IAAT2M,GC1oBvB,SACLiB,EACAlB,EACAmB,EAAgBtN,GAIhB,IAHA,KACEoM,EAAI,UAAEmB,EAAS,kBAAEC,GACFxN,EAEjB,MAAMyN,EAZW,EAYHtB,EAAO9J,OAGrBgL,EAAOI,MAAgB,EAARA,EACfJ,EAAOK,OAASA,GAChBL,EAAOpH,MAAMwH,MAAS,GAAEA,MACxBJ,EAAOpH,MAAMyH,OAAU,OAEvB,MAAMC,EAAMN,EAAOO,WAAW,MAC9BD,EAAIE,MAAM,EAAG,GAEb1B,EAAO2B,SAAQ,CAACC,EAAMvK,KACpBmK,EAAIK,YAAexK,EAAI2I,EAAO9J,QAAUiL,EAAY,GAAM,EAC1DK,EAAIJ,UAAYD,EAAW9J,EAAI2I,EAAO9J,OAASmL,EAAoBD,EACnE,MAAMU,EAAc1B,KAAK2B,IAAI,EAAaH,EAAOxB,KAAK2B,IAAI,EAAG9B,GAxBlD,KA8Bf,SACEuB,EAA+BQ,EAAWC,EAAWX,EAAeC,EAAgBW,GANhBC,EAQxD,EAAID,IACdA,EAASZ,GAEPC,EAAS,EAAIW,IACfA,EAASX,EAAS,GAGpBC,EAAIY,YACJZ,EAAIa,OAAOL,EAAIE,EAAQD,GACvBT,EAAIc,MAAMN,EAjB0DG,EAiB/CF,EAAGD,EAjB4CG,EAiBjCF,EAAIV,EAAQW,GAC/CV,EAAIc,MAAMN,EAlB0DG,EAkB/CF,EAAIV,EAAQS,EAAGC,EAAIV,EAAQW,GAChDV,EAAIc,MAAMN,EAAGC,EAAIV,EAAQS,EAAGC,EAAGC,GAC/BV,EAAIc,MAAMN,EAAGC,EAAGD,EApBoDG,EAoBzCF,EAAGC,GAC9BV,EAAIe,WACN,CAtBIC,CAAiBhB,EA3BF,EA2BOnK,GAzBX,GAyBqCyK,GAAe,EA5B/C,EA4B+DA,EA1B9D,GA2BjBN,EAAIlB,MAAM,GAEd,CD4nBImC,CAAevB,EAAQlB,EAAQN,EAAY,EAAIhF,EAAeA,EAAc,CAC1EuF,OACAmB,UALgB5B,EAJa,SAAVxE,EAAmB,UAAY,UADxB,SAAVA,EAAmB,UAAY,UAW/CqG,kBALwB7B,EAHa,SAAVxE,EAAmB,UAAY,UADxB,SAAVA,EAAmB,UAAY,WAUvD,GACD,CAACwE,EAAOS,EAAMvF,EAAcsF,EAAQhF,EAAO0E,IAEvCI,CACT,CAjf4B4C,CACxB1H,EACA8B,IACCE,IAAkBwC,IAAUE,GAAiBhF,GAAJ,EAC1C8E,IACClE,EACD8B,GACAsC,IAGIiD,GAAe5D,IAAcrE,GAAe,GAAKA,GAAe,GAEtEpF,EAAAA,EAAAA,KAAU,KACRiI,GAAewB,GAAU,GACxB,CAACA,KAEJ,MAAM6D,GAAsBtF,KAAgBoB,IAEtC,YACJmE,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IACF/H,EACAE,GAAkBmD,GAClBsE,IAAuBnH,OACJnI,IAAnB6H,IAIA3F,aAAcyN,GACdxN,qBAAsByN,KACpBxN,EAAAA,EAAAA,GAAkBoN,IAEhBK,GAAoBF,KAAwBL,IAAuBC,IAEnEO,IAAoB1J,EAAAA,EAAAA,IAAgB,KACxC,GAAImJ,GACFxG,UADF,CAKA,GAAIwB,GAGF,OAFAnB,GAAsB,CAAEzB,iBACxBmB,MAIG2C,IACH7C,IAASjB,EAAQ1H,GAAI0H,EAAQrI,SAG/BsB,EAAAA,EAAAA,MAAamP,qBAAqB,CAAEjI,WACpCmC,IAAgBD,IAChB0B,IAdA,CAcW,KAGb1J,EAAAA,EAAAA,KAAU,KACJ8G,GAAeY,KAAkB+B,IAAatD,IAChDW,GACF,GACC,CAAC2C,GAAW/B,GAAeZ,EAAaX,IAE3C,MAAM6H,IAAsB5J,EAAAA,EAAAA,IAAgB,KACtC+B,EACFc,GAA2B,CAAEtB,YAE7BuB,GAAqB,CAAEvB,WACzB,IAGIsI,IAAa7J,EAAAA,EAAAA,IAAiB8J,IAClC,GAAIrG,GAAUjG,SAAW0D,GAAU1D,QAAS,CAC1C,MAAM,MAAEoK,EAAK,KAAEmC,GAAS7I,GAAU1D,QAAQwM,wBACpCC,EAAUH,aAAaI,WAAaJ,EAAEG,QAAUH,EAAEK,cAAc,GAAGF,QACzEH,EAAEM,kBAEF7E,GAAemB,KAAK2B,IAAI3B,KAAKC,IAAInB,KAAayE,EAAUF,GAAQnC,GAAQpC,GAAW,IAAM,MAC3F,KAGI6E,IAAkBrK,EAAAA,EAAAA,IAAiB8J,IACnCA,aAAaI,YAA2B,IAAbJ,EAAEQ,SACjC7G,GAAUjG,SAAU,EACpBqM,GAAWC,GAAE,IAGTS,IAAiBvK,EAAAA,EAAAA,IAAgB,KACrCyD,GAAUjG,SAAU,CAAK,IAGrBgN,IAAkBxK,EAAAA,EAAAA,IAAgB,KACtC4C,EAAarB,EAAQ1H,GAAI0H,EAAQrI,OAAO,IAGpCuR,IAAmBzK,EAAAA,EAAAA,IAAgB,KACvC+C,GAAgB,CAAE7J,OAAQqI,EAAQrI,OAAQwR,UAAWnJ,EAAQ1H,IAAK,IAapE,SAAS8Q,KACP,GAAInH,GACF,OAAOhC,GAAe,QAGxB,MAAM,MAAEoJ,EAAK,SAAEC,GAAa3H,GAE5B,OAAO0H,GAASC,CAClB,EAlBAjP,EAAAA,EAAAA,KAAU,KACR,GAAKsF,GAAU1D,SAAYyL,KAAgB5E,GAC3C,OAAOyG,EAAAA,EAAAA,IAAc5J,GAAU1D,QAAS,CACtCuN,UAAWV,GACXW,UAAWT,GACXhO,QAASgO,GACTU,OAAQpB,IACR,GACD,CAACZ,GAAcoB,GAAiBR,GAAYU,GAAgBlG,KAkC/D,MAAM6G,IAAgB5O,EAAAA,EAAAA,GACpB,QACAlC,EACAiK,IAAoB,kBACpB3C,IAAW4C,EAAAA,GAAY6G,QAAU,SACjCrF,IAASpE,IAAW4C,EAAAA,GAAY6G,QAAU,OACzCzJ,IAAW4C,EAAAA,GAAY8G,QAAU1J,IAAW4C,EAAAA,GAAY+G,cAAgB,SACzEvJ,GAAc,qBAGVwJ,GAAmB,CAAC,uBACtB7B,GACF6B,GAAiB1N,KAAK,WAEtB0N,GAAiB1N,KAAKyH,GAAY,QAAU,QAG9C,MAAMkG,IAAmBjP,EAAAA,EAAAA,GAAe,UAAW2M,IAAgB,iBAEnE,SAASuC,KACP,OACEpP,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmR,IACdnP,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,QAAQ0D,IAAI,OAAO8M,MAAOD,OAAoBc,EAAAA,EAAAA,GAAWd,OAEtEvO,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACZN,QAAQ6H,IACPvF,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CACHtR,UAAU,OACVmC,QAASiO,KAERmB,EAAAA,EAAAA,IAAoBlR,GAAa,IAAPkH,MAMlCsH,IACC7M,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,qBAAqB0D,IAAKC,GAAQ,WAAQnE,GACvDwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyB0D,IAAI,QAC1CkD,GAAe,GAAM,IAAE4K,EAAAA,EAAAA,IAAoBpG,GAAWxE,GAAcwE,OAEtEzE,EAAeC,GAAcC,GAAgBC,MAGhD+H,IAnER,WACE,GAAIzF,GACF,OACEpH,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,GAAQ,WAAQnE,IACxCgS,EAAAA,EAAAA,KAAqBxI,IAASC,IAAQmC,WAK7C,MAAM,UAAEqG,GAAc3I,GAEtB,OACE9G,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,GAAQ,WAAQnE,IACxCgS,EAAAA,EAAAA,IAAoBpG,IACrBpJ,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACxByR,GAAazP,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYwQ,MAAOiB,IAAYJ,EAAAA,EAAAA,GAAWI,IACvEA,GAAarK,GAAepF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACrDoH,GAAepF,EAAAA,GAAAC,cAAA,QAAMuO,MAAOpJ,IAAciK,EAAAA,EAAAA,GAAWjK,IAG5D,CA+CwBsK,GAGxB,CAoCA,OACE1P,EAAAA,GAAAC,cAAA,OAAKjC,UAAW8Q,GAAepN,IAAKrD,GAAKsD,MAAQ,MAAQ,OACtD8D,GACCzF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACZ0H,GAAc1F,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBApChCgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,MAAkBgP,KAChClP,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLkP,QAASrI,GACThH,KAAK,UACLtC,UAAU,cACV4R,MAAO9H,GAAe,oBAAsB,UAC5C+H,UAAW5G,GAAY,cAAgB,aACvC9I,QAASmN,GACT3L,MAAOtD,GAAKsD,MACZmO,gBAAiBhI,GACjBiI,eAAgB9H,KAEdA,IAAoBjI,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,UAC/BhI,IAAoBjI,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,UAChChI,IACCjI,EAAAA,GAAAC,cAACqE,EAAAA,EAAY,CACXtG,UAAU,QACV0E,OAAQwN,EAAAA,EAAeC,MACvBJ,gBAAc,EACdK,QAAQ,EACR9P,KAAM,MAIXyH,KAAWE,IACVjI,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,eAcd9C,IACCnN,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBkN,GAAmBC,IAAqB,gBACtFrN,EAAAA,GAAAC,cAACoQ,EAAAA,EAAe,CACdhF,SAAU4B,GACVqD,aAAW,EACXC,WAAS,EACTjQ,KAAK,IACLH,QAASkN,GAAoBC,QAAoB9P,EACjDgT,SAAUnD,MAIfpF,KAAqBkF,IACpBnN,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,kBAC7BF,EAAAA,GAAAC,cAACoQ,EAAAA,EAAe,CACdhF,SAAUzG,GACV0L,aAAW,EACXhQ,KAAK,IACLkQ,SAAO,EACPC,eAAgB,EAAI,KAIzB3J,IAASd,IAAgB+G,IACxB/M,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLH,KAAK,OACLtC,UAAU,kBACV6R,UAAWlK,EAAgB,kBAAoB,WAC/CxF,QAASqN,IAETxN,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAQyF,EAAgB,aAAe,sBAGvEL,IAAW4C,EAAAA,GAAY8G,QAAUI,KACjC9J,IAAW4C,EAAAA,GAAY8G,QAAUlI,IA6CxC,SACEzI,EACAyI,EACAsC,EACAH,EACArE,EACAC,EACAC,EACA4L,EACAnL,EACA8F,EACA+C,GAEA,MAAM,MACJI,EAAK,UAAEiB,EAAS,SAAEhB,GAChB3H,EACE6J,EAAe1H,GAAcrE,EAAe,GAAKA,EAAe,GAChE,MAAEjD,GAAUtD,EAElB,OACE2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,QAAQ0D,IAAI,OAAO8M,MAAOA,IAAQa,EAAAA,EAAAA,GAAWb,GAASC,IAClEkC,GACC3Q,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,EAAQ,WAAQnE,GACzCwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyB0D,IAAI,SAC1C8N,EAAAA,EAAAA,IAAoBpG,EAAWxE,EAAcwE,IAE/CzE,EAAeC,EAAcC,EAAgBC,KAGhD6L,GAAgBD,GAChB1Q,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,EAAQ,WAAQnE,GACxC6N,EAAY,IAAEuF,EAAAA,EAAAA,IAAkB9J,EAAOxG,KAAO+K,aAAiB7N,GAAWoT,EAAAA,EAAAA,IAAkB9J,EAAOxG,QAGtGqQ,IAAiBD,GACjB1Q,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OAAO0D,IAAKC,EAAQ,WAAQnE,GACzCwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,WAAW0D,IAAI,SAAQ8N,EAAAA,EAAAA,IAAoBpG,IAC1DqG,GACCzP,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACzBgC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAY0D,IAAI,OAAO8M,MAAOiB,IAAYJ,EAAAA,EAAAA,GAAWI,KAGxE/R,QAAQ6H,IACPvF,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UAAS,KACzBgC,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CAACtR,UAAU,OAAOmC,QAASiO,IAC7B0C,EAAAA,EAAAA,IAAoBzS,EAAa,IAAPkH,GAAa,MAQxD,CArGiDwL,CACzC1S,GACAyI,GACAsC,GACAH,GACArE,GACAC,GACAC,GACCa,GAAiBoH,GAClBxH,EACA0H,GACAzG,EAAc4H,QAAkB5Q,GAEjC8H,IAAW4C,EAAAA,GAAY+G,cAAgBjI,IAASC,KAAUmI,MACzD9J,IAAW4C,EAAAA,GAAY6G,QAAU9G,KAAqBjB,IAyF9D,SACEA,EACAlC,EACA+E,EACAjF,EACAsC,EACAtB,EACAC,EACAC,EACAC,EACAiL,EACA7K,EACAb,GAEA,OACEtF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,oBACbgC,EAAAA,GAAAC,cAAA,OACEjC,UAAU,WACVoG,WAAW,EACXW,IAAKD,GAEL9E,EAAAA,GAAAC,cAAA,UAAQ8E,IAAK8E,KAEdmH,GAEChR,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACL,QAASA,MACV2F,GAAiBC,IAAyBI,EAC7CA,GAAqBN,GACXD,GACVoL,GACF,GAGAhR,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GACZ,kBACA,OACC4F,GAAiBC,EAAwB,YAAc,mBACvDD,GAAiBC,KAA0BF,GAAyB,sBAGtED,GACC5F,EAAAA,GAAAC,cAAA,OAAKgR,QAAQ,YAAYjT,UAAU,eACjCgC,EAAAA,GAAAC,cAAA,QACEjC,UAAU,eACVwM,KAAK,cACLgB,MAAM,KACNC,OAAO,KACP,eAAa,IACb,kBAAgB,QAChByF,GAAG,IACHC,GAAG,IACHC,OAAO,sBACP,oBAAkB,IAClB,mBAAiB,aAO7BpR,EAAAA,GAAAC,cAAA,KACEjC,WAAWkC,EAAAA,EAAAA,GAAe,iBAAkBoF,IAAW4C,EAAAA,GAAYC,cAAgBjB,GAAiB,UACpGxF,IAAI,QAEc,IAAjBkD,GAAuC,IAAjBA,GACnB4K,EAAAA,EAAAA,IAAoBxI,EAAMoC,WAAYoG,EAAAA,EAAAA,IAAoBxI,EAAMoC,SAAWxE,IAIvF,CA9JQyM,CACErK,GACAlC,GACA+E,GACA9B,GAAS0B,GAAsB7E,GAC/BsC,GACAtB,EACAC,EACAC,EACAC,EACAE,EAAgBoI,QAAmB7Q,EACnC2I,EACAb,GAGA,G,mFEheV,SAAgB,KAAO,WAAW,aAAa,WAAW,UAAY,WAAW,YAAY,WAAW,SAAW,WAAW,YAAY,WAAW,SAAW,WAAW,aAAa,WAAW,UAAY,WAAW,oBAAoB,WAAW,gBAAkB,WAAW,cAAc,WAAW,WAAa,WAAW,aAAa,WAAW,UAAY,WAAW,aAAa,WAAW,UAAY,WAAW,OAAS,WAAW,MAAQ,YCa3bgM,EAAgB,EAuCtB,GAAe5U,EAAAA,EAAAA,KA7BkBqB,IAM3B,IAN4B,MAChCwC,EAAK,KACLD,EAAI,UACJtC,EAAS,MACTuT,EAAQD,EAAa,UACrBE,GACDzT,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KACPmT,GAAqB9S,EAAAA,EAAAA,KAAQ,IAC7B6S,KACCjR,GAAOH,QAAUG,EAAMH,QAAUmR,OAAtC,EACQ,KAAGhR,EAAMH,OAASmR,KACzB,CAACC,EAAWjR,EAAOgR,IAEtB,OACEvR,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAelC,EAAWmG,EAAOuN,KAAMvN,EAAQ,QAAO7D,MACjEoB,IAAKrD,EAAKsD,MAAQ,MAAQ,OAEzBpB,GAAOnB,MAAM,EAAGmS,GAAOlS,KAAKsS,GAAS3R,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CAACtR,KAAMA,EAAMqR,KAAMA,EAAM3T,UAAWmG,EAAO0N,WACvFJ,GACCzR,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,EAAO2N,OACpBL,GAGD,G,6OC/CV,IAAIM,EASW,SAASC,EAA8BC,GACpDF,EAAWG,QACXD,EAAQC,OACV,CAVIC,EAAAA,KACFJ,EAAaK,SAASnS,cAAc,SACpC8R,EAAWM,UAAUxO,IAAI,kCACzBuO,SAASE,KAAKC,YAAYR,I,2QCI5B,MAAMS,EAAa,sB,eCPnB,MAAMC,EAA0B,0BAE1BC,EAAe,CACnBC,KAAM,MACNC,OAAQ,SACRC,UAAW,YACXC,cAAe,eACfC,YAAa,QACbC,UAAW,OAGPC,EAAW,CACfC,OAAQ,IACRP,KAAM,SACNC,OAAQ,KACRC,UAAW,IACXM,WAAY,aACZL,cAAe,MACfC,YAAa,MACbC,UAAW,OAGPI,EAAU,CACd,KACA,KACA,KACA,KACA,KACA,MAGF,SAASC,EAAUC,GAIjB,OAHe,IAAIC,WACAC,gBAAgBF,EAAM,aAE9BhB,IACb,CAEA,SAASmB,GAAeC,EAAYC,GAClC,MAAMC,EAASxB,SAASnS,cAAcgT,EAASC,QAI/C,OAHAU,EAAOD,KAAOA,EACdC,EAAOrB,YAAYmB,EAAKG,WAAU,IAE3BD,CACT,CAEA,SAASE,GAAeJ,EAAY1P,GAClC,MAAM+P,EAAK3B,SAASnS,cAAc+D,GAGlC,OAFA+P,EAAGxB,YAAYmB,EAAKG,WAAU,IAEvBE,CACT,CAEA,SAASC,GAASC,EAAoBC,GACpC,IAAIC,EAAUD,EAAOL,WAAU,GAC/B,OAAKI,GAGDA,EAAMjQ,OAASiQ,EAAMjQ,MAAMoQ,aAAe1B,EAAaC,OACzDwB,EAAUL,GAAeK,EAASlB,EAASN,OAEzCsB,EAAMjQ,OAASiQ,EAAMjQ,MAAMqQ,YAAc3B,EAAaE,SACxDuB,EAAUL,GAAeK,EAASlB,EAASL,SAEzCqB,EAAMjQ,OAASiQ,EAAMjQ,MAAMsQ,iBAAmB5B,EAAaG,YAC7DsB,EAAUL,GAAeK,EAASlB,EAASJ,YAEzCoB,EAAMjQ,OAASiQ,EAAMjQ,MAAMsQ,iBAAmB5B,EAAaI,gBAC7DqB,EAAUL,GAAeK,EAASlB,EAASH,gBAEzCmB,EAAMjQ,OAASiQ,EAAMjQ,MAAMuQ,gBAAkB7B,EAAaK,cAC5DoB,EAAUL,GAAeK,EAASlB,EAASF,cAEzCkB,EAAMjQ,OAASiQ,EAAMjQ,MAAMuQ,gBAAkB7B,EAAaM,YAC5DmB,EAAUL,GAAeK,EAASlB,EAASD,YAGtCmB,GArBEA,CAsBX,CAiBA,SAASK,GAAkBC,GACzB,MAAMf,EAAOe,EAAMZ,WAAU,GAC7B,IAAIM,EAAU/B,SAASsC,eAAehB,EAAKiB,aAAe,IACtDC,EAAalB,EAQjB,MAPsB,MAAlBA,EAAKmB,WACPV,EAAUV,GAAeU,EAAUT,EAA2BC,MAC1D,UAAWD,EAAKoB,WAAW,IAAMpX,QAAQgW,EAAKoB,WAAW,GAAG9Q,SAC9D4Q,EAAalB,EAAKoB,WAAW,KAGjCX,EAAUH,GAASY,EAA2BT,GACvCA,CACT,CAEA,SAASY,GAAarB,GACpB,GAAIA,EAAKoB,aAAepB,EAAKoB,WAAW1U,QAAU,GAAuB,OAAlBsT,EAAKmB,UAAuC,OAAlBnB,EAAKmB,UAAoB,CACxG,IAAIG,EACAb,EAAU/B,SAASsC,eAAehB,EAAKiB,aAAe,IAC1D,GAAsB,OAAlBjB,EAAKmB,UAAuC,OAAlBnB,EAAKmB,UAAuC,OAAlBnB,EAAKmB,SAAmB,CAC9EG,EAAa5C,SAASnS,cAAcyT,EAAKmB,UACzCV,EAAU/B,SAAS6C,yBACnB,MAAMC,EAAQ,GACd,IAAK,IAAI3T,EAAI,EAAGA,EAAImS,EAAKoB,WAAW1U,OAAQmB,IAC1C2T,EAAM1T,QAAQuT,GAAarB,EAAKoB,WAAWvT,KAE7C2T,EAAM7V,KAAKkC,GAAkB4S,EAAQ5B,YAAYhR,IACnD,MAA+C,IAApC6R,EAAQ+B,QAAQzB,EAAKmB,WAC9BG,EAAa5C,SAASnS,cAAcyT,EAAKmB,UACzCV,EAAUK,GAAkBd,EAAKoB,WAAW,KACjB,MAAlBpB,EAAKmB,UACdG,EAAa5C,SAASnS,cAAc,KACpCkU,EA9CN,SAA0BM,GACxB,MAAMf,EAAOe,EAAMZ,WAAU,GAC7B,IAAIM,EAAU/B,SAASsC,eAAehB,EAAKiB,aAAe,IACtDC,EAAaxC,SAASsC,eAAe,IASzC,MARI,UAAWhB,EAAKoB,WAAW,IAAMpX,QAAQgW,EAAKoB,WAAW,GAAG9Q,SAC9D4Q,EAAalB,EAAKoB,WAAW,IAE3BpB,EAAKoB,WAAW,IAAsC,MAAhCpB,EAAKoB,WAAW,GAAGD,WAC3CV,EAAUV,GAAeU,EAAQN,WAAU,GAAQH,EAAKoB,WAAW,GAAyBnB,MAC5FiB,EAAalB,EAAKoB,WAAW,GAAGA,WAAW,IAE7CX,EAAUH,GAASY,EAA2BT,GACvCA,CACT,CAiCgBiB,CAAiB1B,IACA,OAAlBA,EAAKmB,SACdV,EAAUT,GAEVsB,EAAa5C,SAASnS,cAAc,QACpCkU,EAAUK,GAAkBd,IAE9B,OAAIsB,GACFA,EAAWzC,YAAY4B,GAChB,CAACa,IAGH,CAACtB,EAAKG,WAAU,GACzB,CAEA,GAAIH,EAAKoB,WAAY,CACnB,MAAMO,EAAQ,GACd,IAAK,IAAI9T,EAAI,EAAGA,EAAImS,EAAKoB,WAAW1U,OAAQmB,IAC1C8T,EAAM7T,QAAQuT,GAAarB,EAAKoB,WAAWvT,KAE7C,OAAO8T,CACT,CAEA,MAAO,CAAC3B,EACV,CAEA,SAAS4B,GAAW5B,GAClB,OAAyB,IAAlBA,EAAK6B,QACd,CCxJA,MAAMC,GAAkB,0B,gBCYxB,MAsHA,GAhH0BC,CACxBtY,EACAuY,EACAC,EACAC,EACAC,EACAC,EACAC,KAEA,MAAM,iBAAEC,IAAqB5X,EAAAA,EAAAA,MACvBC,GAAOC,EAAAA,EAAAA,MAEbkB,EAAAA,EAAAA,KAAU,KACR,GAAKrC,EA0FL,OAFAiV,SAAS6D,iBAAiB,QAASC,GAAa,GAEzC,KACL9D,SAAS+D,oBAAoB,QAASD,GAAa,EAAM,EAvF3DE,eAAeF,EAAYxI,GACzB,IAAKA,EAAE2I,cACL,OAGF,MAAMC,EAAQlE,SAASmE,cACvB,GAAID,IAAU,CAACE,EAAAA,IAAmBC,EAAAA,IAAyBC,EAAAA,KAAyBC,SAASL,EAAM7Y,IACjG,OAGF,MAAMmZ,EAAalJ,EAAE2I,cAAcQ,QAAQ,QAAQC,UAAU,EAjCxC,MAkCfxD,EAAO5F,EAAE2I,cAAcQ,QAAQ,aAErC,IAAIE,EAAsBzD,GAAO0D,EAAAA,EAAAA,ID9ChC,SAA2B1D,GAChC,IAAI2D,EAAW7E,SAASnS,cAAc,OACtC,IACEqT,GDsKkC4D,ECtKb5D,GDuKD6D,MAAM1E,GAlB9B,SAA0BgC,GACxB,MAAMnC,EAAOF,SAASnS,cAAc,QAC9BoV,EAAQZ,EAAMK,WACdsC,EAAgB/M,MAAMgN,KAAKhC,GAAO9V,OAAO+V,IACzCgC,EAAa,GAEnB,IAAK,MAAM5D,KAAQ0D,EACjBE,EAAW9V,QAAQuT,GAAarB,IAGlC,IAAK,IAAInS,EAAI,EAAGA,EAAI+V,EAAWlX,OAAQmB,IACrC+Q,EAAKC,YAAY+E,EAAW/V,GAAGsS,WAAU,IAG3C,OAAOvB,CACT,CAOSiF,CAAiBlE,EAAU6D,EAAiBM,QAAQ,eAAgB,MAAMC,UAHxEpE,EAAU6D,EAAiBM,QAAQ,eAAgB,KAAKC,SCvKjE,CAAE,MAAOC,GACHC,EAAAA,KAEFC,QAAQC,MAAMH,EAElB,CDgKa,IAAuBR,EC/JpCD,EAASQ,UAAYnE,EAAKkE,QAAQ,UAAW,KAAKA,QAAQhC,GAAiB,IAE3E,MAAMsC,EAAeb,EAASc,iBAAiC,iBAoC/D,OAnCID,EAAa1X,SACf6W,EAAWa,EAAaA,EAAa1X,OAAS,IAGhDiK,MAAMgN,KAAKJ,EAASe,qBAAqB,MAAMnM,SAAS6H,IACtD,GAAMA,aAAgBuE,YAoBtB,OAhBAvE,EAAKwE,gBAAgB,SAGA,OAAjBxE,EAAKyE,SAAkBzE,EAAK0E,YAAY,MACvB,MAAjB1E,EAAKyE,SAAiBzE,EAAKnB,YAAYH,SAASsC,eAAe,OAC9C,QAAjBhB,EAAKyE,SAAsBzE,EAAK2E,QAAQC,YAAY5E,EAAK0E,YAAY1E,EAAK6E,aAAa,QAAU,IAEjG7E,EAAK2E,QAAQG,eAAe9E,EAAK+E,SAEjCC,EAAAA,GAA0BhF,EAAKyE,UACjCzE,EAAKiF,aAAa,mBAAoBD,EAAAA,GAA0BhF,EAAKyE,UAGlEzE,EAAK2E,QAAQC,YAAc5E,EAAKiB,cAAgBjB,EAAKkF,WAAWlF,EAAK0E,YAAY1E,EAAKiB,aAEvFjB,EAAK2E,QAAQQ,KAAKnF,EAAKiF,aAAa,MAAOjF,EAAK2E,QAAQQ,KACpDnF,EAAK2E,QAAQC,YACnB,KAAKQ,EAAAA,GAAsBC,YACzBrF,EAAK0E,YAAY1E,EAAKiB,aAAe,IACrC,MACF,KAAKmE,EAAAA,GAAsBE,YACzBtF,EAAKiB,YAAcjB,EAAK2E,QAAQQ,KAAO,QAxBzCnF,EAAK+E,QA0BP,IAGKxB,EAASQ,UAAUwB,SAC5B,CCFQC,CAAkB5F,QAAO9V,GAAW,QAClCA,EAEAuZ,IAAuBoC,EAAAA,EAAAA,IAAoBpC,IAAwBjB,IACrEiB,GAAsBqC,EAAAA,EAAAA,IAAiBrC,GACvChB,OAGF,MAAM,MAAEb,GAAUxH,EAAE2I,cACpB,IAAIgD,EAA4B,GAUhC,GARA3L,EAAE4L,iBACEpE,EAAM9U,OAAS,IACjBiZ,QAAcE,EAAAA,GAAAA,GAA8BrE,GACxCW,IACFwD,EAAQA,GAAOja,MAAM,EAAG,MAIvBia,GAAOjZ,SAAWwW,EACrB,OAGF,MAAM4C,EAAczC,GAAqB0C,UAAUrZ,OAAS2W,EAAsB,CAAErW,KAAMkW,GAE1F,IAAI8C,GAAiB,EACrB,IAGEA,EA/DmB,2CA6DJ,IAAInG,WACWC,gBAAgBF,EA/DpC,aAgEsBqG,gBAC7BpB,aA/DmB,UAgExB,CAAE,MAAOb,GACP,CAGF,MAAMkC,EAAUJ,GAAeA,EAAY9Y,KAC3C,IAAImZ,EAAuBR,GAAOjZ,SAAWsZ,EAE7C,MAAMI,EAAiBT,QAAcU,QAAQC,IAAIX,EAAMha,KAAK4a,IAASC,EAAAA,EAAAA,GAAgBD,EAAKhK,KAAMgK,MAAU,GACpGE,EAActE,GAAiBiE,GAAgB1Z,SAChDga,EAAAA,EAAAA,IAAuBvE,EAAeiE,EAAe,KAAQpc,QAAQkc,GACpES,GAA6BC,EAAAA,EAAAA,IAAuBR,EAAe,IACnES,EAAY1E,GAAiBA,GAAe2E,UAE9C3E,GAAiBwE,EACnBrE,EAAiB,CAAE7Q,QAAS9G,EAAKkc,EAAY,6BAA+B,kCAI1EA,IACFV,EAAuBM,EAClBN,IAMHA,GACFlE,EAAeE,EAAgBiE,EAAkBW,GAAgBA,EAAYC,OAAOZ,IAGlFF,IACEC,EACFjE,EAAY4D,GAEZ9D,EAA0B8D,EAAalD,GAAO7Y,MAb9CuY,EAAiB,CAAE7Q,QAAS9G,EAAK,+BAgBvC,CAMC,GACA,CACDqX,EAA2BG,EAAeF,EAAgBxY,EAAU2Y,EACpEC,EAAuBH,EAAavX,GACpC,E,+DC9GJ,IAAIsc,IAAW,EAUf,MCVMC,GAAe,IAAI7X,IAAY,CAAC+V,EAAAA,GAAsB+B,QAAS/B,EAAAA,GAAsBgC,M,4BCT3F,MACMC,GAA0B,2CAC1BC,GAAe,4CACfC,GAAiB,CACrBC,SAAU,GACVC,MAAO,GACPC,aAAa,EACbC,gBAAiB,IAGbC,GAASlJ,SAASnS,cAAc,OA2EtC,MAAMsb,IAAsBC,EAAAA,GAAAA,IAAS,CAACN,EAAkBC,EAAeC,KAAyB,CAC9FF,WACAC,QACAC,cACAC,gBAAiBH,EAASO,kB,uCCvF5B,MACMC,GAAiC,IAAIC,OAAQ,IAAGC,EAAAA,IAAgBC,UAAW,K,gBCXjF,MAEMC,GAAmB,CAAEC,YAFP,IAAIC,IAAI,cAAyDrI,KAE7CsI,aAAa,GAC/CC,GAAc,CAAEC,KAAM,aAI5B,IAAIC,GACAC,GACAC,GAEGlG,eAAemG,KAOpB,OANKH,KACHA,GAAsB,qCACtBC,UAAsBD,IAAqBI,QAC3CF,GAAgB,IAAID,GAAaP,KAG5BM,EACT,CAEOhG,eAAepR,GAAMyX,SA6C5BrG,uBACQmG,WACAD,GAActX,OACtB,CA/CQ0X,GAEN,MAAMC,EAAYC,KAAKC,MACvB,IAAIC,EACJ,MAAMC,EAAuB,GACvB3S,EAAqB,GAE3BkS,GAAcU,gBAAmBC,IAC/BF,EAAOvb,KAAKyb,EAAW,EAGzB,MAAMC,EAsCR,SAA6BC,EAAyBC,GACpD,MAAMvB,EAASsB,EAASE,WAClBC,EAAWzB,EAAO0B,QAAQC,iBAChCF,EAASG,QAtEM,GAuEf5B,EAAO6B,QAAQJ,GAEf,MAAMK,EAAaL,EAASM,kBACtBC,EAAY,IAAI5S,WAAW0S,GACjC,IAAIG,GAAc,EAoBlB,OAlBA,SAASC,IACP,GAAID,EACF,OAGFR,EAASU,qBAAqBH,GAE9B,MAEMI,EAFMJ,EAAUK,QAAO,CAACC,EAAK/c,IAAY+c,EAAM/c,GAAS,GAC1Cuc,EACE,IAzDoCM,KAC1D7T,EAAS5I,KAAc,IAATyc,GACdxB,EAAiBwB,EAAO,EAyDxBb,CAAGa,EAvFY,GAuFU,EAAIA,IAE7BG,EAAAA,EAAAA,IAAeL,EACjB,CAEAA,GAEO,KACLD,GAAc,CAAI,CAEtB,CArE0BO,CAAoB/B,IAK5C,MAAO,CACLgC,KAAMA,IAAM,IAAIvE,SAAgB,CAACwE,EAASC,KACxClC,GAAcmC,OAAS,KACrBF,EAAQ,CACNG,KAAM,IAAIC,KAAK5B,EAAQb,IACvB9S,SAAUkB,KAAK7J,QAAQqc,GAAYF,KAAKC,OAASF,GAAa,KAC9DvS,YACA,EAEJkS,GAAcsC,QAAUJ,EAExB,MAAMK,EAAYvU,KAAK2B,IAAI,EAAG0Q,EAhDT,IAgD0CC,KAAKC,OACpE9Y,YAAW,KACTuY,GAAcgC,OACdpB,GAAiB,GAChB2B,EAAU,IAEfC,MAAOA,KACL,MAAMD,EAAYvU,KAAK2B,IAAI,EAAG0Q,EAvDT,IAuD0CC,KAAKC,OACpE9Y,YAAW,KACTuY,GAAcwC,QACdhC,EAAWF,KAAKC,MAChBK,GAAiB,GAChB2B,EAAU,EAGnB,C,4BC7DA,MAQA,GAR4Cjd,IAC1C,MAAM,YAAE6Y,GAAgB7Y,EAClBmd,GAAkBC,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,mBAAoBzE,EAAYra,QAGvF,OAAO2e,EAAkB/e,EAAAA,GAAAC,cAAC8e,EAAoBnd,QAAYpE,CAAS,E,2HCbrE,SAA4C,WCsBtC2hB,GAAwB,SAkC9B,IAAeziB,EAAAA,EAAAA,KAhCqBqB,IAE9B,IAF+B,KACnCqhB,EAAI,MAAEla,GACPnH,EACC,MAAM,cAAEshB,IAAkB9X,EAAAA,GAAAA,MACpBc,GAAY/F,EAAAA,GAAAA,IAASgd,EAAAA,EAAAA,IAAqBF,IAAO,EAAO5c,EAAAA,GAAe+c,MAEvEC,GAAU7gB,EAAAA,EAAAA,KAAQ,KACtB,IAAK0J,EAAW,MAAO,GACvB,MAAMuH,EAAkB,SAAV1K,EAZO,qBACC,qBAahBua,EAA8BpX,EAAUmP,QAAQ2H,GAAuBvP,GACvE8P,GAAM,IAAInM,WAAYC,gBAAgBiM,EAA6B,iBAMzE,OALAC,EAAI3H,iBAAiB,QAAQlM,SAAS8T,IACpCA,EAAK3b,MAAMoN,OAASxB,EACpB+P,EAAK3b,MAAM4b,YAnBe,OAmBsB,IAG1C,2BAA0BF,EAAI/F,gBAAgBkG,WAAW,GAChE,CAACxX,EAAWnD,IAEf,OACElF,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GD7CK,WC6CuB,QAASmf,GAAiBlb,KAClEnE,EAAAA,GAAAC,cAAA,OACEiE,IAAKsb,EACL3G,IAAI,GACJ7a,WAAWkC,EAAAA,EAAAA,GDjD4C,YCiDdmf,GAAiBlb,IAC1DC,WAAW,IAEX,ICgER,IAAe1H,EAAAA,EAAAA,KAzFqBqB,IAS9B,IAT+B,IACnC+hB,EAAG,MACH5a,EAAK,OACLpI,EAAM,SACNijB,EAAQ,aACRC,EAAY,WACZC,EAAU,aACVC,EAAY,aACZC,GACDpiB,EACC,MAAM,cAAEqiB,EAAa,gBAAEC,IAAoBjiB,EAAAA,EAAAA,MAErCC,GAAOC,EAAAA,EAAAA,KAEP8gB,GAAOzgB,EAAAA,EAAAA,KAAQ,IACZmhB,EAAIQ,MAAMC,MAAKjhB,IAAA,IAAC,KAAE2Q,GAAM3Q,EAAA,MAAc,mBAAT2Q,CAAyB,KAAGmC,UAC/D,CAAC0N,EAAIQ,SAEDE,EAAYC,EAAUC,IAAa1f,EAAAA,EAAAA,MACnC2f,EAAcC,IAAmBlZ,EAAAA,EAAAA,SAAsClK,GAExEqjB,GAAoBjd,EAAAA,EAAAA,IAAiB8J,IACzCA,EAAE4L,iBACF,MAAMwH,EAAOpT,EAAEqT,cAAcnT,wBAC7BgT,EAAgB,CAAE1U,EAAG4U,EAAKE,MAAO7U,EAAG2U,EAAKG,SACzCf,IACAO,GAAU,IAGNS,GAActd,EAAAA,EAAAA,IAAgB,KAEhCwc,EADEJ,EACY,CACZF,MACAqB,gBAAgB,GAGJ,CACZrB,MACAhjB,OAAQA,EACRijB,YAEJ,IAGIqB,GAAkBxd,EAAAA,EAAAA,IAAgB,KACtC8c,IACAP,GAAc,IAGVkB,GAA0Bzd,EAAAA,EAAAA,IAAgB,KAC9Cgd,OAAgBpjB,EAAU,IAGtB8jB,GAAkB1d,EAAAA,EAAAA,IAAgB,KACtCyc,EAAgB,CACdkB,MAAOzB,EAAIriB,GACX+jB,WAAW,GACX,IAGJ,OACExhB,EAAAA,GAAAC,cAACwhB,GAAAA,EAAQ,CACPC,IAAK5B,EAAIriB,GACTkkB,WAAYvC,GAAQpf,EAAAA,GAAAC,cAAC2hB,GAAa,CAACxC,KAAMA,EAAMla,MAAOA,IACtDka,KAAOA,OAAgB5hB,EAAT,OACd2C,QAAS+gB,EACTW,cAAehB,GAEdf,EAAIgC,UACJ7B,GAAcH,EAAIiC,oBAAsB/hB,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,mBAAmBK,EAAK,QAChFsiB,GACC3gB,EAAAA,GAAAC,cAAC+hB,GAAAA,EAAI,CACHC,OAAQzB,EACR0B,UAAU,QACVle,MAAQ,SAAQ2c,EAAazU,YAAYyU,EAAaxU,OACtDnO,UAAU,0BACVmkB,WAAS,EACTC,YAAU,EACVC,QAASjB,EACTkB,oBAAqBjB,GAErBrhB,EAAAA,GAAAC,cAACwhB,GAAAA,EAAQ,CAACrC,KAAK,OAAOmD,aAAW,EAACpiB,QAASmhB,GAAkBjjB,EAAK,sBAI7D,ICgNf,IAAe3B,EAAAA,EAAAA,KAjQkBqB,IAqB3B,IArB4B,OAChCjB,EAAM,SACNijB,EAAQ,gBACRyC,EAAe,eACfC,EAAc,eACdC,EAAc,cACdC,EAAa,cACbC,EAAa,iBACbC,EAAgB,cAChBC,EAAa,WACbC,EAAU,SACVC,EAAQ,YACRC,EAAW,MACX/d,EAAK,uBACLge,EAAsB,aACtBC,EAAY,WACZC,EAAU,YACVC,EAAW,aACXC,EAAY,oBACZC,EAAmB,eACnBC,GACDzlB,EACC,MAAO0lB,EAAkBC,EAAgBC,IAAmB3iB,EAAAA,EAAAA,MACrD4iB,EAAkBC,EAAkBC,IAAmBC,EAAAA,GAAAA,GAC5DN,EACAE,GAGIK,EAAuBrB,GAAiBC,EACxCqB,EAAsBtB,GAAiBC,GAG3CsB,EACAC,EACAC,IACEpjB,EAAAA,EAAAA,KACEwf,EAAaiD,GAAoBS,EAEjCG,EACJb,GACAA,GAAgBhJ,WAChB9c,SACE4mB,EAAAA,EAAAA,IAAgBd,KACde,EAAAA,EAAAA,IAAuBf,IACvB9lB,SACE8mB,EAAAA,EAAAA,IAAgBhB,KACdiB,EAAAA,EAAAA,IAAuBjB,KAG3BkB,EACJlB,GACAA,GAAgBhJ,WAChB9c,SACEinB,EAAAA,EAAAA,IAAgBnB,KACdoB,EAAAA,EAAAA,IAAgBpB,KAChBqB,EAAAA,EAAAA,IAAmBrB,KAGzBhkB,EAAAA,EAAAA,KAAU,KACJikB,GACFK,GACF,GACC,CAACL,EAAkBK,KAEtBtkB,EAAAA,EAAAA,KAAU,KACJghB,EACF4C,IAEAC,GACF,GACC,CAAC7C,EAAY6C,EAAaD,IAE7B,MAAM0B,GAAyBlhB,EAAAA,EAAAA,IAAgB,KACzC6f,EACFE,IAEAD,GACF,IAGIqB,GAAmBnhB,EAAAA,EAAAA,IACvB,CAAC8J,EAAUsX,KACT,MAAM,MAAE3L,GAAU3L,EAAEuX,OACdC,GAAiBC,EAAAA,GAAAA,IAAc9L,GAEjC6L,GAAgB9kB,QAClB+iB,EAAa+B,EAAgBF,EAC/B,IAIEI,GAAoBxhB,EAAAA,EAAAA,IAAgB,MACxCyhB,EAAAA,GAAAA,GACEhb,MAAMgN,KACJ2M,EACIsB,EAAAA,IACA3C,EACA4C,EAAAA,IACAC,EAAAA,KACJC,KAAK,MACN/X,GAAMqX,EAAiBrX,GAAG,IAC5B,IAGGgY,GAAuB9hB,EAAAA,EAAAA,IAAgB,MAC3CyhB,EAAAA,GAAAA,IACGxC,GAAoBC,EACjBzY,MAAMgN,KAAKsO,EAAAA,KAA+BF,KAAK,KAC/C,KACH/X,GAAMqX,EAAiBrX,GAAG,IAC5B,IAGGkY,GAAiBhiB,EAAAA,EAAAA,IAAgB,KACrC,MAAMqW,EAAO,IAAI4L,KAAK,EAACC,EAAAA,GAAAA,OAAiBC,EAAAA,IAAoB,CAC1D5J,KAAM,eAERgH,EAAa,CAAClJ,GAAM,IAGhB+L,GAAOrnB,EAAAA,EAAAA,KAAQ,IACZokB,EACH7jB,OAAOC,OAAO4jB,GAAYxjB,QAAQugB,MAC3BkD,IAAalD,EAAImG,qBAEP,SAAbjD,GACAlD,EAAIriB,KAAOX,IACXgjB,EAAIoG,oBAAoBvP,SAAS,UAI5BmJ,EAAIoG,oBAAqBvP,SAASqM,WAE3CxlB,GACH,CAACulB,EAAYjmB,EAAQkmB,IAElB3kB,GAAOC,EAAAA,EAAAA,KAEb,GAAKkkB,EAIL,OACExiB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,cACZwlB,GAAkBD,EACjBvjB,EAAAA,GAAAC,cAACkmB,GAAAA,EAAqB,CACpB1oB,GAAG,sBACHO,UACEylB,EACI,+BACA,qBAENhjB,OAAK,EACLmP,MAAM,cACNwW,WAAYtB,EACZjV,UAAU,wBACVwW,aAAa,wBACbC,UAAQ,GAERtmB,EAAAA,GAAAC,cAAC+P,GAAAA,EAAI,CAACC,KAAK,aAGbjQ,EAAAA,GAAAC,cAACkmB,GAAAA,EAAqB,CACpB1oB,GAAG,qBACH8oB,SAAU7oB,QAAQ8lB,GAClBxlB,UACEylB,EACI,+BACA,qBAENhjB,OAAK,EACLmP,MAAM,cACNwW,WAAYtB,EACZjV,UAAU,oBACVwW,aAAa,uBACbC,UAAQ,GAERtmB,EAAAA,GAAAC,cAAC+P,GAAAA,EAAI,CAACC,KAAK,YAGfjQ,EAAAA,GAAAC,cAAC+hB,GAAAA,EAAI,CACHvkB,GAAG,uBACHwkB,OAAQzB,EACR2B,WAAS,EACTD,UAAU,QACVsE,UAAU,SACVnE,QAASsB,EACT3lB,UAAU,yBACVskB,oBAAqBqB,EACrB8C,aAAeC,EAAAA,QAAkClpB,EAAnBomB,EAC9B+C,aAAeD,EAAAA,QAAkClpB,EAAnBqmB,EAC9B+C,mBAAoBF,EAAAA,GACpBG,eAAe,uBAMbpE,GACAziB,EAAAA,GAAAC,cAACwhB,GAAAA,EAAQ,CAACzjB,UAAU,iBAAiBuoB,UAAQ,GAAC,uDAI/C9D,GACCziB,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACGoT,IAAwBS,GACvB1kB,EAAAA,GAAAC,cAACwhB,GAAAA,EAAQ,CAACrC,KAAK,QAAQjf,QAASilB,GAC7B/mB,EACC2lB,EACI,8BACArB,EACA,4BACA,+BAIRE,GAAoBC,KAAmBuB,GACvCrkB,EAAAA,GAAAC,cAACwhB,GAAAA,EAAQ,CAACrC,KAAK,WAAWjf,QAASulB,GAChCrnB,GACEwkB,GAAoBC,EACjB,4BACA,mBAITD,GAAoBK,GACnBljB,EAAAA,GAAAC,cAACwhB,GAAAA,EAAQ,CAACrC,KAAK,MAAMjf,QAASylB,GAC3BvnB,EAAK,oBASZmlB,IACCD,IACAN,GACD+C,GAAM3mB,KAAKygB,IACT,GAAsB,WAAlBA,EAAIgC,UACN,OACE9hB,EAAAA,GAAAC,cAAC6mB,GAAa,CACZhH,IAAKA,EACLhjB,OAAQA,EACRijB,SAAUA,EACV7a,MAAOA,EACPgb,aAAciE,EACdhE,aAAciE,GACd,KAIR,IC5SV,GAR2CxiB,IACzC,MAAM,OAAEqgB,GAAWrgB,EACbmlB,GAAiB/H,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,kBAAmB+C,GAGzE,OAAO8E,EAAiB/mB,EAAAA,GAAAC,cAAC8mB,EAAmBnlB,QAAYpE,CAAS,E,4BCcnE,MAwDA,IAAed,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAgC,IAA9B,UAAEgP,GAAWhP,EACpB,MAAM,OAAExC,IAAWkqB,EAAAA,EAAAA,KAAyBpqB,IAAW,CAAC,EACxD,OAAKE,EAIE,CAAEqI,SAAS8hB,EAAAA,EAAAA,KAAkBrqB,EAAQE,EAAQwR,IAH3C,CAAC,CAGsD,GAPhD3R,EAxD+BoB,IAE7C,IAF8C,OAClDkkB,EAAM,QAAE9c,EAAO,QAAEkd,GAClBtkB,EACC,MAAM,qBAAEmpB,IAAyB9oB,EAAAA,EAAAA,MAE3BC,GAAOC,EAAAA,EAAAA,MAENslB,EAAkBC,IAAoBE,EAAAA,GAAAA,GAAe9B,EAAQI,IAC9D,oBAAE8E,GAAwBhiB,GAAW,CAAC,EAEtCiiB,GAAczoB,EAAAA,EAAAA,KAAQ,KAC1B,MAAM0oB,EAAuB,GAK7B,OAJAliB,GAASmiB,gBAAiBzb,SAAS0b,IACjCF,EAAM7lB,KAAK+lB,EAAIloB,KAAK6O,IAAWsZ,EAAAA,GAAAA,GAAyBnpB,EAAM6P,KAAS,IAGlEmZ,CAAK,GACX,CAAChpB,EAAM8G,GAASmiB,kBAEnB,GAAKniB,GAAYA,EAAQmiB,gBAIzB,OACEtnB,EAAAA,GAAAC,cAAC+hB,GAAAA,EAAI,CACHC,OAAQA,EACRE,UAAWgF,EACXjF,UAAU,QACVsE,UAAU,SACVnE,QAASA,EACTrkB,UAAU,kBACVskB,oBAAqBD,EACrBoE,aAAeC,EAAAA,QAAkClpB,EAAnBomB,EAC9B+C,aAAeD,EAAAA,QAAkClpB,EAAnBqmB,EAC9B4D,WAAS,GAETznB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACZmH,EAAQmiB,gBAAgBjoB,KAAI,CAACkoB,EAAKhmB,IACjCvB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,OACZupB,EAAIloB,KAAI,CAAC6O,EAAQwZ,IAChB1nB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLmP,QAAM,EACN4W,SAA0B,gBAAhBrY,EAAOiO,KAEjBhc,QAASA,IAAM+mB,EAAqB,CAAE5Y,UAAWnJ,EAAQ1H,GAAIyQ,YAE5DkZ,IAAc7lB,GAAGmmB,UAMvB,KC/DX,GAR+C9lB,IAC7C,MAAM,OAAEqgB,GAAWrgB,EACb+lB,GAAqB3I,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,sBAAuB+C,GAGjF,OAAO0F,EAAqB3nB,EAAAA,GAAAC,cAAC0nB,EAAuB/lB,QAAYpE,CAAS,E,iDC4D3E,MA8SA,IAAed,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAEW,IAFT,uBACPsoB,EAAsB,OAAE9qB,EAAM,SAAEijB,EAAQ,gBAAE8H,GAC3CvoB,EACC,MACEwoB,iBAAiB,WACfC,EAAU,SAAEC,EAAUC,WAAYC,EAAiB,UAAEC,EAAS,WAAEC,EAAU,aAAEC,GAC7E,+BACDC,IACElrB,EAAAA,EAAAA,KAAeR,GAEb2rB,EAAgC,cAApBV,GACdW,EAAAA,EAAAA,KAAyB5rB,EAAQE,IACjC2rB,EAAAA,EAAAA,KAAgB7rB,EAAQE,EAAQijB,GAC9B9e,GAAgBC,EAAAA,EAAAA,KAA0BtE,KAAY0rB,EACtDI,EAAeV,IAAalrB,EAC5B6rB,EAAoBT,GAAmB7oB,KAAK5B,IAAOwpB,EAAAA,EAAAA,KAAkBrqB,EAAQmrB,EAAatqB,KAE1FmrB,GAAQC,EAAAA,EAAAA,KAAYjsB,EAAQE,EAAQijB,GACpC+I,EAAYF,GAAOE,UACnBC,EAAgBD,GAAWC,cAC3BC,EAAaD,GAAgB/rB,EAAAA,EAAAA,KAAWJ,EAAQmsB,QAAiBvrB,EAEvE,IAAI2H,EASA8jB,EAEJ,GAVIV,EACFpjB,GAAU+jB,EAAAA,EAAAA,KAAqBtsB,EAAQE,EAAQijB,EAAU8H,GAChDa,GAA8C,IAA9BR,EAAmB9nB,OAC5C+E,EAAUwjB,IAAoB,GACrBG,IAAclB,IACvBziB,GAAU8hB,EAAAA,EAAAA,KAAkBrqB,EAAQksB,EAAUC,eAAiBjsB,EAAQgsB,EAAUK,eAK/EZ,GAAapjB,EACf8jB,GAASG,EAAAA,EAAAA,KAAaxsB,EAAQuI,QACzB,GAAIujB,EACLvjB,IACF8jB,GAASI,EAAAA,EAAAA,KAAsBzsB,EAAQuI,GAClC8jB,IACHA,GAASG,EAAAA,EAAAA,KAAaxsB,EAAQuI,KAG7B8jB,IACHA,GAASK,EAAAA,EAAAA,KAAW1sB,EAAQmrB,SAEzB,GAAIe,GAAa3jB,IAAYyiB,EAAwB,CAC1D,MAAM,YAAE2B,GAAgBpkB,EAClBqkB,GAAiBC,EAAAA,EAAAA,KAAqB7sB,EAAQE,GAChDysB,IAAgBA,EAAYG,eAAiBF,KAC/CP,GAASI,EAAAA,EAAAA,KAAsBzsB,EAAQuI,IAGpC8jB,GAAYM,GAAaI,iBAAkBjsB,QAAQorB,EAAUc,aAChEX,GAASG,EAAAA,EAAAA,KAAaxsB,EAAQuI,GAElC,CAEA,MAAM0kB,EAAuBlB,GAAmBmB,MAAMC,GACpDA,GAASljB,QAAQnG,MAAQxB,OAAO8qB,KAAKD,EAAQljB,SAASzG,OAAS,IAG3D6pB,EAAwBvB,GAA8C,IAA9BR,EAAmB9nB,QAC5D1C,QAAQyH,GAAS0B,QAAQqjB,WAExBC,EAAsBrB,GAAWK,eAAiBpJ,IAAa+I,EAAUC,cAE/E,MAAO,CACLD,YACAP,YACApjB,UACA8jB,SACAhoB,gBACAmpB,uBAAwB1B,EAAeR,EAAmB9nB,YAAS5C,EACnE2qB,YACAC,aACAyB,uBACAQ,sBAAsBC,EAAAA,EAAAA,KAA2B1tB,GACjDqtB,wBACAE,sBACAI,0BAA2BlC,EAC3BC,iCACAU,aACD,GAnFersB,EA5SuCoB,IAkBrD,IAlBsD,UAC1D+qB,EAAS,UACTP,EAAS,QACTpjB,EAAO,OACP8jB,EAAM,cACNhoB,EAAa,uBACbmpB,EAAsB,UACtBjC,EAAS,WACTC,EAAU,qBACVyB,EAAoB,uBACpBjC,EAAsB,qBACtByC,EAAoB,sBACpBJ,EAAqB,oBACrBE,EAAmB,QACnBK,EAAO,0BACPD,EAAyB,+BACzBjC,EAA8B,WAC9BU,GACDjrB,EACC,MAAM,oBACJ0sB,EAAmB,qBACnBC,EAAoB,aACpBC,EAAY,aACZC,EAAY,gBACZC,EAAe,oBACfC,EAAmB,qBACnBC,EAAoB,gBACpBC,EAAe,kCACfC,IACE7sB,EAAAA,EAAAA,MAEE2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAC7BvC,GAAOC,EAAAA,EAAAA,KAEP4sB,EAAwD,gBAAlC/lB,GAAS0B,QAAQskB,QAAQhP,KAC/CiP,EAAiBtC,IAAclB,EAC/ByD,EAAmB3tB,QAAQorB,GAAWc,WAEtClB,EAAehrB,QAAQ0sB,GAEvBkB,IACAf,KACAplB,IAAY2jB,IAAaP,MACzBU,IAAUP,KAIV,aACJhpB,EAAY,qBAAEC,IACZC,EAAAA,EAAAA,GACF0rB,IAAYJ,IAAwBf,OACpC3sB,GACCyD,OACDzD,GACCyD,EAxDkB,KA0DlBA,IAEHzB,EAAAA,EAAAA,KAAU,KACJ8oB,GACF2C,EAAkC,CAAE3C,gCAAgC,GACtE,IAGF,MAAMiD,GAAgB3nB,EAAAA,EAAAA,IAAgB,KAChC2kB,EACFoC,EAAa,CAAErc,eAAW9Q,IACjB4sB,EACTY,IACSlC,IAAclB,GACvB6C,IAEFD,KAAW,KAGbhrB,EAAAA,EAAAA,KAAU,IAAO8rB,GAAUE,EAAAA,GAAAA,GAAsBD,QAAiB/tB,GAAY,CAAC8tB,EAASC,IAExF,MAAM,kBACJE,EAAiB,oBAAEC,EAAmB,kBAAE7K,EAAiB,uBACzD8K,EAAsB,sBAAEC,IACtBC,EAAAA,EAAAA,GAAuB9mB,GAKrB+mB,GAAqBloB,EAAAA,EAAAA,IAAiB8J,IAC1CmT,EAAkBnT,EAAE,IAGhBqe,GAAmBnoB,EAAAA,EAAAA,IAAiB8J,IACxCA,EAAEM,kBACFud,IACAK,GAAuB,IAEnBI,EAAiCb,GAC9B,KACLQ,IACAR,GAAQ,EAGNc,IAAkCroB,EAAAA,EAAAA,GAAgBooB,EAA8BnB,IAChFqB,IAAyBtoB,EAAAA,EAAAA,GAAgBooB,GAnBjBG,KAC5BvB,EAAa,CAAE9tB,OAAQqI,EAASrI,OAAQwR,UAAWnJ,EAAS1H,GAAI2uB,mBAAmB,GAAO,KAmBtFC,IAAyBzoB,EAAAA,EAAAA,GAAgBooB,GAC7C,IAAMtB,EAAqB,CAAEd,eAAWpsB,OAEpC8uB,IAAkC1oB,EAAAA,EAAAA,GAAgBooB,EAA8BnB,IAChF0B,IAAwB3oB,EAAAA,EAAAA,GAAgBooB,EAA8BT,IAEtEiB,IAAoB5oB,EAAAA,EAAAA,IAAgB,IAAMmB,EAAI3D,UAC9CqrB,IAAiB7oB,EAAAA,EAAAA,IAAgB,IAAMmB,EAAI3D,UAC3CsrB,IAAiB9oB,EAAAA,EAAAA,IAAgB,IAAMmB,EAAI3D,QAASurB,cAAc,oCAElE,UACJzK,GAAS,UAAEsE,GAAS,iBAAEoG,GAAgB,iBAAEC,GAAkB7oB,MAAO8oB,KAC/DC,EAAAA,GAAAA,GACFrB,EACAc,GACAC,GACAC,KAGFltB,EAAAA,EAAAA,KAAU,KACHE,IACHisB,IACAC,IACF,GACC,CAACD,EAAwBC,EAAuBlsB,IAEnD,MAAM1B,IAAYkC,EAAAA,EAAAA,GAAe,0BAA2BP,GACtDqtB,IAAkBltB,EAAAA,GAAAA,GAAiBmpB,GAAQ,GAC3CgE,IAAiB/sB,EAAAA,EAAAA,GACrB,iCACAgtB,EAAAA,EAAAA,GAAkBF,KAGdG,IAAWxuB,EAAAA,EAAAA,KAAQ,IACnB4pB,EACK,OAELG,EACK,UAEL0C,EACK,aADT,GAKC,CAAC7C,EAAWG,EAAc0C,IAEvBgC,GAAahD,GAA0BA,EAAyB,EAClE/rB,EAAK,wBAAyB+rB,QAC9B5sB,EAEE6vB,IAAkB1uB,EAAAA,EAAAA,KAAQ,KAC9B,IAAKwG,IAAYujB,IAAiBvjB,EAAQ0B,QAAQnG,OAASynB,GAAakC,EAAsB,OAAOllB,EAErG,MAAMmoB,GAAelU,EAAAA,EAAAA,IAAiBjU,EAAQ0B,QAAQnG,MACtD,MAAO,IACFyE,EACH0B,QAAS,IACJ1B,EAAQ0B,QACXnG,KAAM4sB,GAET,GACA,CAACjD,EAAsB3B,EAAcvjB,EAASgjB,IAE3CoF,IAAoBztB,EAAAA,GAAAA,GAAiBqtB,IAAU,GAErD,GAAKztB,EAIL,OACEM,EAAAA,GAAAC,cAAA,OAAKjC,UAAWA,GAAW+G,IAAKA,EAAK8c,cAAehB,GAClD7gB,EAAAA,GAAAC,cAAA,OAAKjC,UAAWivB,IACdjtB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,qBAAqBmC,QAAS0gB,GAC1C0M,IAAqBvtB,EAAAA,GAAAC,cAAC+P,GAAAA,EAAI,CAACC,KAAMsd,KACjC7vB,QAAQorB,GAAWc,YAClB5pB,EAAAA,GAAAC,cAAC+P,GAAAA,EAAI,CAACC,KAAK,QAAQjS,UAAU,iBAGjCgC,EAAAA,GAAAC,cAACutB,GAAAA,EAAuB,CACtBvL,OAAQqJ,EACRttB,UAAU,eACV8qB,UAAWA,EACX2E,cAAY,EACZtoB,QAASkoB,GACTpE,OAASd,OAAqB3qB,EAATyrB,EACrBmE,WAAYA,GACZ5e,MAAQ+Z,IAAc6C,EAAkB/sB,EAAK,eACzC8pB,EAAY9pB,EAAK,qCAAkCb,EACvD2C,QAAS2rB,EACT9C,WAAYA,IAEdhpB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLxC,UAAU,kBACVyC,OAAK,EACLitB,OAAK,EACL9d,MAAM,cACNC,UAAWxR,EAAK,UAChB8B,QAAS4rB,GAET/rB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAEbotB,GAAkB1C,KAAkBuB,GACpCjqB,EAAAA,GAAAC,cAAC+hB,GAAAA,EAAI,CACHC,OAAQwJ,EACRmB,iBAAkBA,GAClBC,iBAAkBA,GAClB3K,UAAWA,GACXsE,UAAWA,GACXxiB,MAAO8oB,GACP9uB,UAAU,uBACVqkB,QAASsJ,EACTrJ,oBAAqBsJ,GAEpBlD,GACC1oB,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAACwhB,GAAAA,EAAQ,CACPrC,KAAO+I,OAAkC3qB,EAAtB,oBACnBmkB,WAAYwG,EAAYnoB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,+BAA6BR,EAElE2C,QAASA,IAAM2qB,EAAoB,CACjC3C,WAAW,KAGZ9pB,EAAK+rB,EAAyB,EAAI,kBAAoB,oBAEzDpqB,EAAAA,GAAAC,cAACwhB,GAAAA,EAAQ,CACPrC,KAAM+I,EAAY,yBAAsB3qB,EACxCmkB,WAAawG,OAAsD3qB,EAA1CwC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0BAEtCmC,QAASA,IAAM2qB,EAAoB,CACjC3C,WAAW,KAGZ9pB,EAAK+rB,EAAyB,EAAI,kBAAoB,oBAExDP,GACC7pB,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAC0tB,GAAAA,EAAa,MACd3tB,EAAAA,GAAAC,cAACwhB,GAAAA,EAAQ,CACPrC,KAAOgJ,OAAmC5qB,EAAtB,oBACpBmkB,WAAYyG,EAAapoB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,+BAA6BR,EAEnE2C,QAASA,IAAM4qB,EAAqB,CAClC3C,YAAY,KAGb/pB,EAAK+rB,EAAyB,EAAI,0CAA4C,gBAEjFpqB,EAAAA,GAAAC,cAACwhB,GAAAA,EAAQ,CACPrC,KAAMgJ,EAAa,yBAAsB5qB,EACzCmkB,WAAayG,OAAuD5qB,EAA1CwC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0BAEvCmC,QAASA,IAAM4qB,EAAqB,CAClC3C,YAAY,KAGb/pB,EAAK+rB,EAAyB,EAAI,0CAA4C,iBAIrFpqB,EAAAA,GAAAC,cAAC0tB,GAAAA,EAAa,MACd3tB,EAAAA,GAAAC,cAACwhB,GAAAA,EAAQ,CAACrC,KAAK,UAAUjf,QAAS8rB,IAC/B5tB,EAAK,wBAIX+sB,GACCprB,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAACwhB,GAAAA,EAAQ,CACPrC,KAAK,eACLjf,QAAS+rB,IAER7tB,EAAK,yBAEPgtB,GACCrrB,EAAAA,GAAAC,cAACwhB,GAAAA,EAAQ,CACPrC,KAAK,eACLjf,QAASksB,IAERhuB,EAAK,gBAGV2B,EAAAA,GAAAC,cAACwhB,GAAAA,EAAQ,CAACrC,KAAK,UAAUjf,QAASmsB,IAC/BjuB,EAAK,uBAER2B,EAAAA,GAAAC,cAACwhB,GAAAA,EAAQ,CAACrC,KAAK,SAASjf,QAASosB,IAC9BluB,EAAK,kBAOd,K,wCC3WV,MAQA,GARqCuD,IACnC,MAAM,OAAEqgB,GAAWrgB,EACbgsB,GAAW5O,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,YAAa+C,GAG7D,OAAO2L,EAAW5tB,EAAAA,GAAAC,cAAC2tB,EAAahsB,QAAYpE,CAAS,E,gBCLvD,MAQA,GAR6CoE,IAC3C,MAAM,OAAEqgB,GAAWrgB,EACbisB,GAAmB7O,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,oBAAqB+C,GAG7E,OAAO4L,EAAmB7tB,EAAAA,GAAAC,cAAC4tB,EAAqBjsB,QAAYpE,CAAS,ECGvE,GAR2CoE,IACzC,MAAM,OAAEqgB,GAAWrgB,EACbksB,GAAiB9O,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,kBAAmB+C,GAGzE,OAAO6L,EAAiB9tB,EAAAA,GAAAC,cAAC6tB,EAAmBlsB,QAAYpE,CAAS,E,gBCLnE,MAQA,GARsCoE,IACpC,MAAM,OAAEqgB,GAAWrgB,EACbmsB,GAAY/O,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,aAAc+C,GAG/D,OAAO8L,EAAY/tB,EAAAA,GAAAC,cAAC8tB,EAAcnsB,QAAYpE,CAAS,ECGzD,GARuCoE,IACrC,MAAM,OAAEqgB,GAAWrgB,EACbosB,GAAahP,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,cAAe+C,GAGjE,OAAO+L,EAAahuB,EAAAA,GAAAC,cAAC+tB,EAAepsB,QAAYpE,CAAS,ECG3D,GAR2CoE,IACzC,MAAM,OAAEqgB,GAAWrgB,EACbqsB,GAAiBjP,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,kBAAmB+C,GAGzE,OAAOgM,EAAiBjuB,EAAAA,GAAAC,cAACguB,EAAmBrsB,QAAYpE,CAAS,E,4BC4BnE,MACM0wB,GAAU,IAAIvS,OAAOwS,EAAAA,IAAkB,KA8F7C,IAAezxB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAuC,IAArC,OAAExC,EAAM,SAAEijB,GAAUzgB,EAC3B,MAAM8uB,GAAYC,EAAAA,EAAAA,KAAgBzxB,EAAQE,EAAQijB,GAClD,MAAO,CACL7a,OAAOopB,EAAAA,EAAAA,KAAY1xB,GACnB2xB,gBAAgBnxB,EAAAA,EAAAA,KAAeR,GAAQ2xB,eACvCH,YACD,GAPezxB,EA5F8BoB,IAQ5C,IAR6C,OACjDjB,EAAM,SACNijB,EAAQ,QACRyO,EAAO,WACPC,EAAU,eACVF,EAAc,UACdH,EAAS,MACTlpB,GACDnH,EACC,MAAM,mBACJ2wB,EAAkB,oBAClBC,EAAmB,qBACnBC,IACExwB,EAAAA,EAAAA,MAEEywB,GAA2BjuB,EAAAA,EAAAA,MAE3BkuB,GAAsBC,EAAAA,EAAAA,KAAqB,KAC/C,MAAMC,GAAgBhY,EAAAA,EAAAA,IAAyBwX,KACzCS,EAAaD,EAAcvV,UAAU8G,MAAM2O,GAC/CA,EAAO/S,OAASrD,EAAAA,GAAsB+B,UAKxC,OAFAgU,EAAyBztB,QAAU4tB,EAE5BC,GAAYE,KAAOH,EAActuB,KAAKyW,MAAM+W,MAAW,EAAE,GAC/D,CAACM,GA7Bc,KA6BS,GAErBY,GAAUC,EAAAA,EAAAA,GAAiBP,EAAqB,CAACA,EAAqBN,IAAU,IAEtFhvB,EAAAA,EAAAA,KAAU,KACR,MAAM8vB,EAAOF,IACPJ,EAAgBH,EAAyBztB,QAE3CkuB,EACFZ,EAAmB,CAAEhuB,KAAMsuB,KAE3BL,IACAC,EAAqB,CAAE9xB,SAAQijB,aACjC,GACC,CAACqP,EAAStyB,EAAQijB,KAErBwP,EAAAA,EAAAA,IAAc,KACZZ,IACAC,EAAqB,CAAE9xB,SAAQijB,YAAW,GACzC,CAACjjB,EAAQ6xB,EAAqB5O,EAAU6O,IAE3C,MAAMtD,GAAUkE,EAAAA,EAAAA,IAAgB,IACvB9xB,QAAQ6wB,GAAkBC,MAAcJ,IAAcK,IAC5D,CAACA,EAAYD,EAASJ,EAAWG,KAC9B,aAAE7uB,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkB0rB,GAE3DmE,GAAmB3vB,EAAAA,GAAAA,GAAiByuB,GAAgB,GAEpDmB,GAA4B9rB,EAAAA,EAAAA,IAAgB,KAChDgrB,EAAqB,CAAE9xB,SAAQijB,WAAUqO,WAAW,GAAO,IAG7D,IAAK1uB,IAAiB+vB,EACpB,OAIF,MAAM,MAAEE,KAAUC,GAAwBH,EACpCI,EAAc,CAClBhpB,QAAS,CACPipB,QAASF,IAIb,OACE5vB,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,iBAAkBP,IAC/CK,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,wBACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,4BACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBAEfgC,EAAAA,GAAAC,cAAC8vB,GAAAA,EAAO,CAAC5qB,QAAS0qB,EAAaG,WAAS,EAAC9qB,MAAOA,IAChDlF,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLxC,UAAU,uBACVyC,OAAK,EACLitB,OAAK,EACL9d,MAAM,cACNC,UAAU,wBACV1P,QAASuvB,GAET1vB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAGb,K,wCC5HV,MAQA,GAR+C4D,IAC7C,MAAM,OAAEqgB,GAAWrgB,EACbquB,GAAqBjR,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,sBAAuB+C,GAGjF,OAAOgO,EAAqBjwB,EAAAA,GAAAC,cAACgwB,EAAuBruB,QAAYpE,CAAS,E,gBC+OtE0yB,GAAe,SAAfA,GAAe,OAAfA,EAAe,YAAfA,EAAe,gBAAfA,EAAe,YAAfA,EAAe,oBAAfA,EAAe,kBAAfA,EAAe,0BAAfA,CAAe,EAAfA,IAAe,IAapB,MAyrDA,IAAexzB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMuzB,KAEW,IAFT,OACPrzB,EAAM,SAAEijB,EAAQ,QAAEqQ,EAAO,gBAAEvI,EAAe,SAAEvgB,EAAQ,KAAE6U,GACvDgU,EACC,MAAMpzB,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1BuzB,EAAUvzB,IAAWwzB,EAAAA,KAAkBC,EAAAA,EAAAA,KAAU3zB,EAAQE,QAAUU,EACnEgzB,EAAgB9yB,QAAQ2yB,GACxB7G,GAAiBC,EAAAA,EAAAA,KAAqB7sB,EAAQE,GAC9C2zB,GAAiBC,EAAAA,EAAAA,IAAS5zB,GAC1B6zB,EAAkBH,GAAgBI,EAAAA,EAAAA,KAAmBh0B,EAAQyzB,EAAQ5yB,SAAMD,EAC3EqzB,EAAgBJ,OAAsDjzB,GAArCszB,EAAAA,EAAAA,KAAmBl0B,EAAQE,GAC5Di0B,GAAgCP,IAAkBC,KACnDO,EAAAA,EAAAA,KAA0Cp0B,EAAQE,EAAQijB,GACzDkR,GAAeC,EAAAA,EAAAA,KAAmBt0B,EAAQE,EAAQijB,IAClD,SACJoR,EAAQ,sBAAEC,EAAqB,yBAAEC,EAAwB,4BAAEC,GACzD10B,EAAO20B,SAASC,MACdC,EAAoB70B,EAAO80B,cAAcC,EAAAA,KACzCD,EAAgBP,IAAaQ,EAAAA,IAA0B/0B,EAAO80B,cAAcP,QAAY3zB,EACxFo0B,EAAuBb,EAA+BA,EAA6BtzB,QAAKD,EACxFq0B,EAAkBD,GAAuB3K,EAAAA,EAAAA,KAAkBrqB,EAAQE,EAAQ80B,QAAwBp0B,GACnG,cAAEs0B,GAAkBl1B,EACpBm1B,GAAcC,EAAAA,EAAAA,KAAWp1B,EAAQk1B,GACjCG,EAAkBpB,EAAeA,GAAcqB,UAAYJ,OAAgBt0B,EAC3E00B,EAAWn1B,GAAMo1B,eAAiBF,IACtCl1B,EAAKo1B,cAAcrI,MAAMnY,GAASA,EAAKlU,KAAOw0B,IAC1CA,EACCl1B,GAAMq1B,aAAaC,UAAYt1B,GAAMU,QAAKD,GAE3C80B,EAAaJ,GAAWF,EAAAA,EAAAA,KAAWp1B,EAAQs1B,QAAY10B,EACvD+0B,GAAcD,GAAcJ,GAAWl1B,EAAAA,EAAAA,KAAWJ,EAAQs1B,QAAY10B,EACtEg1B,GAAiBC,EAAAA,EAAAA,KAAqB71B,EAAQE,GAC9C41B,GAAsBC,EAAAA,EAAAA,KAA0B/1B,EAAQE,GAExD81B,GAAWx1B,EAAAA,EAAAA,KAAeR,GAC1Bi2B,EAAoBn1B,QAAQk1B,EAASE,YAAY1C,SAEjD2C,GAAqB/L,EAAAA,EAAAA,KAAyBpqB,GAC9Co2B,EAA0Bl2B,IAAWi2B,GAAoBj2B,QAC1DijB,IAAagT,GAAoBhT,UACjC8H,IAAoBkL,GAAoB5W,OACvC0W,EACAI,GAAOjB,EAAAA,EAAAA,KAAWp1B,EAAQE,GAC1Bo2B,GAAyBD,KAASrC,EAAAA,EAAAA,KAAmBh0B,EAAQq2B,EAAKx1B,KAAK01B,mBAAoB,EAC3FC,EAAWvC,GAAcuC,SACzB/I,GAAuBC,EAAAA,EAAAA,KAA2B1tB,GAElDy2B,EAAmC,cAApBxL,GACjByL,EAAAA,EAAAA,KAA4B12B,EAAQE,IACpCy2B,EAAAA,EAAAA,KAAmB32B,EAAQE,EAAQijB,GAEjCyT,EAAQpD,IAAWqD,EAAAA,EAAAA,KAAgB72B,EAAQE,EAAQszB,GACnDsD,EAAoBF,GAAS,iBAAkBA,EAAQA,EAAMG,kBAAen2B,EAC5EorB,GAAQC,EAAAA,EAAAA,KAAYjsB,EAAQE,EAAQijB,GACpC6T,EAAiBhL,GAAOE,WAC1B7B,EAAAA,EAAAA,KAAkBrqB,EAAQE,EAAQ8rB,EAAME,UAAUK,mBAClD3rB,EACEq2B,EAAe92B,GAAM+2B,SAAW/2B,EAAKg3B,mBAAqBhU,IAAaiU,EAAAA,IAAkBJ,GAC3FK,EAAAA,EAAAA,KAAuBr3B,EAAQg3B,QAC/Bp2B,EACE02B,EAAwC,cAApBrM,EAEpBsM,EAAsB1D,IAAmBD,IAAkB0D,IAAsB1K,EAEvF,MAAO,CACL4K,mBAA6B,UAATjY,EAAmBvf,EAAOy3B,UAAUD,wBAAqB52B,EAC7E82B,aAAuB,UAATnY,EAAmBvf,EAAOy3B,UAAUC,kBAAe92B,EACjE+2B,eAAgB3B,EAAS4B,UACzBhR,gBAAgB0F,EAAAA,EAAAA,KAAqBtsB,EAAQE,EAAQijB,EAAU8H,GAC/De,QACA7rB,OACAyzB,gBACAhH,iBACAwJ,0BACAyB,wBAAwBC,EAAAA,EAAAA,KAA6B93B,EAAQE,GAC7D63B,UAAW53B,GAAO63B,EAAAA,EAAAA,IAAc73B,QAAQS,EACxCq3B,oBAAoBC,EAAAA,EAAAA,KAAyBl4B,EAAQ0K,GACrDytB,oBAAoBC,EAAAA,EAAAA,KAAqBp4B,GACzCq4B,oBACsB,WAApBpN,GACGnqB,QAAQuzB,GAAc7wB,QAE3B8zB,oBACAtC,uBACAsD,uBAAwBrD,GAAiBsD,oBACzCzM,aAAc5rB,IAAW81B,EAAS9K,gBAAgBE,SAClDoN,UAAWxC,EAASwC,UACpBC,iBAAkBz4B,EAAO04B,SAASC,SAASD,SAC3CE,oBAAqB54B,EAAO64B,aAAaF,SAASD,SAClDzE,eACA6E,gBAAiB94B,EAAO+4B,eAAeC,QACvC9D,gBACAC,cACA8D,qBAAsBjD,EAASiD,qBAC/BzE,wBACAC,2BACAC,8BACAwE,aAAcl5B,EAAOk5B,aACrBrE,kBAAmBA,GAAmBsE,SACtCrE,cAAeA,GAAeqE,SAC9BC,WAAYpD,EAASoD,WAAWC,WAChCC,mBAAoBtD,EAASoD,WAAWG,UACxCC,YAAazF,EAAmBA,EAAgB0F,SAASC,WAAY,OAAS94B,EAC9E+4B,cAAe5F,GAAiB0F,SAASG,WACzClE,aACAC,aACAL,WACAmB,eACAb,iBACAE,sBACA3P,WAAYnmB,EAAO65B,WAAWzQ,KAC9B0Q,oBAAoBC,EAAAA,EAAAA,KAAe/5B,EAAQE,GAC3CoI,OAAOopB,EAAAA,EAAAA,KAAY1xB,GACnBg6B,eAAeC,EAAAA,EAAAA,GAAmBj6B,EAAQ,sBAAwBk6B,EAAAA,IAClEC,cAAcF,EAAAA,EAAAA,GAAmBj6B,EAAQ,iBACzCytB,uBACA6I,wBACA8D,mBAAoBp6B,EAAOo6B,mBAC3B5D,WACAL,qBACAkE,sBAAsBC,EAAAA,EAAAA,KAA2Bt6B,GACjDu6B,eAAgB9M,KAAyB+M,EAAAA,EAAAA,KAA+Bx6B,GACxEy6B,uBAAuBC,EAAAA,EAAAA,KAA4B16B,GACnD26B,qBAAsB/N,GAAkBiH,IAAmBD,IAAkB0D,EAC7EhR,uBAAwBtmB,EAAO20B,SAASC,MAAMtO,uBAC9CwQ,oBACA8D,YAAa56B,EAAO66B,QAAQD,YAC5B3D,eACA6D,mBAAoB96B,EAAO+6B,aAAaC,aACxCD,aAAc/6B,EAAO+6B,aAAa54B,KAClCo1B,sBACD,GAnIex3B,EA/qDwBoB,IAiFtC,IAjFuC,KAC3Coe,EAAI,cACJoY,EAAa,cACbsD,EAAa,kBACb3D,EAAiB,uBACjBO,EAAsB,QACtBqD,EAAO,SACPxwB,EAAQ,WACRywB,EAAU,QACVC,EAAO,OACPC,EAAM,eACNzU,EAAc,OACd1mB,GAAM,SACNijB,GAAQ,QACRqQ,GAAO,mBACP2C,GAAkB,gBAClBlL,GAAe,MACfe,GAAK,KACL7rB,GAAI,aACJ8zB,GAAY,aACZgD,GAAY,wBACZb,GAAuB,qBACvB3I,GAAoB,sBACpB6I,GAAqB,cACrB1C,GAAa,eACbhH,GAAc,UACdmL,GAAS,cACTiC,GAAa,mBACb/B,GAAkB,mBAClBE,GAAkB,qBAClBkC,GAAoB,aACpBvO,GAAY,UACZ0M,GAAS,qBACTxD,GAAoB,uBACpBsD,GAAsB,iBACtBgD,GAAgB,oBAChBjD,GAAmB,iBACnBI,GAAgB,oBAChBG,GAAmB,gBACnBE,GAAe,cACf5D,GAAa,YACbC,GAAW,aACXgF,GAAY,qBACZlB,GAAoB,sBACpBzE,GAAqB,yBACrBC,GAAwB,kBACxBI,GAAiB,cACjBC,GAAa,aACboE,GAAY,WACZE,GAAU,mBACVE,GAAkB,YAClBE,GAAW,WACX9D,GAAU,WACVC,GAAU,SACVL,GAAQ,aACRmB,GAAY,eACZb,GAAc,oBACdE,GAAmB,cACnB6D,GAAa,WACbxT,GAAU,mBACV2T,GAAkB,mBAClBM,GAAkB,MAClB9xB,GAAK,SACLkuB,GAAQ,4BACR9B,GAA2B,yBAC3B6G,GAAwB,gBACxBC,GAAe,QACfC,GAAO,UACPr6B,GAAS,mBACTo2B,GAAkB,aAClBE,GAAY,cACZ6C,GAAa,sBACbE,GAAqB,uBACrBnU,GAAsB,kBACtBwQ,GAAiB,YACjB8D,GAAW,oBACXD,GAAmB,mBACnBG,GAAkB,aAClBC,GAAY,oBACZxD,GAAmB,UACnBmE,IACDv6B,EACC,MAAM,YACJw6B,GAAW,WACXC,GAAU,WACVC,GAAU,gBACV3Q,GAAe,cACf4Q,GAAa,eACbC,GAAc,qBACdC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtB7Y,GAAa,qBACb8Y,GAAoB,iBACpBljB,GAAgB,oCAChBmjB,GAAmC,wBACnCC,GAAuB,oBACvBC,GAAmB,kBACnBC,GAAiB,YACjBC,KACEn7B,EAAAA,EAAAA,MAEEC,IAAOC,EAAAA,EAAAA,KAGPk7B,IAAW54B,EAAAA,EAAAA,IAAuB,MAGlC64B,IAAmB74B,EAAAA,EAAAA,IAA0B,OAE5C4tB,GAASkL,KAAWC,EAAAA,EAAAA,IAAU,KAC9BC,GAAWC,KAAgBnyB,EAAAA,EAAAA,KAAS,GACrCoyB,IAAoBC,EAAAA,EAAAA,GAAqB5B,IACzC6B,IAA6Bp5B,EAAAA,EAAAA,MAC7Bq5B,IAAoBC,EAAAA,EAAAA,GAAYrC,IAC9BrsB,MAAO2uB,IAAgBC,EAAAA,EAAWC,MAEpCC,GAA2B,gBAATne,EAClBoe,GAA2B,UAATpe,EAClBgW,GAAgBmI,GAAkBv9B,IAAMo1B,mBAAgB30B,EACxDg9B,GAAgBrI,KAChBA,GAAc/xB,OAAS,IAAM+xB,GAAcrI,MAAMnY,GAASA,EAAKlU,KAAOq0B,OAErE2I,GAAoBC,GAAqBC,KAA6B35B,EAAAA,EAAAA,KACvE45B,IAAoBC,EAAAA,EAAAA,GAAqB/9B,GAAQijB,KAChD+a,GAAiBC,GAAmBC,KAAuBh6B,EAAAA,EAAAA,MAC3DyiB,GAAkBwX,GAAkBC,KAAqBl6B,EAAAA,EAAAA,KAE1Dm6B,GAAqB3X,IAAkBD,EAAAA,EAAAA,IAAoBC,IAE3D,SAAE4X,GAAUC,QAASC,GAAkBlF,YAAamF,IAAoB1K,IAAgB,CAAC,EACzF2K,GAAiBJ,IAAU39B,GAE3Bg+B,MAA2B/H,MAAqB,aAAcA,MAChEA,GAAkBgI,WAAaC,EAAAA,IAAeD,UAElDl8B,EAAAA,EAAAA,IAAUo8B,EAAAA,GAAmC,CAACpN,KAE9C,MAAMqN,IAAgCj7B,EAAAA,EAAAA,IAAO,IAEtCk7B,GAAiBC,KAAYC,EAAAA,EAAAA,GAClC1B,IAAmB7F,EACnBkG,KAGFsB,EAAAA,EAAAA,IAAW,KACTpC,IAAa,EAAK,GAvJW,MA0J/Br6B,EAAAA,EAAAA,KAAU,KACJ86B,IAEJjB,IAAqB,GACpB,CAACiB,GAAiBlK,MAErB5wB,EAAAA,EAAAA,KAAU,KACRw6B,GAA2B54B,aAAU5D,CAAS,GAC7C,CAACV,MAEJ0C,EAAAA,EAAAA,KAAU,KACJ1C,IAAUg7B,IAAYyC,IACxB3B,GAAqB,CAAE97B,WACzB,GACC,CAACg7B,EAASh7B,GAAQijB,GAAUwa,MAE/B/6B,EAAAA,EAAAA,KAAU,KACJ1C,IAAUC,KAASo1B,IAAiB2F,IAAWoE,EAAAA,EAAAA,IAAiBn/B,KAClEi8B,GAAW,CAAEl8B,WACf,GACC,CAACC,GAAMD,GAAQg7B,EAASkB,GAAY7G,KAEvC,MAAMgK,IAA+Bv7B,EAAAA,EAAAA,KAAO,IAC5C2uB,EAAAA,EAAAA,IAAcjwB,IAAqC,IAAnC88B,EAAYC,GAAkB/8B,EAE5C68B,GAA6B/6B,QAAU1D,QAAQZ,KAAWs/B,GAAcjK,KAAkBkK,EAAkB,GAC3G,CAACv/B,GAAQq1B,KAEZ,MAAO1X,GAAa9E,KAAkBjO,EAAAA,EAAAA,IAA0B,IAC1D40B,GAAiB5+B,QAAQ+c,GAAYra,SACpCm8B,GAAU3mB,KAAelO,EAAAA,EAAAA,SAAuClK,IAEjE,gBACJg/B,GAAe,YAAEC,GAAW,eAAEha,GAAc,eAAEC,GAAc,oBAAEga,GAAmB,cACjFC,GAAa,iBAAEC,GAAgB,cAAE9Z,GAAa,cAAEF,GAAa,cAAED,GAAa,iBAAEE,KAC5ElkB,EAAAA,EAAAA,KACF,KAAMk+B,EAAAA,EAAAA,IAA4B9/B,GAAM8zB,GAAcL,GAAe+J,KACrE,CAACx9B,GAAM8zB,GAAcL,GAAe+J,KAGhCuC,IAAqBF,KAAqBpZ,EAE1CuZ,IAA4Bn5B,EAAAA,EAAAA,IAAgB,SAACo5B,GAAyD,IAAxCC,EAAiBnzB,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGsuB,GACtF,GAAI6E,IAAc7E,IAAmB0E,GAAmB,OACxD,MAAMI,EAAY14B,OAAO24B,eACzB,IAAIC,EAOJ,GALEA,EADEH,IAAc7E,GACDhmB,SAASua,cAA8BwL,IAEvC/lB,SAASirB,eAAeJ,GAGrCC,EAAUI,WAAY,CACxB,MAAMC,EAAiBL,EAAUM,WAAW,GAC5C,IAAIC,EAAAA,EAAAA,GAAuBF,EAAgBN,GAGzC,OAFAS,EAAAA,EAAAA,IAAsBV,QACtBI,EAAaO,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,IAG7D,CAEAnE,GAAS,GAAElL,OAAYwO,MAGvBc,EAAAA,EAAAA,KAAoB,MAClBC,EAAAA,EAAAA,GAAqBX,EAAa,GAEtC,IAEM1nB,IAA4B9R,EAAAA,EAAAA,IAAgB,SAChDlD,GACG,IADWu8B,EAAiBnzB,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGsuB,GAElC,MAAM4E,GAAU3tB,EAAAA,EAAAA,GAAW3O,EAAM,CAAC,cAAe,aAAc,YAC5D+kB,KAAK,IACLjO,QAAQ,WAAY,KACvBulB,GAA0BC,EAASC,EACrC,IAEMe,IAAqCp6B,EAAAA,EAAAA,IAAgB,SACzDlD,GACG,IADqBu8B,EAAiBnzB,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGsuB,GAE5C,MAAM4E,GAAUiB,EAAAA,EAAAA,GAA0Bv9B,GAC1Cq8B,GAA0BC,EAASC,EACrC,IAEMiB,IAAmCt6B,EAAAA,EAAAA,IAAgB,SAACu6B,GAA2D,IAAxClB,EAAiBnzB,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGsuB,GAC/F2E,IAA0BqB,EAAAA,EAAAA,IAAqBD,GAAQlB,EACzD,IAEMoB,IAAiBz6B,EAAAA,EAAAA,IAAgB,KAChC24B,KACLyB,GAAmCzB,GAAUnE,IAC7CxiB,QAAYpY,GAAU,KAGlB,yBACJwnB,GAAwB,uBACxBsZ,GAAsB,kBACtBC,GAAiB,kBACjBC,GAAiB,iBACjBzZ,GAAgB,gBAChB0Z,GAAe,uBACfC,GAAsB,qBACtBC,ICvgBW,SAA2B5gC,GAwBvC,IAxBwC,YACzC0c,EAAW,cACXmc,EAAa,QACb8C,EAAO,eACP/jB,EAAc,OACd7Y,EAAM,cACNgmB,EAAa,cACbF,EAAa,cACbD,EAAa,iBACbE,EAAgB,eAChBwb,EAAc,cACdxoB,GAaD9X,EACC,MAAMM,GAAOC,EAAAA,EAAAA,MACP,sBAAEsgC,EAAqB,oCAAEzF,EAAmC,iBAAEnjB,IAAqB5X,EAAAA,EAAAA,OAClFmgC,EAAmBM,IAAwBn3B,EAAAA,EAAAA,KAAkB,IAC7D42B,EAAwBQ,IAA6Bp3B,EAAAA,EAAAA,KAAkB,IACvEsd,EAA0B+Z,IAA+Br3B,EAAAA,EAAAA,SAA8BlK,GAExFkhC,GAAyB96B,EAAAA,EAAAA,IAAgB,KAC7C+R,EAAeqpB,EAAAA,GACfX,GAAgB,IAGZM,GAAuB/6B,EAAAA,EAAAA,IAC1Bq7B,IACC,MAAMnlB,EAAqC,mBAAbmlB,EAA0BA,EAASxkB,GAAewkB,EAChF,GAAKnlB,EAAe1Z,OAKpB,GAAI0Z,EAAegQ,MAAMoV,IACvB,MAAM/iB,GAAOgjB,EAAAA,EAAAA,IAAkBD,GAE/B,MAAiB,UAAT/iB,IAAqB2G,IAAkBD,GAChC,UAAT1G,IAAqByG,IAAkBC,GAC9B,UAAT1G,IAAqBwG,IAAkBE,GAC9B,SAAT1G,IAAoB0G,CAAiB,IAE3CsW,EAAoC,CAAEr8B,gBACjC,GAAIgd,EAAegQ,MAAKxqB,IAAA,IAAC,KAAEgB,GAAMhB,EAAA,OAAKgB,EAAOs2B,CAAa,IAC/DgI,EAAsB,CACpBrtB,MAAO,2BAEJ,CACLoE,EAAemE,GACf,MAAMslB,EAActlB,EAAegQ,MAAMoV,IACvC,MAAM/iB,GAAOgjB,EAAAA,EAAAA,IAAkBD,GAE/B,MAAiB,UAAT/iB,IAAqB2G,GACd,UAAT3G,IAAqByG,GACZ,UAATzG,IAAqBwG,CAAc,IAG3Ckc,EAAqBnhC,QAAQ0hC,GAAevc,IAC5Cic,GAA2Bjc,EAC7B,MA7BE6b,GA6BF,IA+CJ,MAAO,CACL1Z,2BACAwZ,mBA7CwB56B,EAAAA,EAAAA,IAAgBwS,MAAOiD,EAAegmB,KAC9D,GAAIxpB,EAAe,CACjB,MAAMypB,QAAsBplB,EAAAA,EAAAA,GAAgBb,EAAM,GAAGpJ,KAAMoJ,EAAM,IAC3Dc,EAAatE,IAAiBuE,EAAAA,EAAAA,IAAuBvE,EAAeypB,GAEtEzpB,GAAe2E,UACbL,EACFwkB,EAAqB,CAACW,IAEtBtpB,EAAiB,CAAE7Q,QAAS9G,EAAK,gCAGnCsgC,EAAqB,CAACW,GAE1B,KAAO,CACL,MAAMxlB,QAAuBC,QAAQC,IAAIX,EAAMha,KAAK4a,IAClDC,EAAAA,EAAAA,GAAgBD,EAAKhK,KAAMgK,EAAM,CAAEslB,oBAAqBF,QAAa7hC,OAEvEmhC,EAAqB,IAAIlkB,KAAgBX,GAC3C,KA2BAiL,kBAxBuBnhB,EAAAA,EAAAA,IAAgBwS,MAAOiD,EAAemmB,KAC7D,GAAI3pB,EAAe,CACjB,MAAMypB,QAAsBplB,EAAAA,EAAAA,GAAgBb,EAAM,GAAGpJ,KAAMoJ,EAAM,IAC3Dc,EAAatE,IAAiBuE,EAAAA,EAAAA,IAAuBvE,EAAeypB,GAEtEzpB,GAAe2E,UACbL,EACFwkB,EAAqB,CAACW,IAEtBtpB,EAAiB,CAAE7Q,QAAS9G,EAAK,gCAGnCsgC,EAAqB,CAACW,GAE1B,KAAO,CACL,MAAMxlB,QAAuBC,QAAQC,IAAIX,EAAMha,KAAK4a,IAASC,EAAAA,EAAAA,GAAgBD,EAAKhK,KAAMgK,MACxF0kB,EAAqB7kB,EACvB,CACAilB,EAA4BS,EAAmB,IAO/Cf,gBAAiB/E,EACjBgF,yBACAC,uBACAL,yBACAC,oBAEJ,CD0YMkB,CAAmB,CACrBhlB,eACAif,WACA/jB,kBACAihB,iBACA95B,UACAgmB,iBACAF,iBACAD,iBACAE,oBACAwb,kBACAxoB,cAAe2N,KAGVkc,GAAmBC,GAAiBC,KAAoB5+B,EAAAA,EAAAA,MACxD6+B,GAAsBC,GAAoBC,KAAuB/+B,EAAAA,EAAAA,MACjEg/B,GAAkBC,GAAgBC,KAAmBl/B,EAAAA,EAAAA,MACrDm/B,GAAkBC,GAAgBC,KAAmBr/B,EAAAA,EAAAA,MACrDs/B,GAAmBC,GAAiBC,KAAoBx/B,EAAAA,EAAAA,MACxDy/B,GAAiBC,GAAcC,KAAe3/B,EAAAA,EAAAA,MAE/C,oBACJ4/B,GAAmB,mBACnBC,GAAkB,oBAClBC,GAAmB,qBACnBC,GAAoB,kBACpBC,GACAC,gBAAiBC,GAAa,mBAC9BC,GAAkB,kBAClBC,GAAiB,qBACjBC,GAAoB,sBACpBC,IEtiBsBC,MAExB,MAAMN,GAAkBrgC,EAAAA,EAAAA,IAA0B,OAC3CmgC,EAAsBS,IAA2B95B,EAAAA,EAAAA,MAClDy5B,GAAqBvgC,EAAAA,EAAAA,OACpBogC,EAAmBS,IAAwB/5B,EAAAA,EAAAA,OAC3C05B,EAAmBC,IAAwB35B,EAAAA,EAAAA,KAAS,IAE3DlI,EAAAA,EAAAA,KAAU,KAEJkiC,EAAAA,IAAaC,EAAAA,IACVC,IACP,GACC,IAEH,MAAMhB,GAAsBh9B,EAAAA,EAAAA,IAAgBwS,UAC1C,IACE,MAAM,KAAEkI,EAAI,MAAEQ,SAAgB8iB,IAAsBC,IAC9CZ,EAAgB7/B,UACd+/B,EAAmB//B,SAAWwb,KAAKC,MAAQ,GAAM,IACnDilB,EAAAA,EAAAA,KAAgB,KACTb,EAAgB7/B,UACrB6/B,EAAgB7/B,QAAQ4C,MAAM+9B,UAAa,SAA4B,IAAnBF,GAAc,uBAA2B,IAGjGJ,EAAqB7kB,KAAKC,OAC5B,IAEFskB,EAAmB//B,QAAUwb,KAAKC,MAClC4kB,EAAqB7kB,KAAKC,OAE1B2kB,EAAwB,CAAEljB,OAAMQ,SAClC,CAAE,MAAOpH,GAEPE,QAAQC,MAAMH,EAChB,KAGIopB,GAAsBl9B,EAAAA,EAAAA,IAAgB,KAC1C,GAAKm9B,EAAL,EAIAe,EAAAA,EAAAA,KAAgB,KACVb,EAAgB7/B,UAClB6/B,EAAgB7/B,QAAS4C,MAAM+9B,UAAY,OAC7C,IAGF,IACE,OAAOhB,EAAsBjiB,OAC/B,CAAE,MAAOpH,GAGP,YADAE,QAAQC,MAAMH,EAEhB,CAdA,CAcA,IAGImpB,GAAqBj9B,EAAAA,EAAAA,IAAgB,KACzC,GAAKm9B,EAAL,CAIAS,OAAwBhkC,GACxB2jC,EAAmB//B,aAAU5D,EAC7BikC,OAAqBjkC,IAErBskC,EAAAA,EAAAA,KAAgB,KACVb,EAAgB7/B,UAClB6/B,EAAgB7/B,QAAQ4C,MAAM+9B,UAAY,OAC5C,IAGF,IACE,OAAOhB,EAAsBziB,MAC/B,CAAE,MAAO5G,GAGP,YADAE,QAAQC,MAAMH,EAEhB,CAlBA,CAkBA,KAGFlY,EAAAA,EAAAA,KAAU,IACDuhC,GAAuBvV,EAAAA,GAAAA,GAAsBqV,QAAsBrjC,GACzE,CAACujC,EAAsBF,IAE1B,MAAMS,GAAwB19B,EAAAA,EAAAA,IAAgB,KAC5Cy9B,GAAsBD,EAAkB,IAG1C,MAAO,CACLR,sBACAE,sBACAD,qBACAE,uBACAC,oBACAC,kBACAE,qBACAC,oBACAC,uBACAC,wBACD,EFkcGC,GAEES,GAA4BhP,KAA4BuH,IAC9D0H,EAAAA,EAAAA,IAAY,KACVrH,GAAkB,CAAEze,KAAM,eAAgB,GACzC6lB,GAA4BjB,IAAwBmB,EAAAA,SAA+B1kC,IAEtFgC,EAAAA,EAAAA,KAAU,KACHwzB,KAA2BuH,KAC3BwG,IACHnG,GAAkB,CAAEze,KAAM,WAC5B,GACC,CAAC4kB,GAAsB/N,GAAyBuH,GAAiBK,KAEpE,MAAMuH,IAAeC,EAAAA,EAAAA,GAAY1kC,QAAQ8lB,KACzChkB,EAAAA,EAAAA,KAAU,KACHwzB,KAA2BuH,IAC5B/L,OAAc2T,GAAa/gC,SAC7Bw5B,GAAkB,CAAEze,KAAM,UAC5B,GACC,CAACqS,GAAS2T,GAAcnP,GAAyBuH,GAAiBK,KAErE,MAAMyH,GAAUtlC,KAAQulC,EAAAA,EAAAA,IAAYvlC,KAE9B,mBACJwlC,GAAkB,kBAClBC,GAAiB,eACjBC,GAAc,qBACdC,GAAoB,YACpBC,KACEC,EAAAA,GAAAA,GACFllC,QAAQo6B,GAAWvD,IAAkBgG,IAAmBvH,KACnD5B,KAA0BkL,IAC/B9N,GACAkL,QACAl8B,EACAs4B,GACArE,GACAC,KAGI,yBACJmR,GAAwB,wBACxBC,GAAuB,kBACvBC,KACEC,EAAAA,GAAAA,GACFtlC,QAAQo6B,GAAWvD,IAAkBgG,IAAmBvH,KACnD3B,KAA6BiL,IAClC9N,GACAkL,GACAI,GACAN,GACAhE,KAGI,qBACJyN,GAAoB,oBACpBC,InB1lBW,SACb1hB,EACAgN,EACA8G,GAEA,MAAM,qBAAE6N,EAAoB,sBAAEC,IAA0BhlC,EAAAA,EAAAA,OAEjDilC,EAAkBC,EAAoBC,IAAwBviC,EAAAA,EAAAA,IAAQ,GAEvEwiC,GAAiBnU,EAAAA,EAAAA,IAAiB,KACtC,MAAM/b,EAAOkb,IACb,IAAKhN,IAAclO,GAASmwB,EAAAA,IAAsBnwB,EAAKlT,OAdxC,EAc8D,OAG7E,IADiBkT,EAAK6D,MAAMssB,EAAAA,GAAqBC,GAAAA,EAAe9nB,EAAAA,KACjD,OAEf,MAAM+nB,GAAYC,EAAAA,EAAAA,GAAiBtwB,GAMnC,OALsBqwB,IACnBF,EAAAA,IAA0D,KAApCI,EAAAA,GAAAA,GAAqBF,KACvCF,EAAAA,IAAsB/lC,QAAQ4V,EAAK6D,MAAMuE,MAI3C+nB,EAAAA,GAAqBE,EAAYA,EAAUxsB,MAAM,gBAAgB,QAClE3Z,CAAS,GACZ,CAACgxB,EAAShN,IAEPrkB,GAAWqyB,EAAAA,EAAAA,IAAgB,IAAM9xB,QAAQ8lC,MAAmB,CAACA,IAC7DM,EAAcpmC,QAAQ43B,GAAUl1B,QAiBtC,OAfAZ,EAAAA,EAAAA,KAAU,KACR,IAAKgiB,IAAcrkB,EAAU,OAE7B,MAAM4mC,EAAcP,IAChBO,EACGD,GACHX,EAAqB,CAAEhF,MAAO4F,IAGhCX,GACF,GACC,CAAC5hB,EAAWrkB,EAAUqmC,EAAgBM,EAAaX,EAAsBC,KAE5E5jC,EAAAA,EAAAA,IAAU+jC,EAAsB,CAACA,EAAsB/U,IAEhD,CACLyU,qBAAsBvlC,QAAQP,GAAY2mC,IAAgBT,GAC1DH,oBAAqBI,EAEzB,CmB0iBMU,CACFtmC,QAAQo6B,GACHvD,IACCgG,IAAmBvH,KACpB5B,IACAoL,KACCF,IACN9N,GACA6G,KAGI,qBACJ4O,GAAoB,oBACpBC,GAAmB,cACnBC,GAAa,qBACbC,KACEC,EAAAA,GAAAA,GACF3mC,QAAQ48B,IAAmBxC,GAAW9E,KAA4BsJ,IAClE9N,GACAkL,GACAI,GACAN,GACA8B,GACA5F,GACA5D,KAIA7P,OAAQqiB,GACR/iB,MAAOgjB,GACPC,UAAWC,GACXC,SAAUC,GACVC,cAAeC,GACfC,QAASC,GACTC,aAAcC,GACdC,KAAMC,GACNC,SAAUC,IpBxnBC,SACb7jB,EACA1kB,EACA0xB,EACAwH,GAEA,MAAM,eAAEsP,EAAc,eAAEC,EAAc,mBAAEC,IAAuBpnC,EAAAA,EAAAA,OAExDilC,EAAkBC,EAAoBC,IAAwBviC,EAAAA,EAAAA,IAAQ,GAEvEykC,GAA2BC,EAAAA,EAAAA,KAAqB,KACpD,MAAMpyB,EAAOkb,IACb,OAAOhN,GAAalO,EAAKqyB,WAAW,KAoExC,SAAuBryB,GACrB,IAAKA,EAAKqyB,WAAW,KACnB,OAAO1qB,GAGT,MAAMva,EASR,SAAsB4S,GASpB,OARAgI,GAAO7D,UAAYnE,EAAKkE,QAAQ,QAAS,MAEzC8D,GAAOvD,iBAA8B,SAASlM,SAASkI,IAChDA,EAAG6E,YACN7E,EAAG6E,UAAY7E,EAAGwE,aAAa,OACjC,IAGK+C,GAAO1C,SAChB,CAnBegtB,CAAatyB,GACpBY,EAASxT,EAAKyW,MAAM4D,IAC1B,OAAK7G,EAIEqH,GAAoBrH,EAAO,GAAIA,EAAO,GAAkB,KAAdA,EAAO,KAAcxT,EAAKyW,MAAM6D,KAHxEC,EAIX,CAhF+C4qB,CAAcvyB,GAAQ2H,EAAc,GAC9E,CAACuT,EAAShN,GAzBE,MA0BT,SACJtG,EAAQ,MAAEC,EAAK,YAAEC,EAAW,gBAAEC,IAC5BmU,EAAAA,EAAAA,GAAgBiW,EAA0B,CAACA,EAA0BjX,IAAU,IAEnFe,EAAAA,EAAAA,IAAcxxB,IAAoB,IAAlB+nC,GAAa/nC,EACvB+nC,GACFP,EAAe,CAAErqB,SAAU4qB,GAC7B,GACC,CAAC5qB,EAAUqqB,KAEd/lC,EAAAA,EAAAA,KAAU,KACH6b,GAELiqB,EAAe,CACbxoC,SAAQoe,SAAUG,EAAiBF,SACnC,GACD,CAACre,EAAQqe,EAAOmqB,EAAgBjqB,KAEnC7b,EAAAA,EAAAA,IAAU+jC,EAAsB,CAACA,EAAsB/U,IAEvD,MACE/wB,GAAI8jB,EAAK,SACTmjB,EAAQ,cACRE,EAAa,OACbmB,EAAM,QACNjB,EAAO,UACPN,EAAS,KACTU,GACG7pB,GAAmB2a,IAAa3a,IAAqB,CAAC,EAErD4G,EAASvkB,SAASonC,GAAS1kC,QAAUskC,KAAcrB,IAEzD7jC,EAAAA,EAAAA,KAAU,KACHyiB,GAAW/G,GACdsqB,GACF,GACC,CAACvjB,EAAQujB,EAAoBtqB,IAEhC,MAAMkqB,GAAWxhC,EAAAA,EAAAA,IAAgB,KAC1ByX,GAELiqB,EAAe,CACbxoC,SAAQoe,SAAUG,EAAiBF,QAAO4qB,UAC1C,IAGJ,MAAO,CACL9jB,SACAV,QACAijB,YACAE,WACAE,gBACAE,UACAE,aAAc1B,EACd4B,KAAM9pB,GAAe8pB,EAAQ,IAAGhqB,KAAYgqB,SAAS1nC,EACrD4nC,WAEJ,CoBkjBMY,CACFtoC,QAAQ48B,IAAmBxC,GAAW9E,KAA4BsJ,IAClEx/B,GACA0xB,GACAwH,IAGIiQ,GAAkBvoC,QAAQi6B,IAAgBz4B,OAAO8qB,KAAK2N,IAAcv3B,SAGxE6hB,OAAQikB,GACRC,MAAOC,GACPC,oBAAqBC,GACrBC,qBAAsBC,I1BjpBX,SACbhlB,EACAgN,EACA4H,EACAmF,EACA5D,GAEA,MAAO0O,EAAqBI,IAA0B/+B,EAAAA,EAAAA,OAC/C6+B,EAAsBG,IAA2Bh/B,EAAAA,EAAAA,OACjD27B,EAAkBC,EAAoBC,IAAwBviC,EAAAA,EAAAA,IAAQ,GAEvE2lC,GAAyBjB,EAAAA,EAAAA,KAAqB,KAClD,MAAMpyB,EAAOkb,IACb,OAAOhN,GAAalO,EAAKqyB,WAAW,MAAO/B,EAAAA,EAAAA,GAAiBtwB,GAAM6D,MAAM3E,KAAc,GAAGo0B,YAASppC,CAAS,GAC1G,CAACgxB,EAAShN,GAhBE,KAkBTqlB,GAAaxX,EAAAA,EAAAA,GACjBsX,EAAwB,CAACA,EAAwBnY,IAAU,GA8B7D,OA3BAhvB,EAAAA,EAAAA,KAAU,KACR,MAAMsnC,EAAUD,IACVvQ,EAAWF,GAAemF,EAChC,IAAKuL,IAAaxQ,IAAaqB,EAG7B,OAFA8O,OAAuBjpC,QACvBkpC,OAAwBlpC,GAI1B,MAAM+B,EAASunC,EAAQhwB,UAAU,GAC3BiwB,EAA0BzQ,GAAU/2B,QAAQynC,IAAOznC,GAAUynC,EAAEF,QAAQnB,WAAWpmC,KAExFknC,EACEM,GAAyB3mC,OAAS2mC,OAA0BvpC,GAG9D,MAAMypC,EAA0B/nC,OAAOC,OAAOw4B,GAAgB,CAAC,GAAGp4B,QAAQ2nC,IACvE3nC,GAAU2nC,EAAWC,SAASxB,WAAWpmC,KAG5CmnC,EACEO,GAAyB7mC,OAAS6mC,OAA0BzpC,EAC7D,GACA,CAACqpC,EAAYzQ,EAAamF,EAAiB5D,KAE9Cn4B,EAAAA,EAAAA,IAAU+jC,EAAsB,CAACA,EAAsB/U,IAEhD,CACLvM,OAAQvkB,SAAS2oC,GAAqBjmC,QAAUmmC,GAAsBnmC,UAAYijC,GAClF8C,MAAO7C,EACP+C,sBACAE,uBAEJ,C0B6lBMa,CACF1pC,QAAQ48B,IACHxC,GACA9E,KACEoD,IAAeA,IAAah2B,QAAWm7B,IAAiBn7B,QAAW6lC,IAAmB9R,KAC7F3F,GACA4H,GACAmF,GACApH,GAAsBwD,QAAen6B,GtBxoBxBO,KAgBX,IAhBY,MAChB6qB,EAAK,OACL9rB,EAAM,SACNijB,EAAQ,QACRyO,EAAO,QACPkL,EAAO,cACP7jB,EAAa,WACb4Y,GASD1wB,EACC,MAAM,UAAEspC,EAAS,WAAE7O,EAAU,iBAAE8O,IAAqBlpC,EAAAA,EAAAA,MAE9CmpC,GAAe3mC,EAAAA,EAAAA,KAAO,IAE5BpB,EAAAA,EAAAA,KAAU,KACR,MAAM8T,EAAOkb,IACPgZ,OAAkChqC,IAAnBorB,GAAO6e,SACxBxJ,EAAAA,EAAAA,GAA0BrV,GAAOloB,QAAU4S,GAASk0B,EAGtDD,EAAanmC,SAAU,EAFvBmmC,EAAanmC,SAAU,CAGzB,GACC,CAACwnB,EAAO4F,KACXhvB,EAAAA,EAAAA,KAAU,KACR+nC,EAAanmC,SAAU,CAAK,GAC3B,CAACtE,EAAQijB,IAEZ,MAAM2nB,EAAYhqC,QAAQmY,GAEpB8xB,GAAc/jC,EAAAA,EAAAA,IAAgB,WAA8D,IAA7DgkC,EAAmD99B,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1F,GAAI2kB,GAAciZ,IAAcH,EAAanmC,QAAS,OAEtD,MAAMkS,EAAOkb,IAETlb,GACF8K,EAAAA,EAAAA,KAAe,KACbipB,EAAU,CACRvqC,OAAQ8qC,EAAU9qC,QAAUA,EAC5BijB,SAAU6nB,EAAU7nB,UAAYA,EAChCrf,MAAMsW,EAAAA,EAAAA,IAAyB1D,IAC/B,IAGJklB,EAAW,CACT17B,OAAQ8qC,EAAU9qC,QAAUA,EAC5BijB,SAAU6nB,EAAU7nB,UAAYA,EAChC8nB,iBAAiB,GAGvB,IAEMC,GAA2BC,EAAAA,GAAAA,GAAgBC,EAAAA,KAAgB,OAAMxqC,EAAW,CAACV,EAAQijB,KAG3FkoB,EAAAA,GAAAA,IAA4B3oC,IAA2C,IAAzC88B,EAAY8L,EAAcC,GAAU7oC,EAChE,GAAImvB,EACF,OAEF,MAAM2Z,EAAYb,EAAanmC,QAE/B,GAAItE,IAAWs/B,GAAcrc,IAAamoB,EAAc,CACtD,GAAIE,IAAcxf,EAAO,OAKzB,IAJKA,GAASuf,GACZzO,EAAQ,IAGN0O,EAAW,MACjB,CAEA,GAAIvyB,IAAkB+S,EACpB,OAGF8Q,GAAQuE,EAAAA,EAAAA,GAA0BrV,EAAMloB,OAExC,MAAM2nC,EAAiBzf,EAAMloB,MAAM+Y,UAC/Bpa,KAAK6vB,GAAWA,EAAO/S,OAASrD,EAAAA,GAAsBE,aAAekW,EAAOoZ,aAC7E/oC,OAAO7B,UAAY,GAClB2qC,EAAejoC,QAAQknC,EAAiB,CAAEiB,IAAKF,GAAiB,GACnE,CAACvrC,EAAQijB,EAAU6I,EAAO4F,EAASkL,EAAS7jB,EAAe4Y,KAG9DtjB,EAAAA,EAAAA,KAAgB,KACd,IAAIsjB,EAIJ,MAAO,KACAiZ,GACHC,EAAY,CAAE7qC,SAAQijB,aAvG5BpF,IAAW,GAEXyD,EAAAA,EAAAA,KAAe,KACbzD,IAAW,CAAK,GAuGN,CACT,GACA,CAAC7d,EAAQijB,EAAU2nB,EAAWC,EAAalZ,IAE9C,MAAM+Z,GAAYpG,EAAAA,EAAAA,GAAYtlC,GACxB2rC,GAAcrG,EAAAA,EAAAA,GAAYriB,IAChCvgB,EAAAA,EAAAA,KAAU,KACR,GAAIivB,GAAc9T,GAChB,OAGF,IAAK6T,IAGH,YAFAmZ,IAKF,MAAMe,EAAeF,EAAUpnC,QACzBunC,EAAiBF,EAAYrnC,QAEnC0mC,GAAyB,KACnBU,EAAUpnC,UAAYsnC,GAAgBD,EAAYrnC,UAAYunC,GAChEhB,GACF,GACA,GACD,CAACa,EAAWha,EAASC,EAAYqZ,EAA0BW,EAAad,KAE3EiB,EAAAA,GAAAA,GAAkBjB,IAClBkB,EAAAA,GAAAA,GAAgBlB,EAAY,EsB4gB5BmB,CAAS,CACPlgB,SACA9rB,UACAijB,YACAyO,WACAkL,WACA7jB,cAAe2N,EACfiL,WAAY8L,IAAmB78B,QAAQ80B,MAGzC,MAAMuW,IAAgBnlC,EAAAA,EAAAA,IAAgB,WAAoBkG,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,IAEtD4vB,GAAQ,IAGV/jB,GAAeqpB,EAAAA,GACfppB,QAAYpY,GAEZglC,KACAM,KACAI,KACAgB,KAEI58B,EAEFvD,YAAW,IAAMm8B,MApbY,KAsb7BA,IAEJ,KAEO8I,GAAoBC,GAAkBrhB,IrBjrB5BshB,EACjB1a,EACAkL,EACA7jB,EACAkzB,EACAxI,EACAzjC,EACAijB,EACA5D,EACAyM,EACAyK,KAEA,MAAM,YAAEkG,EAAW,gBAAE4P,EAAe,qBAAEva,IAAyBxwB,EAAAA,EAAAA,OACxDwpB,EAAwBwhB,IAA6B1hC,EAAAA,EAAAA,KAAS,GAE/D2hC,EAAezgB,GAAOE,WAAWK,cAEvCmgB,EAAAA,EAAAA,IAAsBvrC,IAA2C,IAAzCwrC,EAAmBC,GAAiBzrC,EAC1D,IAAK8X,EACH,OAGF,GAAIwzB,GAAgBG,IAAqBH,EAGvC,OAFA3P,EAAQ,SACR0P,GAA0B,GAI5B,GAAIG,GAAmB9rC,KAAOoY,EAAcpY,IAAM4rC,IAAiBG,EACjE,OAGF,MAAM9oC,GAAQ6oC,GAAqBlW,GAAc3yB,KAAKN,OAASizB,EAAexd,EAAchP,QAAQnG,KAC9F4S,GAAO2qB,EAAAA,EAAAA,GAA0Bv9B,GAEvCg5B,EAAQpmB,GACR81B,GAA0B,IAE1BtL,EAAAA,EAAAA,KAAoB,KAClB,MAAMV,EAAehrB,SAASua,cAA8B8c,EAAAA,KACxDrM,IACFW,EAAAA,EAAAA,GAAqBX,GAAc,EACrC,GACA,GACD,CAACvnB,EAAewzB,EAAchW,EAAcqG,KAE/Cl6B,EAAAA,EAAAA,KAAU,KACR,IAAKqW,EACH,OAGF,MAAM6zB,IAAuB,YAAa7zB,EAAchP,UACnDgP,EAAchP,QAAQnG,MAAM+Y,UAAUqQ,MAAMoF,GAAWtU,GAAarX,IAAI2rB,EAAO/S,QAEpFyS,EAAqB,CACnB9xB,SACAijB,WACAqO,UAAWsb,GACX,GACD,CAAC5sC,EAAQijB,EAAUlK,KAEtBrW,EAAAA,EAAAA,KAAU,KACR,GAAKqW,EACL,MAAO,KACL,MAAM8zB,GAAS3yB,EAAAA,EAAAA,IAAyBwX,KAClCob,EAASD,EAAOjpC,KAAKN,OAASupC,OAASnsC,EAE7C2rC,EAAgB,CACdrsC,SAAQijB,WAAU5D,OAAMzb,KAAMkpC,GAC9B,CACH,GACA,CAAC9sC,EAAQ+Y,EAAe2Y,EAAS2a,EAAiBppB,EAAU5D,IAE/D,MAAM2S,GAAsBC,EAAAA,EAAAA,KAAqB,KAC/C,IAAKlZ,EAAe,OAAO,EAE3B,MAAM8zB,GAAS3yB,EAAAA,EAAAA,IAAyBwX,KACxC,QAAS,YAAa3Y,EAAchP,UAC/BgP,EAAchP,QAAQnG,MAAM+Y,UAAUqQ,MAAMoF,GAAWtU,GAAarX,IAAI2rB,EAAO/S,UAC7EwtB,EAAOlwB,UAAUqQ,MAAMoF,GAAWtU,GAAarX,IAAI2rB,EAAO/S,OAAO,GACvE,CAACtG,EAAe2Y,GAlFD,KAkFwB,GAEpCqb,GAAmCxa,EAAAA,EAAAA,GAAiBP,EAAqB,CAACA,EAAqBN,IAAU,IAE/G8a,EAAAA,EAAAA,IAAsBhqC,IAAyB,IAAvBiqC,GAAkBjqC,EACnCuW,GAAiB0zB,GAAmB9rC,KAAOoY,EAAcpY,IAI1DosC,KACFjb,EAAqB,CACnB9xB,SACAijB,WACAqO,WAAW,GAEf,GACC,CAACvY,EAAe/Y,EAAQ0xB,EAASzO,EAAU8pB,IAE9C,MAAMC,GAA8BlmC,EAAAA,EAAAA,IAAgB,KAC7CglB,IAGLxK,EAAAA,EAAAA,KAAe,KACbsb,GAAQuE,EAAAA,EAAAA,GAA0BrV,EAAMloB,QAGxCo9B,EAAAA,EAAAA,KAAoB,KAClB,MAAMV,EAAehrB,SAASua,cAA8B8c,EAAAA,KACxDrM,IACFW,EAAAA,EAAAA,GAAqBX,GAAc,EACrC,GACA,GACF,IAGE6L,GAAmBrlC,EAAAA,EAAAA,IAAgB,KACvCmlC,IACAe,GAA6B,IAGzBd,GAAqBplC,EAAAA,EAAAA,IAAgB,KACzC,MAAM,KAAElD,EAAI,SAAE+Y,IAAazC,EAAAA,EAAAA,IAAyBwX,KAE/C3Y,IAIAnV,IAASqpC,EAAAA,EAAAA,IAAgBl0B,IAK9B0jB,EAAY,CACVyQ,YAAa,CAAEltC,SAAQijB,WAAU5D,QACjCzb,OACA+Y,aAGFsvB,IACAe,KAXEvJ,IAW2B,IAGzB0J,GAAarmC,EAAAA,EAAAA,IAAgB,KACjC,IAAKiS,EAAe,OACpB,MAAM8zB,GAAS3yB,EAAAA,EAAAA,IAAyBwX,KAClCob,EAASD,EAAOjpC,KAAKN,OAASupC,OAASnsC,EAE7C2rC,EAAgB,CACdrsC,SAAQijB,WAAU5D,OAAMzb,KAAMkpC,GAC9B,IAMJ,OAHAhB,EAAAA,GAAAA,GAAkBqB,IAClBpB,EAAAA,GAAAA,GAAgBoB,GAET,CAACjB,EAAoBC,EAAkBrhB,EAAuB,EqBshBEshB,CACrE1a,GACAkL,GACAlW,EACAulB,GACAxI,GACAzjC,GACAijB,GACA8H,GACAe,GACAyK,IAII6W,IAAmB9H,EAAAA,EAAAA,GAAY2G,IAC/BoB,IAAwB/H,EAAAA,EAAAA,GAAYvB,KAC1CrhC,EAAAA,EAAAA,KAAU,IACD,KAEL2qC,GAAsB/oC,UAEtB8oC,GAAiB9oC,SAAS,GAE3B,CAACtE,GAAQijB,GAAUmqB,GAAkBC,KAExC,MAAMC,IAAqCxmC,EAAAA,EAAAA,IAAgB,KACzD,MAAMymC,EAAqBxO,GAA8Bz6B,QAWvD4U,GAVGq0B,EAUc,CACfllC,QAAS9G,GAAK,2BACd8sB,OAAQ,CACNA,OAAQ,WACRmf,QAAS,CAAE7sC,GAAIq0B,GAAeyY,sBAAsB,IAEtDC,WAAYnsC,GAAK,SAfF,CACf8G,QAAS9G,GAAK,0BACd8sB,OAAQ,CACNA,OAAQ,mBACRmf,QAAS,CAAEG,eAAgB,mBAE7BD,WAAYnsC,GAAK,iBAYrBw9B,GAA8Bz6B,QAAUspC,QAAQL,EAAmB,IAG/DM,IAAkBnb,EAAAA,EAAAA,IAAgB,IACjCsL,KAAmBxC,IAAe9J,OAAc8N,GAIjD9Y,GAAkBoE,GACbsI,GAAgB0a,MAGrBjJ,EAAAA,IAAiCZ,IAAyBrY,IAAkB8F,OAAc8N,GAI1FpI,EACKhE,GAAgB2a,SAGlB3a,GAAgB4a,KAPd5a,GAAgB6a,OARhB7a,GAAgB8a,SAgBxB,CACDjK,GAAsBvd,EAAgBgL,GAAS8N,GAAgB5T,GAAcoS,GAAiBxC,GAC9F1Q,GAAwBsM,IAEpB+W,IAAyB/W,GAG7BzI,kBAAmByf,GAAoB,kBACvCrqB,GAAiB,uBACjB8K,GAAsB,sBACtBC,KACEC,EAAAA,EAAAA,GAAuBqV,KAAiByJ,KAAoBza,GAAgB4a,MAAQG,MAGtFvf,oBAAqByf,GACrBtqB,kBAAmBuqB,GACnBC,wBAAyBC,GACzB1f,sBAAuB2f,KACrB1f,EAAAA,EAAAA,GAAuB4N,IAAmBc,KAE9C/6B,EAAAA,EAAAA,KAAU,KACJy3B,IAEAkU,KACF/R,GAAwB,CACtBoS,OAAQ1uC,GACRszB,QAASA,GACTqb,SAAUN,KAEZI,KACF,GACC,CAACzuC,GAAQyuC,GAAkCtU,GAAsB7G,GAAS+a,KAE7E11B,GACEud,IAA2BuH,GAC3ByD,GACAW,GACA/oB,GACA4N,GACC6G,KAAyBb,GAC1B4gB,IAGF,MAAMsB,IAAsB9nC,EAAAA,EAAAA,IAAgB,KACtC4f,GACFylB,IACF,IAGI0C,IAAqB/nC,EAAAA,EAAAA,IAAgB,CAAClD,EAAckrC,KACxD,MAAMC,EAAYD,EAAoB7U,GAhjBf,KAijBvB,GAAIr2B,GAAMN,OAASyrC,EAAW,CAC5B,MAAMC,EAAcprC,EAAKN,OAASyrC,EAYlC,OAXApT,GAAW,CACTxuB,KAAM,CACJ9E,QAAS,4CACT4mC,WAAY,CACV,sBAAuBD,EAAYE,WACnC,aAAcF,EAAc,EAAI,IAAM,IAExCG,aAAa,MAIV,CACT,CACA,OAAO,CAAI,IAGPC,IAAgBtoC,EAAAA,EAAAA,IAAgB,KACpC,GAAIwvB,KAAaiP,GAAS,CACxB,MAAMjF,EAAehrB,SAASua,cAA8BwL,IAEtDgU,GAAaC,EAAAA,EAAAA,MACbC,EAA0BrS,GAA2B54B,SACtDkJ,KAAKgiC,MAAMH,EAAanS,GAA2B54B,SAClDmrC,EAAyBnZ,GAASoZ,cAAgBpZ,GAASoZ,aAAeL,EAEhF,GACGE,GAA2BA,EAA0BjZ,GAASqZ,SAC5DF,EACH,CACA,MAAMG,EAAmBH,EACrBnZ,GAASoZ,aAAgBL,EACzB/Y,GAASqZ,QAAUJ,EAWvB,OAVA5T,GAAW,CACTxuB,KAAM,CACJ9E,QAAS9G,GAAK,gBAAgBmR,EAAAA,EAAAA,IAAoBk9B,IAClDC,YAAY,EACZV,aAAa,KAIjB7O,GAAcwP,QAEP,CACT,CACF,CACA,OAAO,CAAI,IAGPC,IAAkBjpC,EAAAA,EAAAA,IAAgB/G,IAclC,IAbJ4d,YAAaqyB,EAAiB,eAC9BC,EAAiB/V,GAAmBgW,eAAc,YAClDC,EAAcjW,GAAmBkW,kBAAiB,SAClDC,EAAQ,YACRC,EAAW,gBACXC,GAQDxwC,EACC,IAAKk2B,KAAuB3C,GAC1B,OAGF,MAAM,KAAE1vB,EAAI,SAAE+Y,IAAazC,EAAAA,EAAAA,IAAyBwX,OAC/C9tB,GAASosC,EAAkB1sC,SAG3BurC,GAAmBjrC,GAAM,IACzBwrC,OAELmB,EAAkB3sC,GAAQqsC,GAAkBE,EAAcI,OAAkB7vC,EAExEgmB,EACF+V,GAAY,CACVyQ,YAAajX,GACbryB,OACA+Y,WACAgB,aAAa6yB,EAAAA,EAAAA,GAAyBR,EAAmBC,KAG3DxU,GAAY,CACVyR,YAAajX,GACbryB,OACA+Y,WACA2zB,cACAD,WACA7b,+BACA7W,aAAa6yB,EAAAA,EAAAA,GAAyBR,EAAmBC,GACzDQ,oBAAqBN,EACrBI,oBAIJrT,GAA2B54B,SAAUgrC,EAAAA,EAAAA,MAErC5T,GAAW,CAAE17B,UAAQ0wC,aAAa,KAGlCpvB,EAAAA,EAAAA,KAAe,KACb2qB,IAAe,IACf,IAGE0E,IAAiC7pC,EAAAA,EAAAA,IAAgB,CACrDmpC,EACAE,EACAI,KAEAR,GAAgB,CACdpyB,eACAsyB,iBACAE,cACAI,mBACA,IAGEK,IAAwB9pC,EAAAA,EAAAA,IAAgB,CAC5CmpC,EACAE,EACAE,EACAC,EACAC,KAEAR,GAAgB,CACdpyB,eACAsyB,iBACAE,cACAE,WACAC,cACAC,mBACA,IAGEM,IAAa/pC,EAAAA,EAAAA,IAAgBwS,iBAAkD,IAA3C+2B,EAAQrjC,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAAUsjC,EAAoBtjC,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAC9E,IAAKu1B,KAAuB3C,GAC1B,OAGF,IAAIwd,EAAqBnzB,GAEzB,GAAIsmB,GAAsB,CACxB,MAAM8M,QAAehN,KACfiN,EAAa1M,GAAoB2M,EAAAA,SAA6BvwC,EACpE,GAAIqwC,EAAQ,CACV,MAAM,KAAEnvB,EAAI,SAAEtV,EAAQ,SAAEgB,GAAayjC,EACrCD,EAAqB,OAAO1zB,EAAAA,EAAAA,GA9sBH,8BAgtBvBwE,EACA,CAAE1X,MAAO,CAAEoC,WAAUgB,YAAY0jC,eAErC,CACF,CAEA,MAAM,KAAEptC,EAAI,SAAE+Y,IAAazC,EAAAA,EAAAA,IAAyBwX,MAEpD,GAAIof,EAAmBxtC,OAMrB,YALAysC,GAAgB,CACdpyB,YAAamzB,EACbR,cACAD,aAKJ,IAAKzsC,IAASgoB,GACZ,OAGF,IAAKijB,GAAmBjrC,GAAO,OAE/B,MAAM08B,EAAehrB,SAASua,cAA8BwL,IAE5D,GAAIz3B,EAAM,CACR,IAAKwrC,KAAiB,OAEtB3T,GAAY,CACVyR,YAAajX,GACbryB,OACA+Y,WACA2zB,cACAD,WACA7b,gCAEJ,CAEI5I,IACFZ,GAAgB,CACdslB,cACAD,aAIJnT,GAA2B54B,SAAUgrC,EAAAA,EAAAA,MACrC5T,GAAW,CACT17B,UAAQijB,YAAUytB,aAAa,EAAM3F,gBAAiBnf,KAGpDvW,EAAAA,IAAUirB,GAAgBA,IAAiBhrB,SAASmE,eACtDvE,EAA8BorB,IAIhChf,EAAAA,EAAAA,KAAe,KACb2qB,IAAe,GAEnB,IAYMiF,KAVqBpqC,EAAAA,EAAAA,IAAgB,KACb,WAAxB2yB,IAAepa,MAInBiE,GAAc,CACZtjB,UAAQqyB,IAAKoH,GAAcpH,IAAKpP,aAChC,KAGiCnc,EAAAA,EAAAA,IAAgB,KACnDs8B,KACAJ,IAAoB,KAGhBmO,IAAwBrqC,EAAAA,EAAAA,IAAgB,CAC5CsqC,EAA4Bd,EAAqBpD,KAEjD,GAAIkE,GAAQ,YAAaA,EAAM,CAC7B,MAAM,GAAEzwC,EAAE,QAAE0wC,EAAO,SAAEhB,GAAae,EAQlC,YAPAnV,GAAoB,CAClBt7B,KACA0wC,UACAf,cACAD,WACAnD,eAGJ,CAEA,MAAM,SAAEmD,KAAaiB,GAAaF,GAAQ,CAAC,EAE3C,GAAKA,GAAyC,IAAjChvC,OAAO8qB,KAAKokB,GAAUhuC,OAE5B,QAA4B5C,IAAxB0wC,EAAKnB,qBAAqDvvC,IAArB0wC,EAAKjB,YAA2B,CAC9E,MAAM,eAAEF,GAAiB,EAAK,YAAEE,GAAc,EAAK,gBAAEI,GAAoBa,EACpER,GAAsBX,EAAgBE,EAAaE,EAAUC,EAAaC,EACjF,MACE9U,GAAY,IACP2V,EACHlE,cACAoD,qBARGO,GAAWjwC,QAAQyvC,GAAWC,EAUrC,KAGF9D,EAAAA,EAAAA,IAAsB+E,IAAgC,IAA9BC,GAAyBD,EAC3Ctb,IAAsB8C,IAAwBA,KAAyByY,GACzExS,IAAiBsR,IACfa,GAAsBpY,GAAsBuX,EAAara,GAAmB,GAEhF,GACC,CAAC8C,GAAsB9C,GAAoBkb,GAAuBnS,MAErEt8B,EAAAA,EAAAA,KAAU,KACJgzB,KACFwL,GAAmCxL,IACnCyG,MAEA6E,EAAAA,EAAAA,KAAoB,KAClB,MAAMV,EAAehrB,SAASirB,eAAejF,KAC7C2F,EAAAA,EAAAA,GAAqBX,GAAc,EAAK,IAE5C,GACC,CAAChF,GAAiB5F,GAAgByG,GAAwBS,MAE7Dl6B,EAAAA,EAAAA,KAAU,KACJkzB,IAAqBtyB,SAClB2kB,GAAiB2N,IACtBuG,KACF,GACC,CAAClU,GAAkB2N,GAAqBuG,KAE3C,MAAMsV,IAA0B3qC,EAAAA,EAAAA,IAAgB,CAACu6B,EAAmBlB,KAClE,MAAMuR,EAAa,OAAQrQ,EAAMsQ,gBAAkBtQ,EAAMsQ,eAAehxC,GACnE0gC,EAAMuQ,QAAWrkB,IAAyBb,IAAkBglB,IAAehT,GAKhF0C,GAAiCC,EAAOlB,GAJtCmN,IAIgD,IAG9CuE,IAAyC/qC,EAAAA,EAAAA,IAAiBu6B,IAC9DoQ,GAAwBpQ,EAAO1nB,EAAAA,IAAwB,IAGnDm4B,IAAkBhrC,EAAAA,EAAAA,IAAgB,CAACirC,EAAe1B,EAAoB2B,MACrE/b,IAAuB3C,MAIxB8D,GAAqB4a,GACvBpU,KACAoB,IAAiBsR,IACfzS,KACAsT,GAAsB,CAAEY,MAAK1B,YAAYC,EAAara,KACtD3U,EAAAA,EAAAA,KAAe,KACb2qB,IAAc,EAAK,GACnB,MAGJxQ,GAAY,CAAEyR,YAAajX,GAAoB8b,MAAK1B,cACpD/uB,EAAAA,EAAAA,KAAe,KACb2qB,IAAc,EAAK,KAEvB,IAGIgG,IAAsBnrC,EAAAA,EAAAA,IAAgB,SAC1C/B,EACAsrC,EACA2B,GAGG,IAFHE,EAAmBllC,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACnBmlC,EAAmCnlC,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,GAE9Bu1B,IAAuB3C,MAI5BvuB,EAAU,IACLA,EACHqtC,qBAAqB,GAGnBhb,GAAqB4a,GACvBpU,KACAoB,IAAiBsR,IACfzS,KACAsT,GAAsB,CAAEpsC,UAASsrC,YAAYC,EAAara,KAC1D3U,EAAAA,EAAAA,KAAe,KACb2qB,GAAciG,EAAoB,GAClC,MAGJzW,GAAY,CACVyR,YAAajX,GACblxB,UACAsrC,WACA7b,4BAA6BA,IAA+B2d,IAE9DzW,GAAW,CAAE17B,UAAQijB,YAAUytB,aAAa,KAE5CpvB,EAAAA,EAAAA,KAAe,KACb2qB,GAAciG,EAAoB,KAGxC,IAEMG,IAAwBvrC,EAAAA,EAAAA,IAAgB,CAC5CwrC,EAA4DjC,EAAoB2B,KAEhF,IAAK/b,KAAuB3C,GAC1B,OAGE8D,GAAqB4a,EACvBhT,IAAiBsR,IACfa,GAAsB,CACpBxwC,GAAI2xC,EAAa3xC,GACjB0wC,QAASiB,EAAajB,QACtBhB,YACCC,EAAara,GAAoB,IAGtCgG,GAAoB,CAClBt7B,GAAI2xC,EAAa3xC,GACjB0wC,QAASiB,EAAajB,QACtBhB,WACAnD,YAAajX,KAIjB,MAAMqK,EAAehrB,SAASua,cAA8BwL,IACxDhmB,EAAAA,IAAUirB,GAAgBA,IAAiBhrB,SAASmE,eACtDvE,EAA8BorB,GAGhC5E,GAAW,CAAE17B,UAAQ0wC,aAAa,KAClCpvB,EAAAA,EAAAA,KAAe,KACb2qB,IAAe,GACf,IAGEsG,IAAyBzrC,EAAAA,EAAAA,IAAgB,KAC7C40B,GAAW,CAAE17B,UAAQ0wC,aAAa,KAClCpvB,EAAAA,EAAAA,KAAe,KACb2qB,IAAe,GACf,IAGEuG,IAAiB1rC,EAAAA,EAAAA,IAAiB2rC,IACjCxc,KAIDmB,GACF4H,IAAiBsR,IACfa,GAAsB,CAAEsB,QAAQnC,EAAara,GAAmB,IAElE4F,OAEAJ,GAAY,CAAEyR,YAAajX,GAAoBwc,SAC/C5W,MACF,IAGI6W,IAAa5rC,EAAAA,EAAAA,IAAiB6rC,IAClC,GAAIvb,EACF4H,IAAiBsR,IACfa,GAAsB,IAAKwB,EAAgBtC,UAAU,GAAQC,EAAara,GAAoB,SAE3F,GAAI0c,IAAmB,mBAAoBA,GAAkB,gBAAiBA,GAAiB,CACpG,MAAM,eAAE1C,GAAiB,EAAK,YAAEE,GAAc,EAAK,gBAAEI,GAAoBoC,EACpE/B,GAAsBX,EAAgBE,GAAa,OAAMzvC,EAAW6vC,EAC3E,MACOM,IAAW,EAClB,IAGI+B,IAAuB9rC,EAAAA,EAAAA,IAAgB,KAC3C,MAAMw5B,EAAehrB,SAASua,cAA8BwL,IAE5D,IAAK7wB,GAAY81B,IAAiBhrB,SAASmE,cAIzC,OAHAwpB,KACAG,UACAE,KAIFhD,GAAcwP,OACd7oC,YAAW,KACTg8B,KACAG,KACAE,IAAgB,GAl/BgB,IAm/BD,KAGnC5gC,EAAAA,EAAAA,KAAU,KACHs9B,IAELpD,GAAQ,GAAG,GACV,CAACoD,GAAmBpD,GAASjf,KAEhC,MAAMk1B,IAA2C/rC,EAAAA,EAAAA,IAAiBlD,IAChEgV,GAA0BhV,EAAM+V,EAAAA,IAAwB,IAGpDm5B,IAAehsC,EAAAA,EAAAA,IAAgB,WAAiC,IAAhCq5B,EAASnzB,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGsuB,GAChD,MAAM8E,EAAY14B,OAAO24B,eAEzB,GAAID,EAAUI,WAAY,CACxB,MAAMC,EAAiBL,EAAUM,WAAW,GAC5C,IAAIC,EAAAA,EAAAA,GAAuBF,EAAgBN,GAEzC,YADA7qB,SAASy9B,YAAY,UAAU,EAGnC,CAEAnW,GGzxCW,SAA6CpmB,GAC1D,MAAMw8B,EAAY19B,SAASnS,cAAc,OACzC6vC,EAAUC,gBAAkB,OAC5BD,EAAU9rC,MAAMynC,SAAW,WAC3BqE,EAAU9rC,MAAM2J,KAAO,WACvBmiC,EAAU9rC,MAAMgsC,IAAM,WACtBF,EAAUr4B,UAAYnE,EACtBw8B,EAAU9xC,UAAY,kBACtBoU,SAASE,KAAKC,YAAYu9B,GAC1B,IAAIG,EAAUH,EAAUI,UAExB,GAAID,EAAQC,UAEV,KAAOD,EAAQC,WACbD,EAAUA,EAAQC,UAKtB,MAAMC,EAAaF,EAAQt7B,YAAavU,OAClCgwC,EAAQh+B,SAASi+B,cACjBnT,EAAY14B,OAAO24B,eAGzBiT,EAAME,SAASL,EAASE,GACxBC,EAAMG,OAAON,EAASE,GACtBjT,EAAUsT,kBACVtT,EAAUuT,SAASL,GACnBh+B,SAASy9B,YAAY,UAAU,GAE/B,MAAM37B,EAAS47B,EAAUr4B,UAGzB,OAFArF,SAASE,KAAKo+B,YAAYZ,GAEnB57B,CACT,CHuvCYy8B,CAAoCniB,MAC9C,IAEMoiB,IAA8BhtC,EAAAA,EAAAA,IAAgB,KAClDgsC,GAAan5B,EAAAA,IAAwB,IAGjCo6B,IAA0BjtC,EAAAA,EAAAA,IAAgB,KAC9Ci1B,GAAW,CACT/7B,UAAQijB,YAAU5D,KAAM,YAAaiQ,mBAAmB,GACxD,KAGJ5sB,EAAAA,EAAAA,KAAU,KACJq1B,IAAsBvtB,GACxB44B,IACF,GACC,CAACrL,GAAoBqL,GAAiB54B,KAEzC9H,EAAAA,EAAAA,KAAU,KACHs4B,IAED/C,GACF2L,KAEA38B,YAAW,KACT48B,IAAa,GApiCa,KAsiC9B,GACC,CAAC5L,GAAoB4L,GAAaD,GAAc5I,IAEnD,MAAMgZ,GAAoBtgB,IAAyC,WAAxB+F,IAAepa,OAAsBqH,EAC1EutB,IAAsBvhB,EAAAA,EAAAA,IAAgB,IACnCshB,KAAsBtiB,OAAcuS,IAC1C,CAAC+P,GAAmBtiB,GAASuS,MAEzBiQ,GAAyBC,KAAwBtyC,EAAAA,EAAAA,KAAQ,IAC1Dy0B,IAAUoZ,aACL,CAAC,eAAgBpZ,GAASoZ,cAG/BhV,IAAa0Z,aAAe3W,GACvB,CAAC,wBAAyB/C,GAAY0Z,aAGxC,IACN,CAAC3W,GAAiBnH,IAAUoZ,aAAchV,IAAa0Z,cAEpDC,GAAqBzR,IAAqBM,IAAoBuC,IAAsBpC,IACrF8D,IAAwBK,IAA0BhE,IAAqBT,IAAwBpc,IAC/Fwf,IAAwBiD,IAA4BrD,IAA4BkO,IAClF7F,IAAwBxtC,QAAQqjC,KAAyBtmB,GAAYra,OAAS,GAAK06B,GAChFsW,GAAyBD,KAAuBla,IAAwBsD,KAAoB9W,KAC5Fuc,GACAqR,GAAgCt0C,IAAM+2B,SAAW/2B,IAAMg3B,mBAAqBhU,KAAaiU,EAAAA,GAC1FH,GACCx1B,GAAK,oCAAqCw1B,GAAarlB,OACvDnQ,GAAK,6CACPb,GAEJgC,EAAAA,EAAAA,KAAU,KACJ2xC,GACFnZ,MAEAC,KACF,GACC,CAACkZ,GAAoBlZ,EAAQD,IAEhC,MACEt4B,aAAc4xC,GACd3xC,qBAAsB4xC,KACpB3xC,EAAAA,EAAAA,GAAkBwxC,IAChBI,KAA6B7G,KAAoBza,GAAgB6a,QAChEtoB,IAAmByQ,IAA0ByJ,IAE9C8U,IAAoB7tC,EAAAA,EAAAA,IAAgB,KACxC,OAAQ+mC,IACN,KAAKza,GAAgB8a,QACnB1S,OACA,MACF,KAAKpI,GAAgB4a,KACd6C,KACL,MACF,KAAKzd,GAAgB6a,OACfyG,GACGte,GAIOyJ,IACVxD,GAAoC,CAAEr8B,YAJtCkZ,GAAiB,CACf7Q,QAAS9G,GAAK,mCAAoCtB,IAAMyR,UAM5D6yB,IAAqB,GAChBT,MAEP,MAEF,KAAK1Q,GAAgB0a,KACnB5B,KACA,MACF,KAAK9Y,GAAgB2a,SAInB,GAHI9J,IACFD,MAEG/N,GACH,OAEF+I,IAAiBsR,IACfa,GAAsB,CAAC,EAAGb,EAAara,GAAmB,IAKhE,IAGIwW,IAAoBrP,EAAAA,EAAAA,GAAY1W,GAAgB,GAChDkuB,GAAwBluB,GAAkB+lB,GAE1CoI,GAAuB,IAAI/0B,KACjC+0B,GAAqBC,WAAW,GAChCD,GAAqBE,gBAAgB,GAErC,MAAMC,GAAmB,IAAIl1B,KAC7Bk1B,GAAiBC,YAAYD,GAAiBE,cAAgB,GAE9D,IAAIC,GAAsB,cAC1B,OAAQtH,IACN,KAAKza,GAAgB8a,QACnBiH,GAAsB,UACtB,MACF,KAAK/hB,GAAgB0a,KACnBqH,GAAsB,sBACtB,MACF,KAAK/hB,GAAgB6a,OACnBkH,GAAuBxvB,GAEnB,uBADA,sCAIR,MAAM3T,IAAgB5O,EAAAA,EAAAA,GACpB,YACC60B,IAAsB,QACvB0L,IAAmB,iBACnB7G,IAAa,UACb57B,IAGIk0C,IAAuBtuC,EAAAA,EAAAA,IAAiBuuC,IAC5C,IAAIzxC,EACA+Y,EAEJ,GAAI,aAAc04B,EAChBzxC,EAAOyxC,EAASzW,aACX,CACL,MAAM75B,GAAUhD,EAAAA,EAAAA,MAAY42B,aAAa12B,KAAKozC,EAAS7J,YACvD,IAAKzmC,EACH,OAGF,IAAKA,EAAQ6sC,SAAWrkB,KAAyBb,GAE/C,YADA4gB,KAGF,MAAMgI,GAAqBp7B,EAAAA,EAAAA,KAAyBonB,EAAAA,EAAAA,IAAqBv8B,IACzEnB,EAAO0xC,EAAmB1xC,KAC1B+Y,EAAW24B,EAAmB34B,QAChC,CAEA8e,GAAY,CAAE73B,OAAM+Y,WAAU44B,YAAY,IAC1ChZ,IAAqB,IAGjBiZ,IAA2B1uC,EAAAA,EAAAA,IAAiB6nC,IAChDrS,GAAwB,CACtBoS,OAAQ1uC,GACRszB,QAASA,GACTqb,WACA8G,eAAe,GACf,IAGEC,IAAkB5uC,EAAAA,EAAAA,IAAgB,KACtC,MAAMuuC,EAAWze,QAAoBl2B,EAAYm+B,EAAAA,IACjDrC,GAAkB,CAChBkS,OAAQ1uC,GACRszB,QAASA,GACTqiB,aAAaC,EAAAA,EAAAA,IAAY51C,GAAQszB,IACjC+hB,YACA,IAGEQ,IAAsB/uC,EAAAA,EAAAA,IAAgB,KAC1Ck4B,IAAiBsR,IACfa,GAAsB,CAAC,EAAGb,EAAara,GAAoB,GAC3D,IAGE6f,IAAmBhvC,EAAAA,EAAAA,IAAgB,KACvC4rC,IAAY,IAGRqD,IAAuBjvC,EAAAA,EAAAA,IAAgB,KAC3CqqC,GAAsB,CAAC,EAAG6E,EAAAA,IAAuB/f,GAAoB,IAGjEggB,IAAiCnvC,EAAAA,EAAAA,IACrC,CAACmpC,EAAyBE,EAAsBI,KAC9CvR,IAAiBsR,IACfa,GAAsB,CAAElB,iBAAgBE,cAAaI,mBAAmBD,EAAara,GAAoB,GACzG,IAIAigB,IAA8BpvC,EAAAA,EAAAA,IAClC,CAACmpC,EAAyBE,EAAsBI,KAC9CmC,GAAW,CAAEzC,iBAAgBE,cAAaI,mBAAkB,IAI1D4F,IAASt0C,EAAAA,EAAAA,KAAQ,KACrB,OAAQgsC,IACN,KAAKza,GAAgB0a,KACnB,OAAO5B,GACT,KAAK9Y,GAAgB2a,SACnB,OAAO8H,GACT,QACE,OAAOhF,GACX,GACC,CAAChD,GAAiB3B,KAEfkK,GAAkB1iB,IAAyC,aAAxB+F,IAAepa,OAAwBqH,IAC3D,IAAhB4S,KAA0B2K,GAE/B,OACE/gC,EAAAA,GAAAC,cAAA,OAAKjC,UAAW8Q,IACbwrB,IAAmB7X,IAAkBqV,GACpC93B,EAAAA,GAAAC,cAAC2tB,GAAQ,CACP3L,OAAQ4V,IAAkBsb,GAAAA,EAAcC,KACxCC,UAAWxb,IAAkBsb,GAAAA,EAAcG,WAAarZ,KAAsBkZ,GAAAA,EAAcG,UAC5FC,OAAQxb,EACR5U,aAAc4B,GACdvB,eAAgBA,IAGnB8tB,IACCtxC,EAAAA,GAAAC,cAACuzC,GAAAA,EAAgB,CACflf,aAAcA,GACdmf,sBAAuBrf,GACvBsf,iBAAkBxB,GAClByB,WAAS,EACT7b,QAASA,EACTX,cAAeA,GACf9M,qBAAsBA,GACtBupB,kBAAmBpqB,GACnB+Q,gBAAiBA,GACjBlD,sBAAuBA,GACvBwc,WAAYvB,GACZt0C,UAAWuzC,KAGfvxC,EAAAA,GAAAC,cAAC8e,GAAe,CACdjiB,OAAQA,GACRijB,SAAUA,GACVkrB,sBAAuBA,GACvBxwB,YAAaA,GACb+T,QAASA,GACTsJ,QAASA,EACT9S,yBAA0BA,GAC1BsZ,uBAAwBA,GACxBC,kBAAmBA,GACnBvL,wBAAyBA,GACzB8gB,aAAcxZ,GACdyZ,eAAgB7f,EAChB8f,eAAgBzZ,GAChBkE,gBAAiBA,GACjBwV,aAAcjB,GACdC,OAAQxF,GACRyG,gBAAiBnB,GACjBoB,aAAc3V,GACdhU,QAASkU,GACT0V,oBAAqBzV,GACrB0V,oBAAqB1F,GACrB2F,eAAgB1D,GAChB2D,cAAe5E,GACfnsB,eAAgBA,IAElBxjB,EAAAA,GAAAC,cAAC8tB,GAAS,CACR9L,OAAQmT,GAAUnT,OAClBuyB,OAAQpf,GAAUof,OAClBC,kBAAmB9f,GACnBnK,QAASmO,GACTsa,OAAQ3D,KAEToC,IACC1xC,EAAAA,GAAAC,cAACgwB,GAAkB,CACjBhO,OAAQqe,GACRoU,WAAgC,cAApB7sB,GACZxF,QAASme,GACTr7B,QAASusC,KAGb1xC,EAAAA,GAAAC,cAAC+tB,GAAU,CACT/L,OAAQke,GACR9d,QAASge,GACTvjC,OAAQA,GACR63C,iBAAkBziB,GAClBC,cAAeA,GACf9H,qBAAsBA,KAExBrqB,EAAAA,GAAAC,cAAC6tB,GAAc,CACb7L,OAAQgiB,GACR2Q,cAAexQ,GACfyQ,iBAAkB1Q,GAClB9hB,QAAS6hB,KAEXlkC,EAAAA,GAAAC,cAAC0nB,GAAkB,CACjB1F,OAAQikB,GACRppC,OAAQA,GACRg4C,aAAcp3C,QAAQ69B,IACtBnF,YAAakQ,GACb3O,aAAc6O,GACdhY,QAASA,GACTumB,KAAMhjB,GACN2F,mBAAoBA,GACpBv3B,QAASkvC,GACThtB,QAAS+jB,KAEXpmC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,mBAAoBq6B,IAAmB,sBACpEv6B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eAAewN,MAAM,IAAIC,OAAO,MAC7CzL,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAA,UACEiM,EAAE,OACFC,EAAE,SACFX,MAAM,OACNC,OAAO,SACPupC,YAAY,oBACZv3C,GAAG,oBAEHuC,EAAAA,GAAAC,cAAA,YAAUg1C,GAAG,IAAIC,GAAG,cAAchhC,OAAO,uBACzClU,EAAAA,GAAAC,cAAA,kBAAgBk1C,aAAa,IAAID,GAAG,qBAAqBhhC,OAAO,qBAChElU,EAAAA,GAAAC,cAAA,iBACEd,OAAO,4EACP+1C,GAAG,uBAITl1C,EAAAA,GAAAC,cAAA,KAAGuK,KAAK,OAAO,YAAU,WACvBxK,EAAAA,GAAAC,cAAA,QAAMm1C,EAAE,0FAA0F5qC,KAAK,OAAOjL,OAAO,2BACrHS,EAAAA,GAAAC,cAAA,QAAMm1C,EAAE,0FAA0F5qC,KAAK,OAAOxM,UAAU,aAG3Hs8B,IACCt6B,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAC4tB,GAAgB,CACf5L,OAAQqiB,GACR/iB,MAAOgjB,GACPC,UAAWC,GACXM,iBAAkBA,GAClBL,SAAUC,GACVC,cAAeC,GACfO,SAAUC,GACVgQ,gBAAiB7rB,GACjBiT,YAAaA,GACbpS,qBAAsBA,GACtBirB,eAAgBnG,GAChB9sB,QAAS4iB,KAEXjlC,EAAAA,GAAAC,cAACs1C,GAAuB,CACtB/qB,QAASkhB,GACT9jB,uBAAwBlqB,QAAQkqB,IAA0BpE,GAC1D1mB,OAAQA,GACRijB,SAAUA,GACV8H,gBAAiBA,KAEnB7nB,EAAAA,GAAAC,cAACu1C,GAAc,CACb14C,OAAQA,GACRijB,SAAUA,GACVyO,QAASA,GACTC,YAAaiO,IAAuBJ,MAI1Ct8B,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,yBAAyBgtB,EAAAA,EAAAA,GAAkB6E,MACvEuI,IACCt6B,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KAUGqiC,IACClzC,EAAAA,GAAAC,cAACkmB,GAAAA,EAAqB,CACpBnoB,WAAWkC,EAAAA,EAAAA,GAAe,eAAgB2/B,IAAwB,aAClEp/B,OAAK,EACL8lB,cAA0B/oB,IAAhB44B,GACVxmB,MAAM,cACNwW,WAAY4nB,GACZn+B,UAAU,6BAEV7P,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mCAGhBw8B,KAAkBlI,IAAcC,KAC/BvyB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLC,OAAK,EACLmP,MAAM,cACNzP,QAASggC,GAAmBE,GAAkBqP,GAC9C7/B,UAAWxR,GAAK,sBAChBL,WAAWkC,EAAAA,EAAAA,GACT,iBACAi8B,GAA6B/6B,SAAW,qBAG1CpB,EAAAA,GAAAC,cAAC2R,GAAAA,EAAM,CACLD,KAAM2gB,IAAcC,GACpBjyB,KAAK,aAMZw8B,IAAqBL,IAAeD,KACrCx8B,EAAAA,GAAAC,cAACw1C,GAAAA,EAAgB,CACf34C,OAAQA,GACRijB,SAAUA,GACVzY,SAAUA,EACVwwB,QAASA,EACTkI,iBAAkBA,GAClBC,eAAgBA,GAChBC,gBAAiBA,GACjB1D,gBAAiBA,GACjBC,YAAaA,GACbiZ,kBAAmBpb,GACnBqb,YAAa/G,GACbgH,gBAAiB7G,GACjBsF,oBAAqB9F,GACrB+F,eAAgB1E,GAChB2E,cAAe7+B,GACfqqB,oBAAqBA,GACrBM,gBAAiBA,GACjB5F,mBAAoBA,GACpBmC,kBAAmBE,GACnB+Y,iBAAkB1d,GAClB2d,SAAU35B,EACV63B,eAAgBzZ,KAGpBv6B,EAAAA,GAAAC,cAAC81C,GAAAA,EAAY,CACXhxC,IAAKy0B,GACL/7B,GAAI46B,GACJD,gBAAiBA,GACjB4d,kBAAmB75B,EACnB85B,aAAc1b,GACdz9B,OAAQA,GACR8/B,kBAAmBE,GACnB/c,SAAUA,GACV+X,QAASA,EACT36B,UAAWm/B,GACX9N,QAASA,GACT0nB,YACEnV,IAAwB5G,IA/9CG,IAg+CvB,GACE2C,GAEAz+B,GAAK,kCADJ62B,IAA0BgD,IAAoB75B,GAAKgzC,IAAiC,WAG7FJ,qBAAsBA,GACtBD,wBAAyBA,GACzBmF,kBAAmBhR,GACnBiR,aAActe,GAAW9E,KAA4BsJ,IAAkBhC,GACvE+b,oBAAqB/Z,GACrBga,oBAAqBhvC,GAAY04B,GACjCuW,4BAA6BhU,IAAsB0B,IAAwBK,GAC3EkS,SAAU9c,GACVuZ,OAAQA,GACRwD,kBAAmBvW,GACnBlI,QAAS+C,GACT9C,OAAQ+C,KAETV,IACCt6B,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACGqlB,IAAsBx4B,QAAQ6mC,KAC7BvkC,EAAAA,GAAAC,cAACy2C,GAAAA,EAAO,CAAC9mC,MAAM,SAEhBqlB,IACCj1B,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLC,OAAK,EACLitB,OAAK,EACL1vB,UAAU,mBACV4R,MAAM,cACNzP,QAAS0wC,GACThhC,UAAU,2BAEV7P,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,wBAGhBN,QAAQk0B,MAA0BmP,KAAyBvd,GAC1DxjB,EAAAA,GAAAC,cAACkmB,GAAAA,EAAqB,CACpBnoB,UAAW0hC,GAAoB,YAAc,GAC7Cj/B,OAAK,EACLmP,MAAM,cACNwW,WAAYuZ,GACZ9vB,UAAU,6BAEV7P,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,4BAKpB+iC,IAAwBrjC,QAAQsjC,KAC/BhhC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,oBACb24C,EAAAA,EAAAA,IAA0B3V,GAAoBG,GAAmB//B,UAGtEpB,EAAAA,GAAAC,cAAC22C,GAAU,CACT95C,OAAQA,GACRijB,SAAUA,GACVyD,eAAgBA,EAChBD,oBAAqB4X,GACrB3Y,iBAAkBue,GAClBte,eAAgBA,GAChBC,eAAgBA,GAChBC,cAAeA,GACfC,cAAeA,GACfC,iBAAkBA,GAClBC,cAAeA,GACfK,aAAc4B,GACdzB,aAAcoV,GACdzV,YAAaiR,EACbnR,WAAYuX,GAAkBvX,QAAavlB,EAC3CwlB,SAAU0T,GACVxT,uBAAwBA,GACxBhe,MAAOA,GACPke,WAAY6X,GACZ5X,YAAa6X,KAEdZ,IAAmB58B,QAAQk0B,KAC1B5xB,EAAAA,GAAAC,cAAC42C,GAAe,CACdvoC,UAAWsjB,GACX3P,OAAQyd,GACRrd,QAASud,KAGZtF,IAAmBlE,IAClBp2B,EAAAA,GAAAC,cAAC8mB,GAAc,CACb9E,OAAQ4d,GACRzJ,YAAaA,GACb/T,QAAS0d,KAGb//B,EAAAA,GAAAC,cAAC62C,GAAAA,EAAkB,CACjBp1B,IAAM,wBAAuB0W,KAC7Bt7B,OAAQA,GACRmlB,OAAQ4gB,GACRwR,oBAAqBtR,GACrB7J,qBAAsBA,GACtB7W,QAASygB,KAEX9iC,EAAAA,GAAAC,cAACguB,GAAc,CACbvM,IAAM,mBAAkB0W,KACxBt7B,OAAQA,GACRijB,SAAUA,GACVkC,OAAQghB,GACR2S,gBAAiB7G,GACjB1sB,QAAS6gB,KAEXljC,EAAAA,GAAAC,cAAC82C,GAAAA,EAAY,CACXr1B,IAAM,iBAAgB0W,KACtBnW,OAAQsgB,GACRyU,OAAQvU,GACRhN,aAAciN,GACd5J,eAAgBA,GAChBI,qBAAsBA,GACtBqb,cAAe5R,GACf0R,oBAAqB1R,GACrBtgB,QAASmgB,OAIdjL,IAAuBwJ,IACtB/gC,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLxC,WAAWkC,EAAAA,EAAAA,GAAe,YAAakhC,IAAqB,UAC5D3gC,OAAK,EACLmP,MAAM,YACNC,UAAWxR,GAAK,oCAChB8B,QAASmhC,IAETthC,EAAAA,GAAAC,cAAC+P,GAAAA,EAAI,CAACC,KAAK,cACXjQ,EAAAA,GAAAC,cAAC+P,GAAAA,EAAI,CAACC,KAAK,gBAGd8wB,IACC/gC,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLC,OAAK,EACLmP,MAAM,SACN5R,UAAU,SACVmC,QAAS0gC,GACThxB,UAAU,0BAEV7P,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAGhBu8B,KAAoBwG,IACnB/gC,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLC,OAAK,EACLzC,UAAU,wBACV4R,MAAM,YACNzP,QAASqyC,GACT3wB,cAAeupB,GACf6L,YAAa3L,GACbz7B,UAAWxR,GAAK,gBAChB0G,IAAK00B,IAEJ/F,IACC1zB,EAAAA,GAAAC,cAACi3C,GAAAA,EAAqB,CACpBx1B,IAAK,eAAgBgS,GAAoBA,GAAkB4U,WAAa5U,GAAkBgI,SAC1F+W,aAAaC,EAAAA,EAAAA,IAAY51C,GAAQszB,IACjC+hB,SAAUze,GACVyjB,eAAgB1b,OAGjB/H,IAAqB+H,KACtBz7B,EAAAA,GAAAC,cAAA,KACEjC,WAAWkC,EAAAA,EAAAA,GACT,OACA,aACAu7B,IAA4B,wBAE9B,oBAKRz7B,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLuE,IAAKm8B,GACLzgC,OAAK,EACLmP,MAAM,YACN5R,WAAWkC,EAAAA,EAAAA,GACTyqC,GACA,eACC7S,GAAW,YACZiJ,IAAwB,aAE1Bxa,SAAUirB,GACV4F,oBAAkB,EAClBC,aAAW,EACXxnC,UAAWxR,GAAK4zC,IAChB9xC,QAASsxC,GACT5vB,cACE8oB,KAAoBza,GAAgB4a,MAAQG,GAAwBpqB,QAAoBrjB,GAG1FwC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,6BACZs6B,IAAat4B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAC1Bs8B,IAAmBt6B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBAChCs8B,IAAmBt6B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAElCitC,IACCjrC,EAAAA,GAAAC,cAACq3C,GAAAA,EAAc,CACbr1B,OAAQipB,GACRqM,YAAajd,KAAoB8G,GACjC3M,uBAAwBA,IAA2B2M,GACnD6S,aAAezqB,QAAoChsB,EAAnBo1C,GAChC4E,eAAiBtjB,OAA0C12B,EAAtBm1C,GACrC8E,iBAAkB5E,GAClBxwB,QAASsJ,GACTrJ,oBAAqBsJ,GACrBypB,gBAAiB7rB,KAGpBuS,GACG,I,wIIh5DV,MAiMA,GAAer/B,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA0C,IAAxC,KAAEvC,EAAI,cAAE26C,GAAep4C,EAC9B,MAAMq4C,GAAgBjnB,EAAAA,EAAAA,IAAS3zB,EAAKU,IAC9B+rB,GAAiBC,EAAAA,EAAAA,KAAqB7sB,EAAQG,EAAKU,IACnDw1B,EAAO0kB,IAAiB3lB,EAAAA,EAAAA,KAAWp1B,GAAQg7C,EAAAA,EAAAA,IAAqB76C,IAChE86C,EAAQ5kB,IAAQ6kB,EAAAA,EAAAA,IAAU7kB,KAAUl2B,EAAKg7C,UACzCC,EAAmBL,IAAkBnuB,IAAmBquB,IAAUH,EAClEO,EAAcN,GAChBO,EAAAA,EAAAA,KAAuBlmB,EAAAA,EAAAA,KAAWp1B,GAAQg7C,EAAAA,EAAAA,IAAqB76C,UAC/DS,EAEJ,MAAO,CACLm6C,gBACAnuB,iBACAquB,QACAljB,WAAWC,EAAAA,EAAAA,IAAc73B,GACzBo7C,cAAcC,EAAAA,EAAAA,IAAiBr7C,GAC/Bs7C,cAAcnc,EAAAA,EAAAA,IAAiBn/B,GAC/B+0B,cAAel1B,EAAOk1B,cACtBkmB,kBACAC,cACD,GArBet7C,EAjM+BoB,IAe7C,IAf8C,OAClDkkB,EAAM,KACNllB,EAAI,cACJ26C,EAAa,UACb/iB,EAAS,cACTgjB,EAAa,eACbnuB,EAAc,MACdquB,EAAK,aACLM,EAAY,aACZE,EAAY,cACZvmB,EAAa,gBACbkmB,EAAe,YACfC,EAAW,QACX51B,EAAO,oBACPC,GACDvkB,EACC,MAAM,aACJu6C,EAAY,cACZC,EAAa,mBACbC,EAAkB,cAClBC,EAAa,eACbC,EAAc,UACdC,IACEv6C,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KACPs6C,GAAYC,EAAAA,EAAAA,IAAax6C,EAAMtB,GAE/B+7C,GAAqBt6C,EAAAA,EAAAA,KAAY,KACrC+5C,EAAc,CAAEz7C,OAAQC,EAAKU,GAAIs7C,oBAAoB,IAErD12B,GAAS,GACR,CAACtlB,EAAKU,GAAI4kB,IAEP22B,GAAsBx6C,EAAAA,EAAAA,KAAY,KACtC+5C,EAAc,CAAEz7C,OAAQC,EAAKU,GAAIs7C,oBAAoB,IACrDJ,EAAU,CAAEM,OAAQl8C,EAAKU,KAEzB4kB,GAAS,GACR,CAACtlB,EAAKU,GAAI4kB,IAEP62B,GAAmB16C,EAAAA,EAAAA,KAAY,KAC/Bk5C,EACFc,EAAmB,CAAE17C,OAAQC,EAAKU,KACzBk6C,EACTY,EAAc,CAAEz7C,OAAQC,EAAKU,GAAIs7C,oBAAoB,IAC5CZ,GACTO,EAAe,CAAE57C,OAAQC,EAAKU,GAAIw7C,OAAQnnB,IAC1CymB,EAAc,CAAEz7C,OAAQC,EAAKU,GAAIs7C,oBAAoB,MAC3CpkB,IAAa0jB,GAAkBt7C,EAAKo8C,WAEpCxkB,GAAa0jB,IAAiBt7C,EAAKo8C,WAC7CV,EAAc,CAAE37C,OAAQC,EAAKU,KAF7B66C,EAAa,CAAEx7C,OAAQC,EAAKU,KAI9B4kB,GAAS,GACR,CACDs1B,EACAQ,EACAxjB,EACA0jB,EACAvmB,EACA/0B,EAAKo8C,UACLp8C,EAAKU,GACLi6C,EACAr1B,IAGI+2B,GAAkB56C,EAAAA,EAAAA,KAAY,KAC9Bm2B,GAAa0jB,GACfC,EAAa,CAAEx7C,OAAQC,EAAKU,KAC5B4kB,KAEA62B,GACF,GACC,CAACn8C,EAAKU,GAAIy7C,EAAkBvkB,EAAW0jB,EAAcC,EAAcj2B,IAgFtE,OACEriB,EAAAA,GAAAC,cAACo5C,EAAAA,EAAK,CACJp3B,OAAQA,EACRjkB,UAAU,kBACVs7C,OAhFAt5C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eAAe0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,GACtDwC,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACLtR,KAAK,OACLqR,KAAM5U,EACNs4C,gBAAiB7rB,IAEnBxpB,EAAAA,GAAAC,cAAA,MAAIjC,UAAU,eAAeK,EAM7Bq5C,EACKluB,EAAiB,2BAA6B,2BAGnDmL,IAAc53B,EAAKo8C,UACd,eAGLxkB,GAAa53B,EAAKo8C,UACb,gBAGLhB,GAAgBE,EACX,mBAGF,oBAqDLh2B,QAASA,EACTC,oBAAqBA,GAlDnBo1B,EAEA13C,EAAAA,GAAAC,cAAA,UACGoP,EAAAA,EAAAA,GACCma,EAAiBnrB,EAAK,8BAAgCA,EAAK,4BAA6Bu6C,GACxF,CAAC,kBAAmB,WAKxBjkB,GAAa53B,EAAKo8C,UAElBn5C,EAAAA,GAAAC,cAAA,UACGoP,EAAAA,EAAAA,GAAWhR,EAAK,2CAA4Cu6C,GAAY,CAAC,kBAAmB,WAK9FjkB,IAAc53B,EAAKo8C,WAAchB,GAAgBE,EAC7Cr4C,EAAAA,GAAAC,cAAA,UAAIoP,EAAAA,EAAAA,GAAWhR,EAAK,4BAA6Bu6C,GAAY,CAAC,kBAAmB,WAGnF54C,EAAAA,GAAAC,cAAA,UAAIoP,EAAAA,EAAAA,GAAWhR,EAAK,kCAAmC45C,GAAc,CAAC,kBAAmB,WA+B9Fj4C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACZ65C,IAAUH,GACT13C,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACoP,MAAM,SAAS5R,UAAU,wBAAwBu7C,QAAM,EAACp5C,QAAS64C,GACtE36C,EAAK,kBAGT25C,GACCh4C,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACoP,MAAM,SAAS5R,UAAU,wBAAwBu7C,QAAM,EAACp5C,QAAS24C,GACtEb,GAAc5oC,EAAAA,EAAAA,GAAWhR,EAAK,6BAA8B45C,IAAgB55C,EAAK,kBAGpFs5C,GAAiB56C,EAAKo8C,YAAczB,GACpC13C,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACoP,MAAM,SAAS5R,UAAU,wBAAwBu7C,QAAM,EAACp5C,QAAS+4C,GACtE76C,EAAK,iBAGV2B,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLoP,MAAM,SACN5R,UAAU,wBACVu7C,QAAM,EACNp5C,QAAUw3C,GAAiBD,EAAiBwB,EAAmBE,GAE9D/6C,EAjDHq5C,EACK,SAGL/iB,IAAc53B,EAAKo8C,UACd,eAELxkB,GAAa53B,EAAKo8C,UACb,oBAGLhB,GAAgBE,EACX,mBAGFL,EAAkB,gCAAkC,WAoCvDh4C,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACxC,UAAU,wBAAwBu7C,QAAM,EAACp5C,QAASkiB,GAAUhkB,EAAK,YAErE,I,gMCzLZ,MACMm7C,EAAiB,IAAIz2C,IAAI,CAAC,MAAO,SA8JvC,GAAerG,EAAAA,EAAAA,KA5JgBqB,IAkBzB,IAlB0B,QAC9BoH,EAAO,oBACPs0C,EAAmB,QACnBC,EAAO,YACPC,EAAW,sBACXC,EAAqB,eACrBv0C,EAAc,SACdw0C,EAAQ,SACRC,EAAQ,UACR97C,EAAS,OACTirB,EAAM,WACNvjB,EAAU,aACVD,EAAY,mBACZs0C,EAAkB,cAClBp0C,EAAa,eACbY,EAAc,aACdyzC,EAAY,YACZxzC,GACDzI,EACC,MAAM,2BAAE0I,EAA0B,qBAAEC,EAAoB,iBAAEuzC,IAAqB77C,EAAAA,EAAAA,MAGzE2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7BvC,GAAOC,EAAAA,EAAAA,MACN47C,EAAiBC,EAAeC,IAAkBp5C,EAAAA,EAAAA,MAClDq5C,EAAuBC,IAA4B5yC,EAAAA,EAAAA,KAAS,GAE7D0K,EAAWjN,EAAQ0B,QAAQuL,WAAamoC,EAAAA,EAAAA,IAA0Bp1C,IAElE,SAAEsJ,EAAQ,KAAEnO,EAAI,UAAEk6C,GAAcpoC,EAChCqoC,GAAYC,EAAAA,EAAAA,IAAqBtoC,IAAa,GAE9CuoC,GAAiBC,EAAAA,EAAAA,IAAkB71C,EAAK00C,IACvCoB,EAAgBC,IAAmB95C,EAAAA,EAAAA,MAC1CxB,EAAAA,EAAAA,KAAU,KACJm7C,GACFG,GACF,GACC,CAACH,EAAgBG,IAGpB,MAAOC,EAAeC,IAAoBtzC,EAAAA,EAAAA,IACxCiyC,KAAiBC,GAAyBt5C,GA9CzB,QA8CiCs5C,IAG9CqB,EAAiBv9C,QAAQiI,GAAkBo1C,GAAiBF,GAE5DK,IAAerzC,EAAAA,EAAAA,IAAoB1C,EAAS,aAC1CoD,aAAcC,GAAgB,UAAEH,KAAcI,EAAAA,EAAAA,GACpDyyC,IAAeD,GAAgB3yC,EAAAA,EAAAA,IAAsBnD,EAAS,iBAAa3H,GAAW,GAElFI,GAAWF,QAAQ2K,KAEnB,YACJ0E,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IACF/H,EACAE,GAAkBmD,GAClByyC,IAAmBr9C,QACAJ,IAAnB6H,GAGI81C,IAAaC,EAAAA,EAAAA,IAAsBhpC,GACnCnQ,GAAek5C,IAAaE,EAAAA,EAAAA,IAA4Bl2C,QAAW3H,EACnE89C,GAAeH,GAAa/oC,EAAS/P,oBAAiB7E,EACtD+9C,IAAcj5C,EAAAA,EAAAA,IAASuF,EAAAA,EAAAA,IAAoB1C,EAAS,cAAew1C,GAEnEa,GAAkBxB,GAAgBt8C,QAAQ0U,EAASqpC,aACvDj2B,EAAAA,IAA8BjiB,IAAI6O,EAASspC,WAAan2B,EAAAA,IAA8BhiB,IAAI6O,EAASspC,WAG/FC,IAAiB/3C,EAAAA,EAAAA,IAAgB,KACrC8C,EAAqB,CAAEvB,WAAU,IAG7B+b,IAActd,EAAAA,EAAAA,IAAgB,KAC9BmJ,GACExG,GACFA,IAKAZ,EACFc,EAA2B,CAAEtB,YAI3B6H,GACFguC,GAAiB,GAIfQ,GACFxB,IAIER,EAAej2C,IAAIk3C,IAAcV,EACnCI,IAIFwB,IAAgB,IAGZC,IAAmBh4C,EAAAA,EAAAA,IAAgB,KACvCq2C,EAAiB,CAAEF,oBAAqBM,IACxCD,IACAuB,IAAgB,IAGZvtC,IAAkBxK,EAAAA,EAAAA,IAAgB,KACtC4C,EAAarB,EAAQ1H,GAAI0H,EAAQrI,OAAO,IAG1C,OACEkD,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAC4lB,EAAAA,EAAI,CACH9gB,IAAKA,EACLkL,KAAMxB,EACNgsC,UAAWA,EACXn6C,KAAMA,EACNk6C,UAAWX,EAAWC,GAAYU,OAAYh9C,EAC9Cq+C,iBAAkB55C,GAClBs5C,YAAaD,IAAgBC,GAC7B7B,QAASA,EACT1sC,eAAgBA,GAChBD,YAAaA,GACbE,iBAAkBA,GAClBjP,UAAWA,EACXirB,OAAQA,EACRxjB,aAAcA,EACdC,WAAYA,EACZo2C,WAAYN,IAAmBO,EAAAA,EAAAA,IAAuB52C,GAAW,OAAS,MAAS,WACnFhF,QAAS+gB,GACT1a,YAAaA,EAAc4H,QAAkB5Q,IAE/CwC,EAAAA,GAAAC,cAAC+7C,EAAAA,EAAa,CACZ/5B,OAAQi4B,EACR73B,QAAS+3B,EACT6B,eAAgBL,IAEfv9C,EAAK,0BACN2B,EAAAA,GAAAC,cAACi8C,EAAAA,EAAQ,CACPl+C,UAAU,kBACVm+C,QAAS9B,EACT+B,MAAO/9C,EAAK,2BACZg+C,QAAS/B,KAGZ,G,kFC/LP,MAUA,EAVmCv8C,IAA4B,IAA3B,QAAE8I,EAAO,UAAE7I,GAAWD,EACxD,MAAMM,GAAOC,EAAAA,EAAAA,KACb,OACE0B,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBlC,GAAY0D,IAAKrD,EAAKsD,MAAQ,MAAQ,SACnF0N,EAAAA,EAAAA,GAAWxI,GACZ7G,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,aACX,C,gMCyBX,MAiIA,GAAetB,EAAAA,EAAAA,KAjIYqB,IAmBrB,IAnBsB,IAC1BgH,EAAG,KACHkL,EAAI,KACJ3P,EAAI,UACJm6C,EAAY,GAAE,UACdD,EAAS,OACTvxB,EAAM,iBACN4yB,EAAgB,YAChBN,EAAW,UACXv9C,EAAS,QACT07C,EAAO,eACP1sC,EAAc,YACdD,EAAW,aACXtH,EAAY,WACZC,EAAU,iBACVuH,EAAgB,WAChB6uC,EAAU,QACV37C,EAAO,YACPqG,GACDzI,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,IAAIg+C,GAAa17C,EAAAA,EAAAA,IAAuB,MACpCmE,IACFu3C,EAAav3C,GAGf,MAAM,SAAEuC,IAAaC,EAAAA,EAAAA,OACdg1C,IAAa70C,EAAAA,EAAAA,KAAU6zC,GACxBiB,EAAU9+C,QAAQ69C,GAClBkB,GAAWC,EAAAA,EAAAA,GAAcb,EAAkBW,EAASl1C,IAAaq1C,EAAAA,IACjEz5C,GAAkBC,EAAAA,EAAAA,IAAoBq5C,IAG1C98C,aAAck9C,EACdj9C,qBAAsByN,IACpBxN,EAAAA,EAAAA,GAAkBoN,OAAgBxP,GAAW,GAE3CoS,GAAQitC,EAAAA,EAAAA,IAAsBpC,GAC9BqC,GAAalsC,EAAAA,EAAAA,IAAkBtQ,GAC/By8C,GAAWp+C,EAAAA,EAAAA,KAAQ,IAClBqO,GAAmBC,EAChB,IAAE2D,EAAAA,EAAAA,IAAkBtQ,EAAO2M,QAAuB6vC,IADTA,GAEhD,CAAC9vC,EAAgB1M,EAAMw8C,EAAY7vC,KAEhC,MAAEzB,EAAK,OAAEC,IAAWuxC,EAAAA,EAAAA,IAA+BtD,GAEnD5qC,GAAgB5O,EAAAA,EAAAA,GACpB,OACAlC,EACA07C,GAAW,UACXv5C,IAAY4M,GAAe,cAC3BrH,GAAc,oBAGhB,OACE1F,EAAAA,GAAAC,cAAA,OAAK8E,IAAKu3C,EAAYt+C,UAAW8Q,EAAepN,IAAKrD,EAAKsD,MAAQ,WAAQnE,GACvEiI,GACCzF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACZ0H,GAAc1F,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sBAGhCgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,sBAAsBmC,QAAS4M,OAAcvP,EAAY2C,GACrE07C,GAAoBN,EACnBv7C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,4BACbgC,EAAAA,GAAAC,cAAA,OACEiE,IAAKq3C,EACLv9C,UAAU,aACVwN,MAAOA,EACPC,OAAQA,EACRrH,WAAW,EACXyU,IAAI,KAEL0jC,GACCv8C,EAAAA,GAAAC,cAAA,UACE8E,IAAK03C,EACLz+C,WAAWkC,EAAAA,EAAAA,GAAe,YAAa,oBAAqBgD,MAKlElD,EAAAA,GAAAC,cAAA,OAAKjC,UAAY,aAAY4R,KAC1B6qC,EAAUr6C,QAAU,GACnBJ,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,WAAW0D,IAAI,QAAQ+4C,IAI5CmC,GACC58C,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiB0P,EAAOxC,IACrDpN,EAAAA,GAAAC,cAACoQ,EAAAA,EAAe,CACdhF,SAAU4B,EACV3M,KAAMo5C,EAAU,IAAM,IACtBv5C,QAAS4M,EAAc5M,OAAU3C,KAItC2C,GACCH,EAAAA,GAAAC,cAAA,KACEjC,WAAWkC,EAAAA,EAAAA,GACT,cACA,OACA47C,EAAc,QAAOA,IAAe,gBACpCc,GAAuB,aAK/B58C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aAAa0D,IAAI,OAAO8M,MAAOyB,IAAOZ,EAAAA,EAAAA,GAAWY,IAChEjQ,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBAAgB0D,IAAI,QACjC1B,EAAAA,GAAAC,cAAA,YACG88C,GAEF9zB,GAAUjpB,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAeqR,EAAAA,EAAAA,GAAW4Z,KACnDA,GAAUvrB,QAAQ88C,IAClBx6C,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,WAChBgC,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CAACnP,QAASqG,IAAcsK,EAAAA,EAAAA,IAAoBzS,EAAkB,IAAZm8C,GAAkB,OAKhFvxB,GAAUvrB,QAAQ88C,IACjBx6C,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CAACnP,QAASqG,IAAc+I,EAAAA,EAAAA,IAAoBlR,EAAkB,IAAZm8C,IAErD,G,iOCpIV,MAAMyC,EAAkB,IAAMC,EAAAA,EAgP9B,GAAexgD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAuC,IAArC,OAAExC,EAAM,SAAEijB,GAAUzgB,EAC3B,MAAMvC,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1BqgD,EAAap9B,GAAWq9B,EAAAA,EAAAA,KAAiBxgD,EAAQE,EAAQijB,QAAYviB,EACrE6/C,EAActgD,GAAOugD,EAAAA,EAAAA,KAAsB1gD,EAAQG,QAAQS,EAC3D+/C,EAAoB7/C,SAAQ8/C,EAAAA,EAAAA,KAAmB5gD,EAAQE,IACvD2gD,EAAQ19B,EAAWhjB,GAAM2gD,SAAS39B,QAAYviB,EAIpD,MAAO,CACLT,OACAogD,aACAE,cACAI,QACAF,oBACAI,cAToBF,IAASG,EAAAA,EAAAA,KAA0BhhD,EAAQE,EAAQijB,GAUvEg1B,MATW/iB,EAAAA,EAAAA,KAAWp1B,EAAQA,EAAOk1B,eAUtC,GAlBen1B,EAzM6BoB,IA6B3C,IA7B4C,aAChD8/C,EAAY,UACZ7/C,EAAS,WACT8/C,EAAU,WACVC,EAAa,SAAQ,SACrBC,EAAQ,OACRC,EAAM,SACNC,EAAQ,gBACR1C,EAAe,aACf1G,EAAY,aACZqJ,EAAY,mBACZC,EAAkB,aAClBC,EAAY,WACZlB,EAAU,MACVmB,EAAK,KACLvhD,EAAI,YACJsgD,EAAW,kBACXE,EAAiB,MACjBE,EAAK,cACLE,EAAa,iBACbY,EAAgB,UAChBC,EAAS,kBACTC,EAAiB,cACjBC,EAAa,gBACbC,EAAe,cACfjH,EAAa,KACb3C,EAAI,QACJ50C,EAAO,mBACPy+C,GACD7gD,EACC,MAAM,aACJ8gD,EAAY,gBACZC,EAAe,kBACfC,IACE3gD,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEP+5C,EAAet7C,IAAQm/B,EAAAA,EAAAA,IAAiBn/B,GACxCiiD,EAAUthD,QAAQX,GAAM+2B,SAAWqpB,GAAcM,IAC/ChgD,GAAIX,EAAM,MAAEmiD,EAAK,aAAEC,GAAiBniD,GAAQ,CAAC,GAErDyC,EAAAA,EAAAA,KAAU,KACJ1C,IAAWmiD,IACTd,GAAcU,EAAa,CAAE/hD,WAC7B0+C,GAAiBuD,EAAkB,CAAEI,UAAWriD,IACtD,GACC,CAACA,EAAQmiD,EAAOd,EAAcU,EAAcE,EAAmB1G,EAAcmD,IAEhF,MAAM4D,IAAyBx7C,EAAAA,EAAAA,IAC7B,CAAC8J,EAAiD2xC,KAC5CtiD,GAAQsiD,IACV3xC,EAAEM,kBACF8wC,EAAgB,CACdQ,cAAeviD,EAAKU,GACpB8hD,QAAS,EACTj6C,OAAuB,UAAfy4C,EAAyByB,EAAAA,GAAkBC,cAAgBD,EAAAA,GAAkBE,qBAEzF,IAIEC,IAAehhD,EAAAA,EAAAA,KAAQ,IAAM5B,GAAQ+3C,IAAgB8K,EAAAA,EAAAA,IAAgB7iD,IAAO,CAACA,EAAM+3C,IAEzF,GAAK/3C,EA+DL,OACEiD,EAAAA,GAAAC,cAAA,OACEjC,WACEkC,EAAAA,EAAAA,GAAe,WAAYlC,GAE7B0D,KAAM48C,GAASjgD,EAAKsD,MAAQ,WAAQnE,EACpC2C,QAASA,IAEP69C,IAAagB,GACbh/C,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACG6mC,GAAiB3C,GAChB/0C,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACL8P,IAAI,iBACJphB,KAAMy9C,EACNpsC,KAAMojC,EACNM,iBAAe,EACfr3C,UAAU,wBAGdgC,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACL8P,IAAK3kB,EAAKU,GACVO,WAAWkC,EAAAA,EAAAA,GAAew3C,GAAiB,kBAC3Cp3C,KAAMy9C,EACNpsC,KAAM5U,EACNyhD,UAAWA,EACXC,kBAAmBA,EACnBoB,gBAAgB,cAChBnI,cAAeA,EACfv3C,QAASq7C,EAAkB4D,QAAyB5hD,KAIzDwhD,GACCh/C,EAAAA,GAAAC,cAAC6/C,EAAAA,EAAS,CACRrC,MAAOA,EACPz/C,UAAU,oBACVsC,KAAM28C,IAGVj9C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACZy/C,EACGz9C,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,UAAU,aAAYqR,EAAAA,EAAAA,GAAWouC,EAAMjvC,QAEtDxO,EAAAA,GAAAC,cAAC8/C,EAAAA,EAAa,CACZpuC,KAAM5U,EACN4hD,gBAAiBA,EACjBqB,iBAAkBtB,EAClBhH,cAAeA,EACfkH,mBAAoBA,KAGxBL,GA9GR,WACE,GAAIN,EACF,OAAOC,EACLl+C,EAAAA,GAAAC,cAACggD,EAAAA,EAAY,CAACjiD,UAAU,SAAS6I,QAASo3C,IAE1Cj+C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAC1Bo8C,GAAc99C,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAAChS,UAAU,cAAciS,KAAM6tC,KAClDzuC,EAAAA,EAAAA,GAAW4uC,IAKlB,GAAIG,IAAuBb,IAAsB2B,EAC/C,OACEl/C,EAAAA,GAAAC,cAACggD,EAAAA,EAAY,CAACjiD,UAAU,SAAS6I,QAASxI,EAAK,cAInD,IAAKtB,EACH,OAGF,GAAI8gD,EACF,OAAO79C,EAAAA,GAAAC,cAACigD,EAAAA,EAAY,CAACrC,aAAcA,IAGrC,GAAImB,EACF,OACEh/C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAC3B1B,EAAAA,GAAAC,cAACkgD,EAAAA,GAAU,CACTlwC,KAAK,OACLmwC,qBAAmB,EACnBC,eAA6B7iD,IAAlBmgD,EAA8B,EAAI,EAC7C3/C,UAAU,iCAESR,IAAlBmgD,GAA+Bt/C,EAAK,WAAYs/C,EAAe,OAMxE,GAAIU,EACF,OACEr+C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAAQrD,GAAKiiD,EAAAA,EAAAA,IAAkBvjD,KAIhE,MAAMwjD,EAqEV,SAAwBliD,EAActB,GACpC,MAAMyjD,EAAiBniD,GAAKiiD,EAAAA,EAAAA,IAAkBvjD,KACxC,aAAE0jD,GAAiB1jD,EAEzB,OAAIA,EAAKmiD,aACmB,YAAnBsB,EAA+B,0BAA4B,wBAG/DC,EAKDpiD,EADsB,YAAnBmiD,EACE,cACA,UADeC,EAAc,KAJ7BD,CAMX,CApFwBE,CAAeriD,EAAMtB,GACnC4jD,EAAetD,EAAe,KAAIh/C,EAAK,cAAeg/C,EAAa,YAAS7/C,EAElF,OACEwC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,UACb2hD,IAAgB3/C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,qBAAqB2hD,IACtD3/C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAgBuiD,GAC/BI,GAAgB3gD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,iBAAiB2iD,GAGxD,CAqD4BC,IAEpB,I,gFC/OV,MAgBA,GAAelkD,EAAAA,EAAAA,KAhBuBqB,IAA4C,IAA3C,QAAEoH,EAAO,eAAE07C,EAAc,UAAEC,GAAW/iD,EAC3E,MAAMM,GAAOC,EAAAA,EAAAA,KAEPyiD,EAAiBD,GAAaA,EAAY37C,EAAQI,KACxD,OACEvF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,mBACZ6iD,IAAmBE,GAClB/gD,EAAAA,GAAAC,cAAC+gD,EAAAA,EAAqB,CAAC/C,OAAQ4C,IAEjC7gD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SACbuR,EAAAA,EAAAA,IAAoBlR,EAAoD,KAA7C0iD,EAAiBD,EAAY37C,EAAQI,QAE/D,G,gKC9BV,MC0HA,GAAe7I,EAAAA,EAAAA,KAhGkBqB,IAO3B,IAP4B,MAChCyQ,EAAK,KACL8gB,EAAI,WACJb,EAAU,UACVzwB,EAAS,UACTijD,EAAS,SACTC,GACDnjD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,MACP,iBAAE0X,EAAgB,kBAAEmrC,IAAsB/iD,EAAAA,EAAAA,OAE1C,SAAEkJ,IAAaC,EAAAA,EAAAA,MAEf65C,GAAcF,EAEdG,GAAWz9C,EAAAA,EAAAA,IAAgB,MAC/B09C,EAAAA,EAAAA,IAAoBhyB,GACpBtZ,EAAiB,CACf7Q,QAAS9G,EAAK,eACd,IAGEkjD,GAAkB39C,EAAAA,EAAAA,IAAgB,KAClC6qB,GACJ4yB,GAAU,IAGNG,GAAc59C,EAAAA,EAAAA,IAAgB,KAClCu9C,EAAkB,CAAEzgD,KAAM,CAAEA,KAAM4uB,IAAS,IAGvCmyB,GAAyE9iD,EAAAA,EAAAA,KAAQ,IAC9EW,IAAA,IAAC,UAAEoiD,EAAS,OAAEz/B,GAAQ3iB,EAAA,OAC3BU,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLkP,QAASrI,EACThH,KAAK,UACLsP,MAAM,cACN5R,UAAWikB,EAAS,SAAW,GAC/B9hB,QAASuhD,EACT7xC,UAAWxR,EAAK,sBAEhB2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mBACN,GAEV,CAACsJ,EAAUjJ,IAEd,OACE2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAWA,GACdgC,EAAAA,GAAAC,cAAA,KAAGjC,UD3EmG,YC4EnGK,EAAKmQ,GAAS,0BAEjBxO,EAAAA,GAAAC,cAAA,OAAKjC,UD9EmB,YC+EtBgC,EAAAA,GAAAC,cAAA,SACEjC,WAAWkC,EAAAA,EAAAA,GAAe,eDhFa,YCiFvCyhD,MAAOryB,EACPsyB,UAAQ,EACRzhD,QAASohD,IAEVH,EACCphD,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLoP,MAAM,cACN5R,UDxF6E,WCyF7EsC,KAAK,UACLG,OAAK,EACL8lB,SAAUkI,EACVtuB,QAASohD,GAETvhD,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,UAGbjQ,EAAAA,GAAAC,cAAC4hD,EAAAA,EAAY,CACX7jD,UDlG2D,WCmG3D8jD,QAASL,EACTv/B,UAAU,SAEVliB,EAAAA,GAAAC,cAACwhB,EAAAA,EAAQ,CAACrC,KAAK,OAAOjf,QAASohD,EAAiBh7B,SAAUkI,GAAapwB,EAAK,SAC3E6iD,GACClhD,EAAAA,GAAAC,cAACwhB,EAAAA,EAAQ,CAACrC,KAAK,SAASjf,QAAS+gD,EAAU3+B,aAAW,GAAElkB,EAAK,mBAKpE4iD,GACCjhD,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,UACLimB,SAAUkI,EACVtuB,QAASqhD,GAERnjD,EAAK,qCAGN,G,+JCpFV,MA6DA,GAAe3B,EAAAA,EAAAA,KA7DaqB,IAMtB,IANuB,QAC3BoH,EAAO,SACP2wC,EAAW,eAAc,YACzBiM,EAAW,oBACXtI,EAAmB,QACnBt5C,GACDpC,EAEC,MAAMgH,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7B+5C,GAAiBC,EAAAA,EAAAA,IAAkB71C,EAAK00C,GACxCx3C,GAAeo5C,EAAAA,EAAAA,IAA4Bl2C,GAC3C68C,GAAe1/C,EAAAA,EAAAA,IAASuF,EAAAA,EAAAA,IAAoB1C,EAAS,cAAew1C,GACpEh7C,GAAuBwD,EAAAA,EAAAA,GAAmB6+C,GAE1C/6C,GAAQud,EAAAA,EAAAA,IAAgBrf,GAExB88C,GAAaC,EAAAA,EAAAA,IAAoB/8C,IAChCg9C,EAAe,CAAGC,IAAephD,EAAAA,EAAAA,GAAQihD,GAE1C/gC,GAActd,EAAAA,EAAAA,IAAgB,KAClCw+C,IACAjiD,EAASgF,EAAQ1H,GAAI0H,EAAQrI,OAAO,IAGtC,OACEkD,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACLtH,GAAK,GAAEq4C,KAAWuM,EAAAA,EAAAA,IAAiBl9C,EAAQ1H,MAC3CO,UAAU,oBACVmC,QAASA,EAAU+gB,OAAc1jB,GAEjCwC,EAAAA,GAAAC,cAAA,OACEiE,IAAKjC,EACLjE,UAAU,kBACV6a,IAAI,GACJzU,WAAY29C,EACZO,SAAS,QACTzgC,cAAekgC,EAAcQ,EAAAA,OAAY/kD,IAE3CwC,EAAAA,GAAAC,cAAA,OACEiE,IAAK89C,EACLhkD,WAAWkC,EAAAA,EAAAA,GAAe,aAAc,kBAAmBP,GAC3DkZ,IAAI,GACJzU,WAAY29C,EACZO,SAAS,QACTzgC,cAAekgC,EAAcQ,EAAAA,OAAY/kD,IAE1CykD,GACCjiD,EAAAA,GAAAC,cAACuiD,EAAAA,EAAY,CACXvgD,aAAc+/C,GAAgB//C,EAC9BwgD,UAAWN,EACXnkD,UAAU,kBAGbiJ,GAASjH,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,kBAAkBiJ,EAAMy7C,MAAQ,OAAQlzC,EAAAA,EAAAA,IAAoBvI,EAAMmC,WAC3F24C,GAAe/hD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAC5B,G,8FC3FV,MCqEA,GAAetB,EAAAA,EAAAA,KA/CoBqB,IAO7B,IAP8B,UAClC0kD,EAAS,cACTE,EAAa,aACb1gD,EAAY,UACZjE,EAAS,MACTwN,EAAK,OACLC,GACD1N,EAEC,MAAMgH,GAAMnE,EAAAA,EAAAA,IAAuB,OAE7B,aAAElB,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAC7C6iD,OAAWjlD,GAAW,GAAMmlD,QAAwBnlD,OAAWA,EAdxC,KAgBnBwM,GAAY0yC,EAAAA,EAAAA,GAAcz6C,GAAevC,OAAclC,EAjB3C,GAiBmEgO,EAAOC,GAEtFyV,GAActd,EAAAA,EAAAA,IAAiB8J,IACnC,IAAK3I,EAAI3D,QAAS,OAClB,MAAM0f,EAAOpT,EAAEqT,cAAcnT,wBACvB1B,EAAIwB,EAAEG,QAAUiT,EAAKnT,KACrBxB,EAAIuB,EAAEk1C,QAAU9hC,EAAKkvB,IACrB6S,EAAS32C,EAAK4U,EAAKtV,MAAQ,EAC3Bs3C,EAAS32C,EAAK2U,EAAKrV,OAAS,EAClC1G,EAAI3D,QAAQuX,aAAa,QAAU,oBAAmBkqC,yBAA8BC,MAAW,IAGjG,GAAKpjD,EAIL,OACEM,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDtDM,WCsDsBP,EAAsB3B,EAAW2kD,GDtDA,YCuDxE59C,IAAKA,EACL5E,QAASwiD,EAAgBzhC,OAAc1jB,GAEvCwC,EAAAA,GAAAC,cAAA,UACE8E,IAAKiF,EACLhM,WAAWkC,EAAAA,EAAAA,GD5DgJ,WC4DlH,qBACzCsL,MAAOA,EACPC,OAAQA,IAEVzL,EAAAA,GAAAC,cAAA,OAAKjC,UDhEoI,aCiErI,G,qECpDL+kD,EAAI,SAAJA,GAAI,OAAJA,EAAAA,EAAI,mBAAJA,EAAAA,EAAI,qBAAJA,EAAAA,EAAI,yBAAJA,EAAAA,EAAI,eAAJA,CAAI,EAAJA,GAAI,IAIT,MAcA,GAAermD,EAAAA,EAAAA,KAd6BqB,IAAgB,IAAf,OAAEkgD,GAAQlgD,EACrD,OACEiC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBACbgC,EAAAA,GAAAC,cAACkgD,EAAAA,GAAU,CAAClwC,KAAK,SAASowC,UAAW0C,EAAK9E,IAC5B,WAAXA,EACCj+C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,iCACbgC,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,oBAEXjQ,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAO,WAAUguC,OAEzB,G,6FCZV,MAAM+E,EAAe,iBAcrB,GAAetmD,EAAAA,EAAAA,KAZoBqB,IAA0C,IAAzC,KAAE2C,EAAOsiD,EAAY,YAAEC,GAAallD,EACtE,MAAMM,GAAOC,EAAAA,EAAAA,MACP,qBAAEqB,IAAyBC,EAAAA,EAAAA,IAAkB,GAEnD,OACEI,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBP,EAAsBsjD,GAAe,qBACjFviD,EACAuiD,GAAejjD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,gBAAeqR,EAAAA,EAAAA,GAAWhR,EAAK4kD,GAAc,CAAC,QACvE,G,qJCUV,MAgIA,GAAevmD,EAAAA,EAAAA,KAhIoBqB,IAgB7B,IAhB8B,UAClCo4B,GAAY,EAAK,kBACjB+sB,EAAiB,MACjBrrC,EAAK,KACLsrC,EAAI,YACJjN,EAAc,WAAU,YACxBkN,EAAc,OAAM,YACpBH,EAAW,iBACXI,EAAgB,iBAChBC,EAAgB,6BAChBC,GAA+B,EAAK,SACpCC,GAAW,EAAK,WAChBC,EAAU,2BACVC,EAA0B,cAC1BC,EAAa,SACbC,GACD7lD,EAEC,MAAMy7B,GAAW54B,EAAAA,EAAAA,IAAyB,MACpCvC,GAAOC,EAAAA,EAAAA,MAEP,SAAEgJ,IAAaC,EAAAA,EAAAA,OACds8C,EAAUC,IAAep8C,EAAAA,EAAAA,IAAS,KAClCq8C,EAAWC,IAAgBt8C,EAAAA,EAAAA,KAAS,GACrCu8C,EAAsB38C,EAAW,IAAM,IAgE7C,OA9DA9H,EAAAA,EAAAA,KAAU,KACJ8jD,GACFQ,EAAY,GACd,GACC,CAACR,KAEJrnB,EAAAA,EAAAA,IAAW,KACJvV,EAAAA,IACH8S,EAASp4B,QAAS8Q,OACpB,GACC+xC,IAEHzkD,EAAAA,EAAAA,KAAU,KACJqY,IACFiqB,EAAAA,EAAAA,KAAgB,KACdtI,EAASp4B,QAAS8Q,QAClBsnB,EAASp4B,QAAS8iD,QAAQ,GAE9B,GACC,CAACrsC,IA4CF7X,EAAAA,GAAAC,cAAA,QAAMkrB,OAAO,GAAGy4B,SAAUA,EAzB5B,SAAsBO,GACpBA,EAAM7qC,iBAEF6c,GAIA4tB,GACFH,EAAUC,EAEd,EAesDtB,EAAAA,EAAW6B,aAAa,OAC1EpkD,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAe,6BAA8B2jD,GAAY,UAAWhsC,GAAS,SACxFnW,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzB+lD,GAhBHvjD,EAAAA,GAAAC,cAAA,SACEkc,KAAK,WACL1e,GAAG,mBACH2mD,aAAa,MACbpmD,UAAU,kBACVqmD,UAAW,IAYXrkD,EAAAA,GAAAC,cAAA,SACE8E,IAAKy0B,EACLx7B,UAAU,eACVme,KAAM+mC,EAAoB,OAAS,WACnCzlD,GAAG,mBACHkkD,MAAOkC,GAAY,GACnBO,aAAcb,EAA+B,gBAAkB,mBAC/De,SAvDR,SAA0B52C,GACpBmK,GACF4rC,IAGF,MAAM,OAAEx+B,GAAWvX,EACnBo2C,EAAY7+B,EAAO08B,OACnBqC,EAAa/+B,EAAO08B,MAAMvhD,QAAUmkD,EAAAA,KAChCZ,GACFA,EAAc1+B,EAAO08B,MAEzB,EA6CQ9V,UAAW,IACXnqC,IAAI,SAEN1B,EAAAA,GAAAC,cAAA,aAAQ4X,GAASsrC,GAAQjN,GACzBl2C,EAAAA,GAAAC,cAAA,OACEjC,UAAU,6BACVmC,QAjDR,WACEujD,GAA4BR,EAC9B,EAgDQsB,KAAK,SACLH,SAAU,EACV71C,MAAM,6BACN,aAAW,8BAEXxO,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAQgjD,EAAoB,WAAa,uBAGzED,GAAejjD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,eAAeilD,GAC3CW,IAAaG,GAAaV,IACzBrjD,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAAC2b,KAAK,SAASxM,QAAS6zC,EAAUrtB,UAAWA,EAAW5P,UAAWw9B,GACvEX,GAGA,G,uNCvGX,MAqQA,GAAe1mD,EAAAA,EAAAA,KAhQcqB,IA0BvB,IA1BwB,UAC5BC,EAAS,WACTymD,EAAU,QACVC,EAAO,mBACPC,EAAkB,YAClBC,EAAW,YACXC,EAAW,kBACXC,EAAiB,aACjBC,EAAY,cACZC,EAAa,UACb7uB,EAAS,gBACT8uB,EAAe,aACfC,EAAY,gBACZC,EAAe,kBACfC,EAAiB,oBACjBC,EAAmB,yBACnBC,EAAwB,cACxBC,EAAa,WACbC,EAAU,2BACVC,EAA0B,oBAC1BC,EAAmB,eACnBC,EAAc,gBACdC,EAAe,WACfC,EAAU,cACVC,EAAa,YACbC,GACDhoD,EAEC,MAAMy7B,GAAW54B,EAAAA,EAAAA,IAAyB,MACpColD,EAAiBpB,EAAYxkD,OAhCd,IAkCrBZ,EAAAA,EAAAA,KAAU,KACH0lD,GACLnhD,YAAW,MACTqa,EAAAA,EAAAA,KAAe,KACbob,EAASp4B,QAAS8Q,OAAO,GACzB,GAzCe,IA0CD,GACjB,CAACgzC,IAEJ,MAAMe,GAAuBtnD,EAAAA,EAAAA,KAAQ,IAAM,IAAIoE,IAAIqiD,IAAoB,CAACA,IAClEc,GAAyBvnD,EAAAA,EAAAA,KAAQ,IAAM,IAAIoE,IAAIsiD,IAAsB,CAACA,IAEtEc,GAAsBxnD,EAAAA,EAAAA,KAAQ,IAC3BimD,EAAYrlD,QAAQ9B,IAAQwoD,EAAqB1iD,IAAI9F,MAC3D,CAACwoD,EAAsBrB,IAEpBwB,GAAmBznD,EAAAA,EAAAA,KAAQ,IAC1B8lD,GACE4B,EAAAA,EAAAA,IAAqB5B,EAAY,QADhB,CAAC,GAExB,CAACA,IAEE6B,GAAgB3nD,EAAAA,EAAAA,KAAQ,KAC5B,GAAIkmD,EACF,OAAOH,EAGT,MAAM6B,EAAiC,GACjCC,EAA2B,GAC3BC,EAAqC,GAY3C,OAVA/B,EAAQ74C,SAASpO,IACXwoD,EAAqB1iD,IAAI9F,GAC3B8oD,EAAqB/kD,KAAK/D,GACjByoD,EAAuB3iD,IAAI9F,GACpCgpD,EAAyBjlD,KAAK/D,GAE9B+oD,EAAehlD,KAAK/D,EACtB,IAGK8oD,EAAqB7rC,OAAO8rC,EAAgBC,EAAyB,GAC3E,CAAC5B,EAAaH,EAASuB,EAAsBC,IAE1CQ,GAAkB9iD,EAAAA,EAAAA,IAAiBnG,IACvC,GAAIwoD,EAAqB1iD,IAAI9F,GAC3BmoD,IAAkBnoD,GAAI,QAIxB,GAAIyoD,EAAuB3iD,IAAI9F,GAC7BmoD,IAAkBnoD,GAAI,OADxB,CAKA,GAAI2oD,EAAiB3oD,GAAK,CACxB,MAAMkpD,EAAeP,EAAiB3oD,GAAI0e,KACpCyqC,EAAwBjC,GAAoBvlD,SAAW,GACzDwnD,EAAsBjwC,SAASgwC,GACjCC,EAAsBC,OAAOD,EAAsBzxC,QAAQwxC,GAAe,GAE1EC,EAAsBplD,KAAKmlD,GAE7BlB,IAA6BmB,EAC/B,KAAO,CACL,MAAME,EAAiBlC,EAAYxlD,QAC/B0nD,EAAenwC,SAASlZ,GAC1BqpD,EAAeD,OAAOC,EAAe3xC,QAAQ1X,GAAK,GAElDqpD,EAAetlD,KAAK/D,GAEtBioD,IAAsBoB,EACxB,CACAnB,IAAiB,GApBjB,CAoBoB,IAGhBoB,GAAqBnjD,EAAAA,EAAAA,IAAiB8J,IAC1C,MAAM,MAAEi0C,GAAUj0C,EAAEqT,cACpB4kC,IAAiBhE,EAAM,KAGlBqF,EAAaC,IAAWC,EAAAA,EAAAA,GAAkBrB,EAAYS,EAAe5oD,QAAQmnD,IAE9ExmD,GAAOC,EAAAA,EAAAA,KAEP6oD,IAAiBxoD,EAAAA,EAAAA,KAAQ,KAC7B,GAAKonD,EACL,OAAOM,EAAAA,EAAAA,IAAqBN,EAAa,OAAO,GAC/C,CAACA,IAEEqB,IAAiBxjD,EAAAA,EAAAA,IAAiByjD,GAEpCrnD,EAAAA,GAAAC,cAACqnD,EAAAA,EAAe,CACdC,WAAYF,MAKZG,IAAiB5jD,EAAAA,EAAAA,IAAiBnG,IACtC,MAAMgqD,EAAiBvB,EAAuB3iD,IAAI9F,GAClD,GAAIqoD,GAAiBqB,GAAgB,CACnC,MAAMO,EAAUP,GAAe1pD,GAC/B,OAAOuC,EAAAA,GAAAC,cAAA,WAAMynD,EAAQC,YACvB,CAAO,OAAIj3B,EAAAA,EAAAA,IAASjzB,GAEhBuC,EAAAA,GAAAC,cAACqnD,EAAAA,EAAe,CACd/B,cAAeA,EACftM,OAAQx7C,EACRwgD,OAAQwJ,EAAiBnC,OAA2B9nD,IAIjDwC,EAAAA,GAAAC,cAAC2nD,EAAAA,EAAa,CAAC9qD,OAAQW,EAAIwgD,OAAQwJ,EAAiBnC,OAA2B9nD,GACxF,IAGIqqD,IAAarpD,EAAAA,EAAAA,KAAY,CAACf,EAAYqqD,KAC1C,MAAMT,EAAWS,EAAa1B,EAAiB3oD,QAAMD,EAC/CuqD,EAAuB7B,EAAuB3iD,IAAI9F,GAClDuqD,EAAW/B,EAAqB1iD,IAAI9F,IAAOsqD,EAC3CE,EAAYZ,EAAW1C,GAAoBhuC,SAAS0wC,EAASlrC,MAAQyoC,EAAYjuC,SAASlZ,GAC1FyqD,EAAiBA,IACb1C,GAAcuC,OAAwBvqD,EAC5CwC,EAAAA,GAAAC,cAACi8C,EAAAA,EAAQ,CACPE,MAAM,GACN71B,SAAUyhC,EACV7L,QAAS8L,EACTxnD,MAAO0kD,IAIb,OACEnlD,EAAAA,GAAAC,cAACkoD,EAAAA,EAAQ,CACPzmC,IAAKjkB,EACLO,WAAWkC,EAAAA,EAAAA,GAAe,uCAAwCilD,GAAmB,aACrF5+B,SAAUyhC,EACVI,SAAU5C,EACVpO,mBAAoB15C,QAAQkoD,GAC5ByC,cAAeN,EAAuB,kBAAevqD,EAErD2C,QAASA,IAAMumD,EAAgBjpD,GAC/BkS,QAAM,GAEJw1C,OAAqC3nD,EAAnB0qD,IACnBb,EAAWD,GAAeC,GAAYG,GAAe/pD,GACrD0nD,EAAkB+C,SAAmB1qD,EAC7B,GAEZ,CACD4oD,EAAkBjB,EAAiBK,EAAYS,EAAsBC,EACrEN,EAAiB4B,GAAgB7C,EAAoBC,IAGjD0D,IAAiB3pD,EAAAA,EAAAA,KAAQ,IAE3BqB,EAAAA,GAAAC,cAAA,OAAKyhB,IAAI,cACNhkB,QAAQ+mD,GAAYrkD,SACnBJ,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBAAyBK,EAAK,qBAE9ComD,GAAYplD,KAAKgoD,GAAaQ,GAAWR,EAASlrC,MAAM,KACzDnc,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,yBAAyBK,EAAK,kBAGhD,CAAComD,EAAYpmD,EAAMwpD,KAEtB,OACE7nD,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAUlC,IACtCknD,GACCllD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,8BAA8B0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,GACpEmnD,GAAoBtlD,KAAKgoD,GACxBrnD,EAAAA,GAAAC,cAACsoD,EAAAA,EAAkB,CACjBhB,WAAYnB,EAAiBiB,GAC7BlnD,QAASumD,EACT8B,SAAUnB,EACVoB,UAAQ,MAGXrD,GAAmB/lD,KAAI,CAAC5B,EAAI8D,IAC3BvB,EAAAA,GAAAC,cAACsoD,EAAAA,EAAkB,CACjB/c,OAAQ/tC,EACRirD,YAAa1C,GAAkBzkD,EAAIqjD,EAAYxkD,OApN7B,EAqNlBmlD,cAAeA,EACfplD,QAASumD,EACT8B,SAAU/qD,MAGb0oD,EAAoB9mD,KAAI,CAAC5B,EAAI8D,IAC5BvB,EAAAA,GAAAC,cAACsoD,EAAAA,EAAkB,CACjB/c,OAAQ/tC,EACRirD,YACE1C,GAAkBzkD,GAAK6jD,GAAmBhlD,QAAU,GAAKwkD,EAAYxkD,OA9NrD,EAgOlBqoD,UAAQ,EACRtoD,QAASumD,EACT8B,SAAU/qD,MAGduC,EAAAA,GAAAC,cAAC0oD,EAAAA,EAAS,CACRlrD,GAAIunD,EACJjgD,IAAKy0B,EACLmoB,MAAOkD,EACPP,SAAUyC,EACV7Q,YAAa4O,GAAqBzmD,EAAK,iBAK5C2oD,GAAa5mD,OACZJ,EAAAA,GAAAC,cAAC2oD,EAAAA,EAAc,CACb5qD,WAAWkC,EAAAA,EAAAA,GAAe,cAAe,gBAAiBilD,GAAmB,uBAC7EjwC,MAAO8xC,EACPsB,eAAgBA,GAChBzC,WAAYoB,EACZhC,gBAAiBA,GAEhB+B,EAAY3nD,KAAK5B,GAAOoqD,GAAWpqD,MAEnC04B,IAAa6wB,GAAgBA,EAAY5mD,OAG5CJ,EAAAA,GAAAC,cAAC4oD,EAAAA,EAAO,MAFR7oD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,cAAc+mD,GAAgB,yBAIzC,G,oJChRV,MA6EA,GAAeroD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA4C,IAA1C,OAAEksC,EAAM,cAAE+Z,GAAejmD,EAChC,IAAKksC,EACH,MAAO,CAAC,EAGV,MAAMzuC,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQ4uC,GAC1BvY,GAAOjB,EAAAA,EAAAA,KAAWp1B,EAAQ4uC,GAGhC,MAAO,CACLzuC,OACAk2B,OACAoiB,iBALuBkQ,GAAiBtyB,GAAQA,EAAK61B,OAMtD,GAdensD,EA7EkCoB,IAchD,IAdiD,KACrDqhB,EAAI,MACJ5Q,EAAK,YACLk6C,EAAW,SACXD,EAAQ,SACRD,EAAQ,KACRzrD,EAAI,KACJk2B,EAAI,WACJs0B,EAAU,UACVvpD,EAAS,MACT+qD,EAAK,gBACL1T,EAAe,eACf2T,EAAc,QACd7oD,GACDpC,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,IAAI2qD,EACAC,EAEJ,GAAI9pC,GAAQ5Q,EACVy6C,EACEjpD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aACbgC,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAMmP,KAIhB8pC,EAAY16C,OACP,GAAI+4C,GAAct0B,GAAQl2B,EAAM,CACrCksD,EACEjpD,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACLD,KAAM41C,GAAct0B,GAAQl2B,EAC5BuD,KAAK,QACL+0C,gBAAiBA,IAIrB,MAAMplC,EAAQs3C,GAAclpD,EAAKkpD,EAAW4B,aACrCpsD,GAASk2B,IAASoiB,GACnB6C,EAAAA,EAAAA,IAAuBjlB,IACvB4lB,EAAAA,EAAAA,IAAax6C,EAAMtB,EAAMs4C,IAE/B6T,EAAYj5C,GAAOZ,EAAAA,EAAAA,GAAWY,QAAQzS,CACxC,CAEA,MAAMsR,GAAgB5O,EAAAA,EAAAA,GACpB,qBACAlC,GACCjB,GAAM+2B,SAAWyzB,GAAY6B,iBAAmB,gBACjDV,GAAe,YACfD,GAAY,YACZM,GAAS,QACTC,IAAkB97B,EAAAA,EAAAA,GAAkBq6B,GAAcxqD,GAAQk2B,IAG5D,OACEjzB,EAAAA,GAAAC,cAAA,OACEjC,UAAW8Q,EACX3O,QAASA,IAAMA,EAAQqoD,GACvBh6C,MAAOk6C,EAAcQ,OAAY1rD,EACjCkE,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzByrD,GACCP,GACA1oD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YAAY0D,IAAI,QAC5BwnD,GAGJT,GACCzoD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eACbgC,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,WAGX,I,yGClHV,QAA2f,WAA3f,EAA8gB,WC4H9gB,GAAevT,EAAAA,EAAAA,KAnGoBqB,IAO7B,IAP8B,SAClCsrD,EAAQ,UACRC,EAAS,kBACTC,EAAiB,kBACjBC,EAAiB,SACjBn+C,EAAQ,UACRrN,GACDD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEPmrD,GAAmB7oD,EAAAA,EAAAA,IAAuB,MAE1C8oD,GAAqB9oD,EAAAA,EAAAA,IAAuB,OAE3CiiD,EAAQ8G,IAAajiD,EAAAA,EAAAA,IAAS,IAC9BkiD,EAAcC,IAAmBniD,EAAAA,EAAAA,IAAS,GAE3CoiD,EAAsBA,KAC1B,GAAIL,EAAiBroD,SAAWsoD,EAAmBtoD,cAAwB5D,IAAb6N,EAAwB,CACpF,MAAM0+C,EAAaN,EAAiBroD,QAAQ4oD,YACtCC,EAAcP,EAAmBtoD,QAAQ4oD,YACzCE,EAAWH,EAAa,EACxBI,EAAWF,EAAcF,EAAa,EACtCK,EAAe/+C,EAAW4+C,EAC1BI,EAAY//C,KAAK2B,IAAIi+C,EAAU5/C,KAAKC,IAAI6/C,EAAcD,IAI5D,IAAIG,EAFJX,EAAUU,EAAYJ,GAIpBK,EADEF,EAAeF,EACE7+C,EAAW4+C,GAA2B,EAAXC,GACrCE,EAAeD,EAEN,IADM9+C,EAAY8+C,EAAWF,IAAiB,EAAIE,EAAWF,GACrC,GAExB,GAEpBJ,EAAgBS,EAClB,IAGF9qD,EAAAA,EAAAA,IAAUsqD,EAAqB,CAACz+C,KAEhCk/C,EAAAA,EAAAA,GAAkBb,EAAoBI,GAEtC,MAAMU,EAAmB9sD,QAAQ8rD,GAAqBD,GAChDkB,EAAiB/sD,QAAQ2N,IAAaA,EAAW,IAEvD,OACErL,EAAAA,GAAAC,cAAA,OACE8E,IAAK2kD,EACL1rD,WAAWkC,EAAAA,EAAAA,GD5EM,WC8EfsqD,GD9EsC,WC+EtCxsD,GAEFgG,OAAOC,EAAAA,EAAAA,QACQzG,IAAb6N,GAA2B,eAAcA,SACxB7N,IAAjBosD,GAA+B,oBAAmBA,IACjD,cAAa/G,MAGf2H,GACCxqD,EAAAA,GAAAC,cAAA,OAAKjC,UDxF6D,YCyFhEgC,EAAAA,GAAAC,cAAA,OAAKjC,UDzF4K,YC0F/KgC,EAAAA,GAAAC,cAAA,OAAKjC,UD1F8Q,WC0F7O+G,IAAK0kD,GACxCD,GAAqBxpD,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAMu5C,EAAmBxrD,UD3FoW,aC4FxZurD,GACCvpD,EAAAA,GAAAC,cAAA,OAAKjC,UD7Fod,WC6F9a0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAClE+rD,IAIPvpD,EAAAA,GAAAC,cAAA,OAAKjC,UDlGsV,YCmGzVgC,EAAAA,GAAAC,cAAA,OAAKuL,MAAM,KAAKC,OAAO,KAAKwF,QAAQ,YAAYzG,KAAK,QACnDxK,EAAAA,GAAAC,cAAA,QAAMm1C,EAAE,uTAAuT5qC,KAAK,gBAM9UxK,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,YAAOopD,IAETrpD,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,YAAOqpD,IAETtpD,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GDhH8gB,WCgH9euqD,GDhHwgB,aCiHtjBzqD,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,YAAOopD,IAETrpD,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,YAAOqpD,KAGP,G,2MCrDV,MAsLA,GAAe5sD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA4C,IAA1C,OAAE25C,EAAM,cAAEsM,GAAejmD,EAChC,MAAM,SAAEorD,GAAa9tD,EACfq2B,EAAOgmB,GAASjnB,EAAAA,EAAAA,KAAWp1B,EAAQq8C,QAAUz7C,EAC7CmtD,EAAa1R,GAAS2R,EAAAA,EAAAA,KAAiBhuD,EAAQq8C,QAAUz7C,EACzD63C,GAAmBkQ,GAAiBtyB,GAAQA,EAAK61B,OACjD/T,EAAOM,EAAkBpiB,GAAOjB,EAAAA,EAAAA,KAAWp1B,EAAQA,EAAOk1B,eAGhE,MAAO,CACLmB,OACA03B,aACAtV,kBACAkI,kBANwB7/C,QAAQu7C,IAAUuE,EAAAA,EAAAA,KAAmB5gD,EAAQq8C,IAOrElE,OACA2V,WACD,GAhBe/tD,EAtL+BoB,IAgC7C,IAhC8C,WAClDwpD,EAAU,aACV1J,EAAY,WACZE,EAAa,SAAQ,OACrBE,EAAM,WACNH,EAAU,SACVI,EAAQ,gBACR1C,EAAe,aACf1G,EAAY,UACZ0J,EAAS,aACTL,EAAY,mBACZC,EAAkB,gBAClBO,EAAe,iBACfJ,EAAgB,cAChBG,EAAa,OACbmM,EAAM,WACNC,EAAU,MACVxM,EAAK,KACLrrB,EAAI,WACJ03B,EAAU,KACV5V,EAAI,gBACJM,EAAe,cACfqC,EAAa,kBACb6F,EAAiB,YACjBwN,EAAW,OACXp7C,EAAM,UACN3R,EAAS,kBACTygD,EAAiB,SACjBiM,EAAQ,mBACR9L,EAAkB,YAClBqK,EAAW,aACX+B,GACDjtD,EACC,MAAM,aACJktD,EAAY,gBACZnM,EAAe,kBACfC,IACE3gD,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAELb,GAAIw7C,GAAWhmB,GAAQ,CAAC,GAEhCzzB,EAAAA,EAAAA,KAAU,KACJy5C,IACEkF,GAAgBuM,GAAUO,EAAa,CAAEhS,WACzCuC,GAAiBuD,EAAkB,CAAEI,UAAWlG,IACtD,GACC,CAACA,EAAQkF,EAAc3C,EAAiBkP,IAE3C,MAAMtL,GAAyBx7C,EAAAA,EAAAA,IAC7B,CAAC8J,EAAiD2xC,KAC5CpsB,GAAQosB,IACV3xC,EAAEM,kBACF8wC,EAAgB,CACdQ,cAAersB,EAAKx1B,GACpB8hD,QAAS,EACTj6C,OAAuB,UAAfy4C,EAAyByB,EAAAA,GAAkBC,cAAgBD,EAAAA,GAAkBE,qBAEzF,IAIEC,GAAehhD,EAAAA,EAAAA,KAAQ,IAAMs0B,GAAQ6hB,IAAgB8K,EAAAA,EAAAA,IAAgB3sB,IAAO,CAACA,EAAM6hB,IAEzF,IAAK7hB,IAASs0B,EACZ,OA+CF,MAAM2D,EAAcH,EAChBA,EAAYG,aAAe7sD,EAAK0sD,EAAYI,QAAU,uBAAyB,6BAC/E3tD,EAkCJ,OACEwC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,WAAYlC,GAAY0D,KAAM48C,GAASjgD,EAAKsD,MAAQ,WAAQnE,GACxFk6C,GAAiB3C,GAChB/0C,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACL8P,IAAI,iBACJphB,KAAMy9C,EACNpsC,KAAMojC,EACNM,iBAAe,EACfr3C,UAAU,wBAGdgC,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACL8P,IAAKuR,GAAMx1B,GACX6C,KAAMy9C,EACNpsC,KAAM41C,GAAct0B,EACpBj1B,WAAWkC,EAAAA,EAAAA,GAAew3C,GAAiB,kBAC3CrC,gBAAiBA,EACjBqC,cAAeA,EACf8G,UAAWA,EACXC,kBAAmBA,EACnBoB,gBAAgB,cAChB1/C,QAASq7C,EAAkB4D,OAAyB5hD,IAEtDwC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QAtDbktD,EAEAlrD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,mBACbgC,EAAAA,GAAAC,cAAC8/C,EAAAA,EAAa,CACZpuC,KAAMshB,EACN+sB,iBAAkBtB,EAClBC,gBAAiBA,EACjBtJ,gBAAiBA,EACjBqC,cAAeA,EACfkH,mBAAoBA,IAErBsM,GAAelrD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAgBktD,IAMpDlrD,EAAAA,GAAAC,cAAC8/C,EAAAA,EAAa,CACZpuC,KAAM41C,GAAct0B,EACpB43B,OAAQA,EACRC,WAAYA,EACZ9K,iBAAkBtB,EAClBC,gBAAiBA,EACjBtJ,gBAAiBA,EACjBqC,cAAeA,EACfkH,mBAAoBA,EACpBqK,YAAaA,KA8BXhL,IAAY5I,IAAoBkJ,IAzGxC,WACE,GAAIN,EACF,OAAOC,EACLl+C,EAAAA,GAAAC,cAACggD,EAAAA,EAAY,CAACjiD,UAAU,SAAS6I,QAASo3C,IAE1Cj+C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAC1Bo8C,GAAc99C,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAAChS,UAAU,cAAciS,KAAM6tC,KAClDzuC,EAAAA,EAAAA,GAAW4uC,IAKlB,GAAIG,IAAuBb,EACzB,OACEv9C,EAAAA,GAAAC,cAACggD,EAAAA,EAAY,CAACjiD,UAAU,SAAS6I,QAASxI,EAAK,cAInD,GAAIkpD,GAAY6D,YACd,OACEprD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAS0D,IAAI,QAC3B1B,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAAc0D,IAAI,QAAQrD,EAAKkpD,EAAW6D,eAKhE,IAAKn4B,EACH,OAGF,GAAI4qB,EACF,OAAO79C,EAAAA,GAAAC,cAACigD,EAAAA,EAAY,CAACrC,aAAcA,IAGrC,MAAMwN,GAAmBC,EAAAA,EAAAA,IAAcjtD,EAAM40B,EAAM03B,GAC7CY,GAAwBrrD,EAAAA,EAAAA,GAAe,SAAUmrD,GAAoB,cAC3E,OACErrD,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAe,UAAUsrD,EAAAA,EAAAA,IAAav4B,EAAM03B,GAAY,IAAS,WAC/EhL,GAAgB3/C,EAAAA,GAAAC,cAAA,QAAMjC,UAAWutD,GAAwB5L,GACzD0L,GAAoBrrD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAAc0D,IAAI,QAAQ2pD,GAGrE,CA+D8DzK,IAEzDjxC,GAAU3P,EAAAA,GAAAC,cAACwrD,EAAAA,EAAY,MACvBT,EACG,I,qWCxMV,MAqIA,GAAetuD,EAAAA,EAAAA,KArIoBqB,IAQ7B,IAR8B,KAClChB,EAAI,KACJk2B,EAAI,MACJtD,EAAK,gBACL0lB,EAAe,cACfqC,EAAa,aACbgU,EAAY,QACZvrD,GACDpC,EAEC,MAAM4tD,GAAW/qD,EAAAA,EAAAA,IAAyB,MAEpCvC,GAAOC,EAAAA,EAAAA,MACP,SAAEgJ,IAAaC,EAAAA,EAAAA,MAEfqkD,EAAY34B,IAAQ44B,EAAAA,EAAAA,IAAc54B,GAClC64B,EAAgB/uD,IAAQgvD,EAAAA,EAAAA,IAAqBhvD,EAAKU,IAClDuuD,EAAsBjvD,IAAQkvD,EAAAA,EAAAA,IAAwBlvD,EAAKU,IAC3DkU,EAAOshB,GAAQl2B,EACfmvD,EAAev6C,IAAS0jC,IAAoBuW,IAAcE,IAAkBE,GAC5E,QAAEG,GAAYx8B,GAAS,CAAC,EAExBy8B,EAAaF,IAAgBG,EAAAA,EAAAA,IAAkB16C,EAAM,UACrD26C,GAAgBhqD,EAAAA,EAAAA,GAAS8pD,GAEzBG,EAAYL,GAAgBv8B,IAAUw8B,GAAY,QAAOx8B,EAAMlyB,YAC/D+uD,GAAelqD,EAAAA,EAAAA,GAASiqD,GAExBE,EAAYP,GAAgBv8B,GAASw8B,IAAWO,EAAAA,EAAAA,IAAwB/8B,GAGxEg9B,GAFerqD,EAAAA,EAAAA,GAASmqD,IAEQD,GAC/BI,EAAcC,IAAkB7rD,EAAAA,EAAAA,KACjC8rD,EAAmBpvD,QAAQivD,KAAmBR,GAAWS,IACzDjtD,GAAuBwD,EAAAA,EAAAA,GAAmB2pD,GAC1CC,EAAiBb,IAAiBY,IAAqBR,GAAiB38B,GAAOztB,WAAWC,QAC1F6qD,GAAwBtQ,EAAAA,EAAAA,GAC5B/sB,GAAOztB,WAAWC,SAAU4qD,EAAgBzlD,IAAaq1C,EAAAA,IAErD0C,EAAW1vB,GAAS28B,GAAiBS,GAE3CvtD,EAAAA,EAAAA,KAAU,KACJmsD,EAASvqD,UAAYsqD,IACvBC,EAASvqD,QAAQ6rD,YAAc,EACjC,GACC,CAACvB,IAEJ,MAAMwB,GAAcvuD,EAAAA,EAAAA,KAAQ,IACtB02C,EACKqC,EAAgB,WAAa,wBAGlCkU,EACK,yBAGLE,EACK,eAGLE,EACK,qBADT,GAKC,CAACA,EAAqBJ,EAAWlU,EAAeoU,EAAezW,IAElE,IAAIxuC,EAEJ,GAAIqmD,EACFrmD,EAAU7G,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAMi9C,EAAa1I,KAAK,aACnC,GAAInF,EACTx4C,EACE7G,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACGk8C,EACC/sD,EAAAA,GAAAC,cAAA,UAAQ8E,IAAKioD,EAAuBhvD,UAAU,4BAE9CgC,EAAAA,GAAAC,cAAA,OAAKiE,IAAKooD,EAAeloD,WAAW,EAAOpG,UAAU,QAAQ6a,IAAI,KAElE8W,IACCw8B,EACEnsD,EAAAA,GAAAC,cAACktD,EAAAA,EAAc,CACbC,QAAS1B,EACT3mD,IAAK4mD,EACLznD,IAAKyoD,EACL3uD,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBP,GAC1C0tD,OAAK,EACLC,yBAAuB,EACvBC,MAAI,EACJC,aAAW,EACXC,QAASZ,IAGX7sD,EAAAA,GAAAC,cAAA,OACEiE,IAAKyoD,EACL3uD,WAAWkC,EAAAA,EAAAA,GAAe,eAAgBP,GAC1CkZ,IAAI,YAMT,GAAIoa,EAAM,CACf,MAAMy6B,GAAeC,EAAAA,EAAAA,IAAgB16B,GACrCpsB,EAAU6mD,GAAeE,EAAAA,EAAAA,IAAgBF,EAAc,QAAKlwD,CAC9D,MAAO,GAAIT,EAAM,CACf,MAAMyR,GAAQqqC,EAAAA,EAAAA,IAAax6C,EAAMtB,GACjC8J,EAAU2H,IAASo/C,EAAAA,EAAAA,IAAgBp/C,GAAOkiB,EAAAA,EAAAA,IAAS3zB,EAAKU,IAAM,EAAI,EACpE,MACEoJ,EACE7G,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,mBACbgC,EAAAA,GAAAC,cAACy2C,EAAAA,EAAO,CAAC9mC,MAAM,WAKrB,MAAMd,GAAgB5O,EAAAA,EAAAA,GACpB,gBACAgtB,EAAAA,EAAAA,GAAkBvb,GAClB0jC,GAAmB,iBACnB2W,GAAuB,qBACvBJ,GAAa,kBACbE,GAAiB,uBACfzW,IAAoBgK,GAAa,YAGrC,OACEr/C,EAAAA,GAAAC,cAAA,OAAKjC,UAAW8Q,EAAe3O,QAASk/C,EAAWl/C,OAAU3C,GACvC,iBAAZqJ,GAAuBwI,EAAAA,EAAAA,GAAWxI,EAAS,CAAC,aAAeA,EAC/D,I,eC9KV,QAA6D,WAA7D,EAAwF,WAAxF,EAA2H,WAA3H,EAA6J,WAA7J,EAAwN,WAAxN,EAA6V,WC4X7V,GAAenK,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAA6B,IAA3B,OAAE25C,GAAQ35C,EACjB,MAAM,SAAEorD,GAAa9tD,EACfq2B,GAAOjB,EAAAA,EAAAA,KAAWp1B,EAAQq8C,GAC1BtF,GAAYjjB,EAAAA,EAAAA,IAASuoB,GACrB0R,GAAaC,EAAAA,EAAAA,KAAiBhuD,EAAQq8C,GACtCl8C,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQq8C,IAC1B,QAAEsG,EAAO,cAAED,IAAkBliD,EAAAA,EAAAA,KAAeR,GAAQixD,YACpD/5B,EAAU/2B,GAAM+2B,SACd/T,SAAU+tC,IAAmB9mC,EAAAA,EAAAA,KAAyBpqB,IAAW,CAAC,EACpE6gD,EAAQ3pB,GAAWg6B,EAAiB/wD,GAAM2gD,SAASoQ,QAAkBtwD,EACrEuwD,EAAepa,GAAY/iB,EAAAA,EAAAA,KAAmBh0B,EAAQq8C,QAAUz7C,EAChEqzB,EAAgB8iB,OAAiDn2C,GAArCszB,EAAAA,EAAAA,KAAmBl0B,EAAQq8C,GAEvD+U,GAAe/6B,GAAQl2B,IAAOixD,YAC9BC,EAAqBD,EAAcpxD,EAAO64B,aAAa12B,KAAKivD,EAAY1lB,iBAAc9qC,EAE5F,MAAO,CACLktD,WACAz3B,OACA03B,aACA5tD,OACAmxD,kBAAmBH,GAAcI,cACjCC,iBAAkBL,GAAcM,aAChCC,kBAAmBP,GAAcQ,cACjCC,iBAAkB39B,GAAcw9B,aAChC9O,UACAD,gBACA2O,wBACIxQ,GAAS,CACXA,QACAE,eAAeC,EAAAA,EAAAA,KAA0BhhD,EAAQq8C,EAAQ6U,IAE5D,GAjCenxD,EAvT2BoB,IAgBzC,IAhB0C,cAC9CwnD,EAAa,aACbmG,EAAY,KACZz4B,EAAI,WACJ03B,EAAU,KACV5tD,EAAI,SACJ2tD,EAAQ,QACRnL,EAAO,cACPD,EAAa,MACb7B,EAAK,cACLE,EAAa,kBACbuQ,EAAiB,iBACjBE,EAAgB,kBAChBE,EAAiB,iBACjBE,EAAgB,mBAChBP,GACDlwD,EACC,MAAM,aACJktD,EAAY,gBACZnM,EAAe,iBACf2P,EAAgB,eAChBC,EAAc,+BACdC,IACEvwD,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAELb,GAAIw7C,GAAWhmB,GAAQ,CAAC,GACxBx1B,GAAIX,GAAWC,GAAQ,CAAC,EAC1B6xD,EAAS37B,GAAM27B,QAAU7xD,GAAM6xD,QAAU5vB,EAAAA,EACzC6vB,GAAc30B,EAAAA,EAAAA,GAAYqlB,GAC1BuP,GAAoB50B,EAAAA,EAAAA,GAAYolB,GAChCyP,GAAa3sB,EAAAA,EAAAA,GAAYmd,IACxByP,GAAmBC,KAAwBvnD,EAAAA,EAAAA,KAAS,GAErDwnD,GAAiBF,GAAqB3wD,EAAKsD,MAAQ,WAAa,QAAW,QAE1EwtD,GAAmBC,KAAwB1nD,EAAAA,EAAAA,IAAS,GACrD2nD,GAAUT,EAAOxuD,QAAU,GAA2B,IAAtB+uD,GAChCG,GAASV,EAAOxuD,QAAU,GAAK+uD,KAAsBP,EAAOxuD,OAAS,GAG3EZ,EAAAA,EAAAA,KAAU,KACJsvD,QAAqCtxD,IAAhBqxD,QAAyCrxD,IAAZ+hD,IACpD0P,IAAqB,GACrBG,GAAqBP,GACvB,GACC,CAACtP,EAASsP,EAAaC,KAG1BtvD,EAAAA,EAAAA,KAAU,KACRyvD,IAAqB,GACrBG,GAAqBL,EAAW3tD,SAAW,EAAE,GAC5C,CAAC2tD,EAAYH,KAGhBpvD,EAAAA,EAAAA,KAAU,KACJ2vD,GAAoBP,EAAOxuD,SAC7B6uD,IAAqB,GACrBG,GAAqB9kD,KAAK2B,IAAI,EAAG2iD,EAAOxuD,OAAS,IACnD,GACC,CAAC+uD,GAAmBP,EAAOxuD,UAE9BZ,EAAAA,EAAAA,KAAU,KACJkrD,GAAYzR,IAAWsM,GACzB0F,EAAa,CAAEhS,UACjB,GACC,CAACA,EAAQgS,EAAcP,EAAUnF,IChIvB,SACbqJ,EACAW,IAEA/vD,EAAAA,EAAAA,KAAU,KACRovD,EAAOxvD,MAAMmwD,EAAcA,EAPL,GAOuC1jD,SAAS8jB,IAClD6/B,EAAAA,GAA2B,QAAO7/B,EAAMlyB,cAExD+xD,EAAAA,GAAmB,QAAO7/B,EAAMlyB,YAAa+E,EAAAA,GAAeC,QAC9D,GACA,GACD,CAAC8sD,EAAcX,GACpB,CDsHEa,CAAiBb,EAAQO,IAEzB,MAAMO,IAA0B9rD,EAAAA,EAAAA,IAAgB,KAC9Ck7C,EAAgB,CACdQ,cAAerG,GAAUn8C,EACzByiD,QAAS4P,GACT7pD,OAAQigD,EAAgB/F,EAAAA,GAAkBmQ,eAAiBnQ,EAAAA,GAAkBC,eAC7E,IAGEmQ,IAAoBhsD,EAAAA,EAAAA,IAAgB,KACnCq1C,EAOLwV,EAAiB,CAAEoB,WAAY5W,IAN7ByV,EAAe,CACbjgB,eAAgBwf,EAAoBxf,gBAKA,IAGpCqhB,IAAsBlsD,EAAAA,EAAAA,IAAgB,KACtCyrD,KAGJJ,IAAqB,GACrBG,GAAqBD,GAAoB,GAAE,IAGvCY,IAAkBnsD,EAAAA,EAAAA,IAAgB,KAClC0rD,KAGJL,IAAqB,GACrBG,GAAqBD,GAAoB,GAAE,IAGvCa,IAA6BpsD,EAAAA,EAAAA,IAAgB,KACjD+qD,EAA+B,CAAE7xD,OAAQC,EAAMU,GAAIwyD,YAAY,GAAQ,IAgCzE,IAtBAzwD,EAAAA,EAAAA,KAAU,KACR,MAAMywC,EAAU79B,SAASua,cAA+B,IAAGxoB,KAC3D,GAAK8rC,EAIL,OAAOvhC,EAAAA,EAAAA,IAAcuhC,EAAS,CAC5BigB,wBAAyB,8BACzBC,QAASzpC,EAAAA,GAAe,CAAChZ,EAAG0iD,IACtBA,IAAcC,EAAAA,GAAeC,OAC/BR,MACO,GACEM,IAAcC,EAAAA,GAAeE,OACtCR,MACO,QAIPvyD,GACJ,GACD,CAACuyD,GAAiBD,KAEhB78B,GAASl2B,EA2Fd,OAAI0gD,EArFAz9C,EAAAA,GAAAC,cAAA,OAAKjC,UDtNgkB,YCuNnkBgC,EAAAA,GAAAC,cAAC6/C,EAAAA,EAAS,CACRrC,MAAOA,EACPn9C,KAtJe,IAuJftC,UD1NgnB,WC2NhnBwyD,gBD3N4oB,WC4N5oBC,aAAW,IAEbzwD,EAAAA,GAAAC,cAAA,MAAIjC,UD9NulB,WC8NzjB0D,IAAKrD,EAAKsD,MAAQ,WAAQnE,IAAY6R,EAAAA,EAAAA,GAAWouC,EAAOjvC,QAC1FxO,EAAAA,GAAAC,cAAA,KAAGjC,UD/N6qB,YCgO7qB2/C,EAAgBt/C,EAAK,mBAAoBs/C,EAAe,KAAOt/C,EAAK,2BAgF3E2B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAe,cAAeqlD,GDjTxB,YCkTjB7jD,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAE1BwC,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GA9EpB,WACE,GAAKyqD,KAAUA,EAAOxuD,QAAU,GAIhC,OACEJ,EAAAA,GAAAC,cAAA,OAAKjC,UD5OsO,YC6OxO4wD,EAAOvvD,KAAI,CAACqxD,EAAGnvD,IACdvB,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GD9O6O,WC8O5MqB,IAAM4tD,ID9OqO,gBCkPrS,CAmEOwB,IACCpL,GAAiB2I,GACjBluD,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GACdiE,EACAkrD,IAAWlrD,IAGXnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACb9F,EAAK6vD,EAAkB/B,QAAU,uBAAyB,0BAIhE5G,GAAiB+I,GAChBtuD,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GACdiE,GACCkrD,IAAWC,KAAWnrD,IAGvBnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,EAA8BhE,QApJxD,WACOkvD,KACLJ,IAAqB,GACrBG,GAAqBR,EAAOxuD,OAAS,GACvC,IAiJckvD,IACAtvD,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACL+d,MAAO2+B,EACPtwD,UD3U4K,WC4U5KsC,KAAK,SAGRjC,EAAKiwD,EAAkBnC,QAAU,uBAAyB,0BAIjEnsD,EAAAA,GAAAC,cAACkgD,EAAAA,GAAU,CAACE,UAAW8O,GAAmBl/C,KAAMi/C,IAC7C0B,KAGDvB,IACArvD,EAAAA,GAAAC,cAAA,UACEkc,KAAK,SACLza,IAAKrD,EAAKsD,MAAQ,WAAQnE,EAC1BQ,WAAWkC,EAAAA,EAAAA,GAAeiE,ED3VoV,YC4V9W,aAAY9F,EAAK,oBACjB8B,QAAS2vD,MAGXR,IACAtvD,EAAAA,GAAAC,cAAA,UACEkc,KAAK,SACLza,IAAKrD,EAAKsD,MAAQ,WAAQnE,EAC1BQ,WAAWkC,EAAAA,EAAAA,GAAeiE,EDpW6Y,YCqWva,aAAY9F,EAAK,QACjB8B,QAAS4vD,MAKf/vD,EAAAA,GAAAC,cAAA,OAAKjC,UD3W8B,WC2WN0D,IAAKrD,EAAKsD,MAAQ,MAAQ,SACnDsxB,GAAQl2B,IACRiD,EAAAA,GAAAC,cAAC8/C,EAAAA,EAAa,CACZpuC,KAAOshB,GAAQl2B,EACfijD,iBAAe,EACfrB,gBA9Sc,GA+SdC,mBAAoBgR,GACpBa,aAAW,EACXI,cAAY,IA7GtB,WACE,MAAMrlB,EAAU1uC,GAAUm8C,EAG1B,KAD4BgT,EAAAA,EAAAA,IAAwBzgB,GAGpD,OAAIvY,EAEAjzB,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GACTiE,EACA,UACAqnD,EAAAA,EAAAA,IAAav4B,EAAM03B,IAAe,WAGpC3qD,EAAAA,GAAAC,cAAA,QAAMjC,UDrRgf,WCqRld0D,IAAI,SACrC4pD,EAAAA,EAAAA,IAAcjtD,EAAM40B,EAAM03B,IAE5BA,GAAYmG,0BACX9wD,EAAAA,GAAAC,cAAA,QAAMjC,UDzR6hB,WCyRhgBmC,QAAS6vD,IAC1ChwD,EAAAA,GAAAC,cAAA,YAAO5B,EAAK,uBAQpB2B,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAe,UAAWzC,IAAI,SAC5DkzB,EAAAA,EAAAA,IAAc73B,GACVsB,EAAK,cAAetB,EAAM0jD,cAAgB,EAAG,KAC7CpiD,EAAK,UAAWtB,EAAM0jD,cAAgB,EAAG,KAInD,CA6EOsQ,KAlIP,SAASH,GAAYzzD,GACnB,MAGMkxD,GAHQO,EAAOxuD,OAAS,EAC1BwuD,EAAOO,SACP3xD,IAC0B0wD,GAAqBE,GAAoBI,GAAoBF,EAE3F,OACEtuD,EAAAA,GAAAC,cAAC+wD,EAAY,CACXtvC,IAAKytC,GACLl8B,KAAMA,EACNl2B,KAAMA,EACN4yB,MAAO0+B,EACP3C,aAAchuD,QAAQP,GAAYuuD,GAClCvrD,QAASuvD,IAGf,CAoHQ,I,+HE7VV,MAqDA,GAAehzD,EAAAA,EAAAA,KArD2BqB,IAOpC,IAPqC,SACzCo0C,EAAQ,mBACR/d,EAAkB,UAClBp2B,EAAS,KACTsC,EAAI,cACJ2wD,EAAa,oBACbxX,GACD17C,EACC,MAAMmzD,EAAW,eAAgB/e,EAC3Bgf,GAAoBxyD,EAAAA,EAAAA,KAAQ,IAChCy1B,GAAoB7T,MAAM6wC,IAAcC,EAAAA,EAAAA,IAAeD,EAAUjf,SAAUA,MAC1E,CAAC/d,EAAoB+d,IAClBmf,EAAeH,GAAmBI,YAAY9zD,GAC9C4K,GAAY/F,EAAAA,EAAAA,GAAU,WAAUgvD,KAAiBA,EAAc9uD,EAAAA,GAAeC,SAE9E9C,GAAuBwD,EAAAA,EAAAA,GAAmBkF,GAE1CmpD,EAAqB,aAAcrf,GAAkC,OAAtBA,EAASzW,SACxD+1B,EAA6BR,GAAiB,aAAc9e,GAAkC,MAAtBA,EAASzW,SAEvF,OAAIw1B,EAEAlxD,EAAAA,GAAAC,cAAC+Y,EAAAA,EAAW,CACVsvB,WAAY6J,EAAS7J,WACrBtqC,WAAWkC,EAAAA,EAAAA,GAAe,sBAAuBlC,GACjDsC,KAAMA,EACNoxD,8BAA+BjY,IAKjCgY,EAEAzxD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,sCAAsCgG,MAAQ,cAAa1D,eAAkBA,QAK5FN,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GACT,sBACAsxD,GAAsB,mBACtB7xD,EACA3B,GAEFgG,MAAO1D,EAAQ,UAASA,gBAAmBA,WAAW9C,EACtD0G,IAAKmE,GAAaspD,EAClB94C,IAAKs4C,GAAmB3iD,MACxBpK,WAAW,GACX,G,yICjDN,MA2GA,GAAe1H,EAAAA,EAAAA,KA3GmBqB,IAS5B,IAT6B,OACjCkkB,EAAM,QACN2vC,EAAU,WAAU,OACpBpmB,EAAM,MACN7b,EAAK,WACL1H,EAAU,QACVmI,EAAO,QACP/N,EAAO,oBACPC,GACDvkB,EACC,MAAM,eACJ8zD,EAAc,WACdC,EAAU,mBACVC,EAAkB,YAClBC,EAAW,sBACXC,IACE7zD,EAAAA,EAAAA,OAEG8zD,EAAgBC,IAAqBzqD,EAAAA,EAAAA,IAA0B,SAC/Du7C,EAAamP,IAAkB1qD,EAAAA,EAAAA,IAAS,IAEzC2qD,GAAezuD,EAAAA,EAAAA,IAAgB,KACnC,OAAQguD,GACN,IAAK,WACHC,EAAe,CAAE5pC,WAAYA,EAAaqqC,OAAQJ,EAAgBjP,gBAClEgP,IACA,MACF,IAAK,OACHH,EAAW,CAAEh1D,OAAQ0uC,EAAQ8mB,OAAQJ,EAAgBjP,gBACrD,MACF,IAAK,QACH8O,EAAmB,CACjBj1D,OAAQ0uC,EAAQ7b,QAAO2iC,OAAQJ,EAAgBjP,gBAEjD,MACF,IAAK,QACH+O,EAAY,CACVxmB,OAAQA,EAASpb,QAASA,EAAUkiC,OAAQJ,EAAgBjP,gBAGlE5gC,GAAS,IAGLkwC,GAAqB3uD,EAAAA,EAAAA,IAAiB+9C,IAC1CwQ,EAAkBxQ,EAAyB,IAGvC6Q,GAA0B5uD,EAAAA,EAAAA,IAAiB8J,IAC/C0kD,EAAe1kD,EAAEuX,OAAO08B,MAAM,IAG1BtjD,GAAOC,EAAAA,EAAAA,KAEPm0D,GAA8D9zD,EAAAA,EAAAA,KAAQ,IAAM,CAChF,CAAEgjD,MAAO,OAAQvF,MAAO/9C,EAAK,2BAC7B,CAAEsjD,MAAO,WAAYvF,MAAO/9C,EAAK,+BACjC,CAAEsjD,MAAO,cAAevF,MAAO/9C,EAAK,kCACpC,CAAEsjD,MAAO,aAAcvF,MAAO/9C,EAAK,kCACnC,CAAEsjD,MAAO,YAAavF,MAAO/9C,EAAK,+BAClC,CAAEsjD,MAAO,eAAgBvF,MAAO,iBAChC,CAAEuF,MAAO,kBAAmBvF,MAAO,oBACnC,CAAEuF,MAAO,QAASvF,MAAO/9C,EAAK,8BAC7B,CAACA,IAEJ,GACe,aAAZuzD,IAA2B3pC,GACZ,SAAZ2pC,IAAuBpmB,GACX,UAAZomB,KAAyBpmB,IAAW7b,IACxB,UAAZiiC,KAAyBxhC,IAAYob,GAEzC,OAGF,MAAMh9B,EACFnQ,EADsB,aAAZuzD,EACL,2BACA,qBAET,OACE5xD,EAAAA,GAAAC,cAACo5C,EAAAA,EAAK,CACJp3B,OAAQA,EACRI,QAASA,EACTqwC,QAASzwC,EAASowC,OAAe70D,EACjC8kB,oBAAqBA,EACrBtkB,WAAWkC,EAAAA,EAAAA,GAAe,SAAsB,UAAZ0xD,GAAuB,wBAC3DpjD,MAAOA,GAEPxO,EAAAA,GAAAC,cAAC0yD,EAAAA,EAAU,CACT1iD,KAAK,iBACL2iD,QAASH,EACTnO,SAAUiO,EACVM,SAAUX,IAEZlyD,EAAAA,GAAAC,cAAC0oD,EAAAA,EAAS,CACRvM,MAAO/9C,EAAK,iCACZsjD,MAAOsB,EACPqB,SAAUkO,IAEZxyD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,kBACbgC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACoP,MAAM,SAAS5R,UAAU,wBAAwBu7C,QAAM,EAACp5C,QAASkyD,GACtEh0D,EAAK,sBAER2B,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACxC,UAAU,wBAAwBu7C,QAAM,EAACp5C,QAASkiB,GAAUhkB,EAAK,YAErE,G,wEChHZ,MAqCA,GAAe3B,EAAAA,EAAAA,KAlCiBqB,IAQ1B,IAR2B,MAC/B0/C,EAAK,UACLz/C,EAAS,gBACTwyD,EAAe,KACflwD,EAAI,YACJmwD,EAAW,oBACXhX,EAAmB,QACnBt5C,GACDpC,EACC,OAAI0/C,EAAMqV,aAXY,MAWGrV,EAAMqV,YAE3B9yD,EAAAA,GAAAC,cAAC+Y,EAAAA,EAAW,CACVsvB,WAAYmV,EAAMqV,YAClB90D,UAAWA,EACXsC,KAAMA,EACNoxD,8BAA+BjY,EAC/BsZ,UAAYtC,OAA2BjzD,EAnB5B,EAoBX2C,QAASA,IAMbH,EAAAA,GAAAC,cAAC+yD,EAAAA,EAAgB,CACfC,UAAWxV,EAAMwV,UACjBzkD,MAAOivC,EAAMjvC,MACb0kD,QAASzV,EAAMhgD,GACfO,UAAWA,EACXwyD,gBAAiBA,EACjBrwD,QAASA,GACT,G,mHC5BN,MAkBA,GAAezD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAmC,IAAjC,aAAEu+C,GAAcv+C,EACvB,OAAKu+C,EAAa5E,OAMX,CAAEka,YAFUnhC,EAAAA,EAAAA,KAAWp1B,EAAQihD,EAAa5E,SAH1C,CAAC,CAKW,GARLt8C,EAlB4BoB,IAAkC,IAAjC,aAAE8/C,EAAY,WAAEsV,GAAYp1D,EAC3E,MAAMM,GAAOC,EAAAA,EAAAA,KACP80D,EAAiBD,IAAeA,EAAWrK,SAAU5Q,EAAAA,EAAAA,IAAuBib,GAC5EtsD,EAAUxI,EAAKw/C,EAAa1yB,QAE/B3T,QAAQ,SAAU,IAClBA,QAAQ,UAAWqmC,EAAa1f,OAAS,IAAIyI,OAEhD,OACE5mC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,gBAAgB0D,IAAKrD,EAAKsD,MAAQ,MAAQ,QACpDyxD,GACCpzD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAAc0D,IAAI,SAAQ2N,EAAAA,EAAAA,GAAW+jD,IAEvDpzD,EAAAA,GAAAC,cAACggD,EAAAA,EAAY,CAACp5C,QAASA,IACrB,I,0KCZR,MAyGA,GAAenK,EAAAA,EAAAA,KA3FeqB,IAExB,IAFyB,QAC7BoH,EAAO,YAAEC,EAAW,YAAE28C,EAAW,oBAAEtI,EAAmB,eAAE4Z,GACzDt1D,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,IAAIg1D,GAAgDC,EAAAA,EAAAA,IAAkBpuD,GAEtE,IAAKmuD,EAAU,CACb,MAAMhkC,GAAOkkC,EAAAA,EAAAA,IAAsBruD,GACnC,GAAImqB,EAAM,CACR,MAAM,IAAEH,EAAG,OAAEskC,GAAWnkC,EAExBgkC,EAAW,CACTI,SAAUD,EAAOj8C,QAAQ,QAAS,IAClC2X,IAAKA,EAAIxY,SAAS,OAASwY,EAAMA,EAAIxY,SAAS,KAAQ,UAASwY,IAAS,UAASA,IACjFwkC,sBAAsBC,EAAAA,EAAAA,IAAezuD,KAAagqB,GAC9C0kC,EAAAA,EAAAA,GAAqBx1D,EAAM8G,OAAS3H,OAAWA,EA9BnC,UA+BZA,EAER,CACF,CAEA,MAAMsuB,GAAqBloB,EAAAA,EAAAA,IAAgB,KACzCyvD,EAAeluD,EAAQ1H,GAAI0H,EAAQrI,OAAO,IAG5C,IAAKw2D,EACH,OAGF,MAAM,SACJI,EAAQ,IACRvkC,EAAG,WACH2kC,EAAU,MACVtlD,EAAK,YACLy0C,EAAW,qBACX0Q,EAAoB,MACpBhkC,EAAK,MACL1oB,GACEqsD,EAEES,GAAwB3uD,GAAe69C,IAAe+Q,EAAAA,EAAAA,GAAS/Q,EAvD/C,KAyDhBjlD,GAAYkC,EAAAA,EAAAA,GAChB,uBACEyvB,IAAU1oB,GAAU,iBAGlBgtD,EAAkB9kC,EAAI3X,QAAQ,UAAW,KAAOs8C,EAEtD,OACE9zD,EAAAA,GAAAC,cAAA,OACEjC,UAAWA,EACX,gBAAe01D,GAAYI,GAAY,GACvCpyD,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzBmyB,GACC3vB,EAAAA,GAAAC,cAACi0D,EAAAA,EAAK,CAAC/uD,QAASA,EAAS48C,YAAaA,EAAatI,oBAAqBA,IAE1Ez5C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,WACbgC,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CAAC3N,MAAOtD,EAAKsD,MAAO3D,UAAU,aAAamC,QAAS2rB,IACtDzc,EAAAA,EAAAA,GAAWb,GAASklD,GAAYI,KAEjCC,GAAwBJ,IACxB3zD,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CAAC3N,MAAOtD,EAAKsD,MAAO3D,UAAU,mBAAmBmC,QAAS2rB,GAC5D6nC,GAAyBI,IAAwB1kD,EAAAA,EAAAA,GAAW0kD,IAGjE/zD,EAAAA,GAAAC,cAACk0D,EAAAA,EAAQ,CACPhlC,IAAKA,EACLnxB,UAAU,YACV0C,KAAMuzD,EACNtyD,MAAOtD,EAAKsD,QAEbyD,GAAepF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBAAeqR,EAAAA,EAAAA,GAAWjK,KAE1DA,GACCpF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACbgC,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CACHtR,UAAU,OACVmC,QAAS2rB,EACTnqB,MAAOtD,EAAKsD,QAEX4N,EAAAA,EAAAA,IAAoBlR,EAAqB,IAAf8G,EAAQI,QAIrC,G,mRC7DV,MAAM6uD,EAAO,IAGPC,EAAgCt2D,IAiBhC,IAjBiC,UACrCC,EAAS,QACTmH,EAAO,UACP2jB,EAAS,OACTG,EAAM,WACND,EAAU,cACVsrC,EAAa,MACb9lD,EAAK,WACL4e,EAAU,YACV20B,EAAW,aACXt0B,EAAY,aACZ8mC,EAAY,iBACZC,EAAgB,iCAChBC,EAAgC,8BAChCC,EAA6B,8BAC7BhD,EAA6B,QAC7BvxD,GACDpC,EAEC,MAAMgH,GAAMnE,EAAAA,EAAAA,IAAuB,MAC7B+5C,GAAiBC,EAAAA,EAAAA,IAAkB71C,EAAK2vD,GAExCC,GAAeh2D,EAAAA,EAAAA,KAAQ,KAC3B,MAAMi2D,EAAiC,YAApB9rC,GAAW3M,MAAsB2M,EAAU8rC,WAC9D,GAAKA,EACL,MAAO,CACL/tD,QAAS+tD,EACV,GACA,CAAC9rC,IAEEk5B,GAAe1/C,EAAAA,EAAAA,GAAS6C,IAAW0C,EAAAA,EAAAA,IAAoB1C,EAAS,cAAew1C,GAC/Eka,GAAiBC,EAAAA,EAAAA,GAAa3vD,GAAWwvD,GACzCI,EAAer3D,QAAQyH,IAAW6vD,EAAAA,EAAAA,IAAqB7vD,IACvDk6B,EAAY3hC,QAAQyH,IAAW+8C,EAAAA,EAAAA,IAAoB/8C,IACnD8vD,EAAUv3D,QAA4B,YAApBorB,GAAW3M,MAAsB2M,EAAUmsC,SAC7DC,EAAuC,YAApBpsC,GAAW3M,KAAqB2M,EAAUqsC,eAAY33D,EAEzE43D,EAAkBjwD,IAAWkwD,EAAAA,EAAAA,IAAsBlwD,IACnD,eAAEmwD,IAAmBC,EAAAA,EAAAA,GACzBf,EAAkBrvD,GAASrI,OAAQs4D,EAAkBjwD,GAAS1H,QAAKD,EAAWi3D,GAG1Ep2D,GAAOC,EAAAA,EAAAA,KAEP8G,EAAc6jB,GAASusC,EAAAA,EAAAA,IAAen3D,EAAM4qB,GAC7CisC,GAAkBvrC,gBAAkBxkB,GAASokB,aAAaI,eACzD8rC,EAAkBzsC,GAAawsC,EAAAA,EAAAA,IAAen3D,EAAM2qB,QAAcxrB,EAClEk4D,EAAqBpB,GAAgBkB,EAAAA,EAAAA,IAAen3D,EAAMi2D,GAC5DnvD,GAASokB,aAAaI,eACpBgsC,EAAiB1sC,GAAUA,EAAOxrB,KAAO62D,GAAe72D,IAExD,YAAEyjB,GAAW,gBAAE00C,KAAoBC,EAAAA,EAAAA,GAAa11D,GAgGtD,OACEH,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACL/G,WAAWkC,EAAAA,EAAAA,GACT,kBACAlC,GACAkvB,EAAAA,EAAAA,GAAkBjE,EAAQsrC,GAAc,GACxCU,GAAW,WACXJ,GAAkB,cAEpBnzD,IAAKrD,EAAKsD,MAAQ,WAAQnE,EAC1B2C,QAAS+gB,GACT+1B,YAAa2e,IAEZf,GAyBP,SACE5yD,EACA6zD,EACAf,EACAhT,EACA1iB,GAEA,MAAM,MAAE7zB,EAAK,OAAEC,IAAWsqD,EAAAA,EAAAA,MAEpBC,EAASF,GAAW7zD,EAE1B,OACEjC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,iBAAkB60D,GAAgB,WAC7D11B,GACAr/B,EAAAA,GAAAC,cAAA,OACEiE,IAAK8xD,EACLxqD,MAAOA,EACPC,OAAQA,EACRoN,IAAI,GACJ7a,UAAU,YACVoG,WAAW,IAGfpE,EAAAA,GAAAC,cAACuiD,EAAAA,EAAY,CAACvgD,aAAc+zD,EAAQvT,UAAW/kD,QAAQ2hC,GAAY7zB,MAAOA,EAAOC,OAAQA,IACxFs2C,GAAe/hD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAGtC,CApDyBi4D,CAAgBpB,EAAgB7S,EAAc+S,EAAchT,EAAa1iB,GAC3FpW,GAAQrZ,OAAOsmD,mBACdl2D,EAAAA,GAAAC,cAACk2D,EAAAA,EAAmB,CAClBC,gBAAiBntC,EAAOrZ,MAAMsmD,kBAC9Bl4D,UAAU,sCAGdgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,wBAAyB+0D,GAAW,cAnH7C,YAApBnsC,GAAW3M,MAAsB2M,EAAUc,WACtCysC,EAAAA,EAAAA,GAAuB,CAC5B31D,KAAMooB,EAAUc,UAAUlpB,KAC1B+Y,SAAUqP,EAAUc,UAAUnQ,SAC9B68C,aAAc7oC,EACd8oC,UA7DW,KAiEVpxD,GAIDqxD,EAAAA,EAAAA,IAAgBrxD,GAEhBnF,EAAAA,GAAAC,cAACw2D,EAAAA,EAAa,CACZtxD,QAASA,EACTuxD,YAAU,EACVhC,8BAA+BA,EAC/BhD,8BAA+BA,IAMnC1xD,EAAAA,GAAAC,cAAC02D,EAAAA,EAAc,CACbt4D,KAAMA,EACN8G,QAASA,EACTyxD,QAASl5D,QAAQm3D,GACjBS,eAAgBA,EAChBZ,8BAA+BA,EAC/BhD,8BAA+BA,EAC/B6E,UAxFW,KAkENnpC,GA2BX,SAAgCypC,GAC9B,IAAKA,GAASA,EAAMhwD,QAAQnG,KAAM,OAAO0zD,EACzC,MAAMnR,GAAc6T,EAAAA,EAAAA,IAA+Bz4D,EAAMw4D,EAAMhwD,SAC/D,OAAKo8C,GAAeA,IAAgB8T,EAAAA,IAElC/2D,EAAAA,GAAAC,cAAA,aACGoP,EAAAA,EAAAA,GAAW4zC,IAHkDmR,CAMpE,CApCyB4C,CAAuBrC,IAAiBP,GA4G3Dp0D,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,iBAhErB,WACE,GAAIwQ,EACF,OAAOa,EAAAA,EAAAA,GAAWb,GAGpB,IAAKpJ,EACH,OAAOgvD,EAGT,IAAIh1C,EACA4J,KACE4L,EAAAA,EAAAA,IAAc5L,KAChB5J,EAAO,mBAGL63C,EAAAA,EAAAA,IAAYjuC,KACd5J,EAAO,iBAIX,MAAM83C,EAAiBzpC,GAAgB/vB,QAAQorB,GAAa,cAAeA,GAAaA,GAAWc,WAEnG,OACE5pB,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,OA5BGmY,MACD0H,EAAAA,EAAAA,IAAS1H,GAAYvrB,KACrBurB,EAAWvrB,KAAOwrB,GAAQxrB,KA4BxBuC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,oBACbqR,EAAAA,EAAAA,GAAW6nD,EAAiB74D,EAAK,eAAgB+G,GAAeA,IAGpEga,GAAQpf,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAMmP,EAAMphB,UAAU,uBACpCohB,GAAQq2C,GACPz1D,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBACbqR,EAAAA,EAAAA,GAAWomD,IAKtB,CA4BS0B,GACAzB,IAAuBC,GACtB31D,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAMqkD,EAAgB,eAAiB,UAAWt2D,UAAU,0BACjEqR,EAAAA,EAAAA,GAAWqmD,MAKhB,EAiCGloC,GAA0B4pC,EAAAA,EAAAA,GAAiB/C,GAExD,G,iMC7RA,MC2BMgD,EAAiC,CACrC,CACEC,OAAQ,GAAIC,MAAO,GAAIC,QAAS,IAAM5rD,MAAO,KAE/C,CACE0rD,OAAQ,GAAIC,MAAO,GAAIC,QAAS,GAAK5rD,MAAO,GAE9C,CACE0rD,OAAQ,GAAIC,MAAO,GAAIC,QAAS,IAAM5rD,MAAO,KAE/C,CACE0rD,OAAQ,GAAIC,MAAO,GAAIC,QAAS,IAAM5rD,MAAO,GAE/C,CACE0rD,OAAQ,GAAIC,MAAO,EAAGC,QAAS,GAAK5rD,MAAO,MAE7C,CACE0rD,OAAQ,GAAIC,MAAO,GAAIC,QAAS,GAAK5rD,MAAO,GAE9C,CACE0rD,OAAQ,IAAKC,MAAO,GAAIC,QAAS,GAAK5rD,MAAO,MAE/C,CACE0rD,OAAQ,IAAKC,MAAO,GAAIC,QAAS,GAAK5rD,MAAO,MAI3C6rD,EAAava,EAAAA,EAsHnB,GAAexgD,EAAAA,EAAAA,KA7GaqB,IAGZ,IAHa,gBAC3Bq4D,EAAe,UACfp4D,GACSD,EAET,MAAMiM,GAAYpJ,EAAAA,EAAAA,IAA0B,MAEtC82D,GAAe92D,EAAAA,EAAAA,IAAuB,OAErC+2D,EAAYC,IAAiBlwD,EAAAA,EAAAA,MAE9BmwD,GAAMC,EAAAA,EAAAA,KAENz5D,GAAOC,EAAAA,EAAAA,MAEP,YAAEy5D,IAAgBC,EAAAA,EAAAA,GAAe5B,GACjC6B,EAAmBF,GAAcx1D,EAAAA,EAAAA,IAAsBw1D,EAAYt6D,SAAMD,EACzEqF,GAAaP,EAAAA,EAAAA,GAAS21D,GAEtBC,GAAcC,EAAAA,EAAAA,GAAwBT,GAEtCU,GAA6BC,EAAAA,EAAAA,KAA6B,KACzDx1D,IACLy1D,EAAAA,EAAAA,IAAaz1D,GAAY01D,KAAKX,EAAc,GAC3C,CAAC/0D,KAEJrD,EAAAA,EAAAA,KAAU,KACR44D,GAA4B,GAC3B,CAACA,IAEJ,MAAMI,GAAe50D,EAAAA,EAAAA,IAAgB,KACnC,MAAMwH,EAASpB,EAAU5I,QACzB,IAAKgK,IAAWusD,IAAeO,EAAa,OAE5C,MAAM36C,EAAUnS,EAAOO,WAAW,OAC5B,MAAEH,EAAK,OAAEC,GAAWL,EAE1BmS,EAAQk7C,UAAU,EAAG,EAAGjtD,EAAOC,GAE/B4rD,EAAexrD,SAAQvM,IAEjB,IAFkB,OACtBg4D,EAAM,MAAEC,EAAK,QAAEC,EAAO,MAAE5rD,GACzBtM,EACC,MAAM4M,GAAK7N,EAAKsD,MAAQ21D,EAAS9rD,EAAQqsD,EAAMP,GAAUO,EACnD1rD,EAAIorD,EAAQM,EAEZtB,EAAYkB,EAAaI,EAE/Bt6C,EAAQm7C,OACRn7C,EAAQxR,YAAcyrD,EACtBj6C,EAAQo7C,UAAUzsD,EAAGC,GACrBoR,EAAQ3R,MAAMA,EAAOA,GACrB2R,EAAQq7C,UAAUjB,GAAapB,EAAY,GAAIA,EAAY,EAAGA,EAAWA,GACzEh5C,EAAQs7C,SAAS,IAGnB,MAAMC,EAAa,GAAEZ,IAAcH,EAAagB,SA/DxB,KACI,OAgE5Bx7C,EAAQm7C,OACRn7C,EAAQjS,UAAYwtD,EACpBv7C,EAAQy7C,yBAA2B,cACnCz7C,EAAQ07C,SAAS,EAAG,EAAGztD,EAAOC,GAC9B8R,EAAQs7C,SAAS,IAGbK,GAAkCb,EAAAA,EAAAA,IAA6BG,EAAc,CAACA,KAEpFh5D,EAAAA,EAAAA,KAAU,KACR05D,GAAiC,GAChC,CAACvB,EAAYt5D,EAAKsD,MAAOu2D,EAAagB,IAEzC,MAAMC,GAAmBd,EAAAA,EAAAA,KAA6B,CAACpO,EAAqBmP,MAC1Et3B,EAAAA,EAAAA,KAAgB,KACd,MAAM12B,EAASpB,EAAU5I,QACpBgK,IAELA,EAAOI,MAAQy+C,EAAc4N,EAC7BzsD,EAAOK,OAAS2tD,EAAevB,EAE/BzsD,EAAOpH,MAAMwH,MAAS,GAAEy+C,MACxB7+C,EAAOpH,MAAMyH,OAAU,GAAE2tD,MAEzBZ,IAAc,GACd,GACD,CAACX,IAEEwB,GAAehB,EAAAA,EAAAA,KAA8BiB,IACjD,MAAM,MAAE9tD,EAAK,OAAEC,GAAW6tD,EAAMC,YAEhCJ,EAAiB3tD,EAAOC,EAAO,GAC9B,CAAC0tD,IAaJ,OAXA5O,EAAAA,EAAAA,GAAkBmN,EAAc2B,IAEhC75D,EAAAA,EAAAA,KAAU,KACR,MAAMg6D,EAAY9B,EAAat2D,QAC/B,IAAKo4D,EAAW,OAEhB,MAAM,MAAEhuD,EAAK,OAAEC,GAAW+tD,EAAU5rD,wBAEpCurD,EAAiB3tD,EAAOC,EAAO,GAC9B,CAAC0tD,IAGFn5D,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GDtKG,WCsKyBlC,GAAY+G,IAAK2yD,GAC3D13D,EAAAA,GAAAC,cAAA,UAAQ8E,IAAKiF,IACT,G,kBCvKH,SAASyvD,EAAqBC,EAA4BC,GAC/D,MAAM,MACJC,EAAK,OAAEC,EAAM,mBAAEC,EAAkB,gBAAEC,EAAe,WAAEC,EAAU,iBAAEC,GAC9DP,EAEEQ,EAAiBP,GAAmBE,IAAWC,GAAsBE,EAW3E,MAAO,CACLG,aAVmBD,EAAiBN,EAAQ,EAAIA,EAWhDQ,aAVmB18D,QAAQq8D,GAW3BF,SACAQ,eAVsBN,GAAmBG,EAAkB,GACxDL,EAASC,IAAuBC,EAAkBD,GAUrDQ,gBATsBP,EAAkBA,EAAkBF,EAAS,EAUnEU,gBARqC/8D,IAApBu8D,EASjBE,mBAEJ,C,kECzBe,SAASO,EAAet/C,EAAkBu/C,GACvD,OAAOA,EAAkB,GAAEC,EAAAA,MAAkBx/C,IAAc,IAAGA,GAChE,C,0HCeO,SAASy/C,EAAiB58D,GAoB9B,IApB+B,QAChCoH,EAAO,UACPy1D,EAAS,UACTrE,EAAS,SACTsE,EAAQ,eACRC,EAAc,YACd/Y,EAAW,cACXgZ,EAAa,mBACbC,EAAkB,iBAClBC,GAWDl9D,EACC,MAAM,KAAE2C,EAAI,SAAE+Y,GAAatU,EAAQ0B,QAAQnG,MAAQ,CAAC,EAEpD,IAAKA,EAAM,CACT,MAAMw6D,GAA0BtH,EAAAA,EAAAA,IAAezuD,GAC/C,OAAO+1D,EAA0B,EAAClH,EAAAA,EAAAA,GAASkH,EAAyBJ,SAAmBt9D,CACzF,CAEA,MAAM29D,GAAaC,EAAAA,EAAAA,IAAcj2D,GAEjC,OAAOkxD,EAAAA,EAAAA,GAAuB,CAC5B31D,MAAMszD,EAAAA,EAAAA,GAAStzD,EAAMo6D,GACrBrhD,WACAmhD,YACArE,YACAyE,qBACAvoB,YAAc,GAAEwoB,EAAmB,MAAQ,KAAKE,IAChDN,WACA9Y,cACAgZ,iBAEJ,CAGO,SAASlH,EACdx1D,EACA8G,GAIY,IAHZyxD,EAAO9sD,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACP8wD,EAAkB9wD,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAClBs9D,EAAchxD,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGuxD,EAAAA,GAEjB,MAAM,SAAE5hD,GAAatU,EAAQ0B,QAAQnG,MAAQ,CAAC,EAExC46D,EAAc7hD,GAAUqQ,MAAMpc,GAAMA,EAAEyO,OAASrD,EAAAA,GAAsByiD,UACrEC,EAAiB/hD,GAAUqQ,MAAMpc,GAAMA,EAAEyO,OAASrD,EAAAA,GAAsBE,cAC9E,IAAKsiD,IAAgBE,EAAgB,CACnC,MAAM96D,GAAOszD,EAAAA,EAAAA,IAASyH,EAAAA,EAAAA,IAAsBp9D,EAAM8G,EAASyxD,GAAUkE,GAErE,OAAIF,GACKvrD,EAAAA,EAAAA,GAAW3O,EAAM,CAAC,QAAS,aAAc,CAAEk6D,eAE3CvrD,EAAAA,EAAAA,GAAW3O,EAEtB,CAEA,MAAMy9B,GAASy4B,IAAW8E,EAAAA,EAAAA,IAAuBv2D,GAC3Cw2D,EAAiBx9B,EAAS,GAAEA,KAAW,GAEvCz9B,EAAOi6D,EAAkB,CAC7Bx1D,UAASy1D,YAAWC,UAAU,EAAMC,mBAEhC7X,GAAc2Y,EAAAA,EAAAA,IAA6Bv9D,EAAM8G,EAASzE,GAEhE,MAAO,KACF2O,EAAAA,EAAAA,GAAWssD,MACVtxD,MAAMwxD,QAAQ5Y,GAAeA,EAAc,CAACA,IAChD1jD,OAAO7B,QACX,C,wEC3FA,MAAMo+D,EAAyB,IACzBC,EAAuB,IAEd,SAASC,EACtBC,GAGA,IAFAC,EAAwBpyD,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACxBqyD,EAAsBryD,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAGtB,MAAMZ,GAASiC,EAAAA,EAAAA,MACf,OAAOu9D,EAAAA,EAAAA,IAAQH,GAAUx+D,IACvB,MAAMV,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQa,GAChC,IAAKV,EACH,OAAO,EAGT,IAAIs/D,EAAW,EAEf,MAAMC,GAAcC,EAAAA,EAAAA,KAAsB3/D,EAAQa,GAalD,OAZI6+D,IACFD,GAAYC,EAAY/2D,MAGtB22D,GAA4Bn/D,EAAKy/D,aACnCH,GAAYP,GAGVK,GAAeA,EAAYxlD,SAASlZ,KACtC4+D,EAAWz/C,KAAKC,MAAQk/C,GAAwBI,EAAY/7D,OAAS+7D,EAAYhnD,QAAQ1X,KAGpF4+D,CAAQ,GACd,OACL,C,yTCpCA,MAAMI,EAAc,KACdC,EAAe,MAKd,SAASC,IACd,MAAM9/C,EAAM,IAAID,KAChBC,EAAI+/C,SAAS,EAAG,EAAG,EAAG,GACtB,MAAMC,EAAMhgD,EAAIigD,SACVC,EAAOlgD,EAAImgD,UAAYH,GAAe,IAARA,GAAa,EAAI,GACrD,OAAO,IAAIjgD,KAAKC,EAAIogD,QAAQF,IAAOG,SACrC,CASO,SAASC,EAAgBC,EAAuCC,GACrE,GAAc,IAAVA,EAAa,OAAOD,EAExB,MAAME,EAA+C,GAErD,IAAK,MAAMltB,KAASgtB,EAAQ,CAC1B,IAAIp4D,GAASorC,EAAMmtB,YAAcF,GAASX,EACtCz3D,GAAOmrC,EAAMotB,UAAYH,GAASX,EAElC13D,EAAQ,IAAGA,GAAS03D,GACpBz3D,GAAO,IAAGA,GAAOy3D,GAEjB13D,EAAQC,GACVq4D,EAAc97D,KAAK,CAAE+7D,YAAav4D,EAAOw4D,UAAWd,QACpDY,EAAc97D,KAAK,CAAE+7D,YAAa,EAAGC,UAAWv4D,KAEhDq4D,EAAc97D,KAAK,CAAE+7D,YAAav4D,EAAOw4D,UAAWv4D,GAExD,CAKA,OAHAq4D,EAAcG,MAAK,CAACC,EAAGC,IAAMD,EAAEH,YAAcI,EAAEJ,cAGxCD,EAAcp/C,QAAsC,CAACC,EAAKiyB,KAC/D,MAAMwtB,EAAOz/C,EAAIA,EAAI/d,OAAS,GAM9B,OALIw9D,GAAQA,EAAKJ,WAAaptB,EAAMmtB,YAClCK,EAAKJ,UAAYlzD,KAAK2B,IAAI2xD,EAAKJ,UAAWptB,EAAMotB,WAEhDr/C,EAAI3c,KAAK4uC,GAEJjyB,CAAG,GACT,GACL,C,4FCtDA,QAA8R,WC2BxR0/C,EAAOxzD,MAAMgN,KAAK,CAAEjX,OAAQ,IAAK,CAACswD,EAAGnvD,IAAMA,IA0KjD,GAAe7E,EAAAA,EAAAA,KApKOqB,IAEN,IAFO,cACrB+/D,GACS//D,EAET,MAAMggE,GAAgBn9D,EAAAA,EAAAA,IAAuB,OACtCo9D,EAAYC,EAAQC,IAAYl9D,EAAAA,EAAAA,IAAQ,IACxCm9D,EAAUC,EAAcC,IAAmBr9D,EAAAA,EAAAA,IAAQ,GACpD3C,GAAOC,EAAAA,EAAAA,KACPggE,GAAcC,EAAAA,EAAAA,MAEpBt8B,EAAAA,EAAAA,GAAYq8B,EAAa,KAEzB,MAAME,GAAiBC,EAAAA,EAAAA,IAAmB7hE,GAAWA,EAAO8hE,WAAW3/D,OACjE2/D,GAAYlvC,EAAAA,EAAAA,GAAgBgvC,EAAgB,CAACA,IAC7CG,GAA2BhgE,EAAAA,EAAAA,KAAQ,KACvC,IAAK+/D,EAAW,OAAO,EACvB,MAAME,EAAWF,EAAUZ,EAAce,YAEzC,QFhCuC,IAAlC,IAAIjiD,MAAOkiD,oBEgCGF,EAASG,WAAa,EAAE,GAC1C,CAACjB,EAAce,WAAYH,IAExBM,GAAYrgE,EAAAA,EAAAA,KAAQ,KACxB,MAAMsgE,EAAYtC,IAEZuC,EFDH,SAAmB9B,GACxB,MAAM8B,EAAsD,CAAC,EAE7D,IAAK,MAAM9uB,KAASgtB,EAAQ,CAC1B,MAAMp4D,EAAQorC,EAAMmtB,YACdt4D,EAAMmrC,EAAMotB,UAEZ2B,EAAW70D,KAAKgiC,MAAMtnC,EAAQy3D,GAC9B2C,EAAS90D,KAAKgiC,OAAOrnC,EAAM,GAAKw3D,GAEtC,IAAK,IAAII,EAAMsC,EAAUtC,GAAOuC,EAAQvC,IACjCqC,EAAKrC,KACRqC,EAAKrC,GAAO,IAGdqC,EAAKrC,GAAKr7D,KAAK,CACb+7D,YAAajzD,KAAK2B,IAAI,EAAGjH,EAAQ63D,EAAMJ,GACvCe,UAAWlzD,KAAKC,IAAIkyD,EAAax3D,EAAM43D,EAAMJ,IAGnD,CAEA,OAAOyC,CACT,CEtBiBG,CADQlC,EAAgBW,EAAckB,UAAWb,EAAWQ,EAA2B,IAE9FzqD,EAAmC,CAAC,EAiB1C,OAfA2pD,EAAKhyD,SAASgxD,IACZ,MAAMyC,EAAWJ,EAAKrC,GAMtB3oD,EAAO2oD,GALFyC,EAKSA,EAASjgE,KAAIC,IAAgC,IAA/B,YAAEi+D,EAAW,UAAEC,GAAWl+D,EACpD,OAAIk+D,EAAYD,GAAgB,KAAgBl/D,EAAK,8BAG7C,IAFMkhE,EAAAA,EAAAA,IAAWlhE,EAAM4gE,EAA0B,GAAd1B,EAAmB,WAClDgC,EAAAA,EAAAA,IAAWlhE,EAAM4gE,EAAwB,GAAZzB,EAAiB,MAChC,IARZ,CAACn/D,EAAK,0BASpB,IAGG6V,CAAM,GACZ,CAAC4pD,EAAckB,UAAWb,EAAU9/D,EAAMsgE,IAEvCa,GAAiB7gE,EAAAA,EAAAA,KAAQ,KAC7B,MAAM8gE,EAAiBtC,EAAgBW,EAAckB,UAAWL,GAE1DM,EAAYtC,IAEZ+C,IADM,IAAI9iD,MAAOsgD,UACc+B,GAAa,IAAO,GAEzD,OAAOQ,EAAe31C,MAAKjtB,IAAA,IAAC,YAAE0gE,EAAW,UAAEC,GAAW3gE,EAAA,OACpD0gE,GAAemC,GAAyBA,GAAyBlC,CAAS,GAC1E,GACD,CAACM,EAAckB,UAAWL,IAEvBgB,GAAahhE,EAAAA,EAAAA,KAAQ,KACb,IAAIie,KAAKA,KAAKC,OAASshD,EAAW,EAA+B,GAA3BQ,EAAgC,MACtE7B,SAAW,GAAK,GAC3B,CAACqB,EAAUQ,IAERz9C,GAActd,EAAAA,EAAAA,IAAgB,KAC9Bo6D,EACFE,IAEAD,GACF,IAGI2B,GAAsBh8D,EAAAA,EAAAA,IAAiB8J,IAC3CA,EAAEM,kBAEEmwD,EACFE,IAEAD,GACF,KAGF5+D,EAAAA,EAAAA,KAAU,KACR,IAAKw+D,EAAY,OACjB,MAAM6B,EAAQztD,SAASua,cAA4B,IAAGmzC,EAAAA,SAA8B37D,KACpF,IAAK07D,EAAO,OAEZ,MAAMp0D,EAASo0D,EAAME,cACrBj+B,EAAAA,EAAAA,KAAgB,KACdi8B,EAAc38D,QAAS4C,MAAMyH,OAAU,GAAEA,KAAU,GACnD,GACD,CAACuyD,IAEJ,MAAMgC,GAAuBp8D,EAAAA,EAAAA,IAAgB,KAC3C,MAAMi8D,EAAQztD,SAASua,cAA4B,IAAGszC,EAAAA,SAA0B97D,MAEhFia,EAAAA,EAAAA,KAAe,KACb,MAAM3S,EAASo0D,EAAME,cACrBj+B,EAAAA,EAAAA,KAAgB,KACdi8B,EAAc38D,QAAS4C,MAAMyH,OAAU,GAAEA,KAAU,GACnD,GACF,IAGJ,OACEzL,EAAAA,GAAAC,cAACkoD,EAAAA,EAAQ,CACP/oC,KAAK,QACL8gD,cD1IoD,WC2IpDC,WAAS,EACTniE,UD5IiB,WC6IjBoiE,SAAUpC,EACVruD,QAAM,EACN0wD,QAAM,EACNC,qBAAmB,EACnBngE,QAAS+gB,GAETlhB,EAAAA,GAAAC,cAAA,OAAKjC,UDnJ6B,YCoJhCgC,EAAAA,GAAAC,cAAA,OAAKjC,UDpJ+D,YCqJlEgC,EAAAA,GAAAC,cAAA,WAAM5B,EAAK,yBACX2B,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GDtJ0F,WCsJ5Ds/D,GDtJ6G,aCuJvInhE,EAAjBmhE,EAAsB,8BAAsC,mCAGjEx/D,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAAChS,UD1J0K,WC0JjJiS,KAAM+tD,EAAa,KAAO,UAE1DA,GACCh+D,EAAAA,GAAAC,cAAA,OAAKjC,UD7JmF,YC8JrFN,QAAQihE,IACP3+D,EAAAA,GAAAC,cAAA,OACEjC,UDhKiO,WCiKjOwmD,KAAK,SACLH,SAAU,EACVpN,YAAcvwB,EAAAA,QAAqClpB,EAAtBoiE,EAC7Bz/D,QAASumB,EAAAA,GAAek5C,OAAsBpiE,GAE7Ca,EAAK8/D,EAAW,+BAAiC,oCAGtDn+D,EAAAA,GAAAC,cAACkgD,EAAAA,GAAU,CACTniD,UD1K2P,WC2K3P+G,IAAKg5D,EACL9tD,KAAK,OACLowC,UAAW3V,OAAOyzB,GAClBoC,QAASP,GAEThgE,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,GACZ05D,EAAKx+D,KAAKw9D,GACT78D,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,MAAIjC,WAAWkC,EAAAA,EAAAA,GDnLwS,WCmLzQ28D,IAAQ8C,GDnLkT,cCoLrWa,EAAAA,EAAAA,IAAcniE,EAAc,IAARw+D,EAAY,EAAIA,EAAM,IAE7C78D,EAAAA,GAAAC,cAAA,MAAIjC,UDtL8R,YCuL/RghE,EAAUnC,GAAKx9D,KAAKohE,GACnBzgE,EAAAA,GAAAC,cAAA,WAAMwgE,YASb,I,+CCjMf,MC8BMC,EAAgB,CAAC,KAAM,KAAM,MAiLnC,GAAehkE,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KACjBC,IACC,MAAM,gBAAE+jE,EAAe,qBAAEC,GAAyBhkE,EAClD,MAAO,CACL+jE,kBACAC,uBACAC,0BAA0BzpC,EAAAA,EAAAA,KAA+Bx6B,GAC1D,GAPeD,EAjKCoB,IAOQ,IAPP,KACpBk1B,EAAI,SACJ6tC,EAAQ,yBACRD,EAAwB,gBACxBF,EAAe,qBACfC,EAAoB,aACpBG,GACsBhjE,EACtB,MAAM,qBAAEijE,EAAoB,gBAAEC,IAAoB7iE,EAAAA,EAAAA,MAE5C2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAC7BsgE,GAAqBtgE,EAAAA,EAAAA,KAAO,IAC3BugE,EAAoBC,EAAeC,IAAiBrgE,EAAAA,EAAAA,KAErD3C,GAAOC,EAAAA,EAAAA,MAEP,cACJgjE,EAAa,QACbC,EAAO,IACPC,IACE7iE,EAAAA,EAAAA,KAAQ,KACV,MAAM8iE,EAAQ,IAAI7kD,KACZrX,EAAO,IAAIqX,KAUjB,OATIkkD,EAASY,MACXn8D,EAAKwsC,YAAY+uB,EAASY,MAE5Bn8D,EAAKo8D,SAASb,EAASc,MAAQ,GAC/Br8D,EAAK03D,QAAQ6D,EAASjE,KACtBt3D,EAAKq3D,SAAS,EAAG,EAAG,EAAG,GAIhB,CACL0E,eAHgBO,EAAAA,EAAAA,GAAmBt8D,EAAMlH,EAAKyjE,MAAM,EAAM,QAI1DP,QAHsBh8D,EAAKy3D,YAAcyE,EAAMzE,WAAaz3D,EAAKw8D,aAAeN,EAAMM,WAItFP,IAAKV,EAASY,MAAQM,EAAOz8D,GAC9B,GACA,CAACu7D,EAAUziE,IAER4jE,GAAgBtjE,EAAAA,EAAAA,KAAQ,KAC5B,IAAK6iE,IAAQD,EAAS,OACtB,MAAMW,EAAUvB,GAAiBrrC,UAAU/1B,QAAOD,IAAA,IAAC,MAAE6+B,GAAO7+B,EAAA,OAAK6+B,GAAOgkC,SA3DhD,KA2D6E,IACrG,IAAKD,EAAS,OACd,MAAME,GAAU/b,EAAAA,EAAAA,IAAqB6b,EAAS,SAG9C,OADkBV,EAAIx1B,WAAWq2B,MAAM,IACtBhjE,KAAKijE,GAAUF,EAAQE,EAhEhB,OAgE6C,GACpE,CAACd,EAAKb,GAAiBrrC,SAAUisC,IAE9BgB,GAAgB5jE,EAAAA,EAAAA,KAAQ,KAC5B,IAAK4iE,EAAS,OACd,MAAMiB,EAAe9B,EAAcp2D,KAAKgiC,MAAMhiC,KAAKm4D,SAAW/B,EAActgE,SAC5E,OAAOwgE,GAAsBtrC,UAAU/U,MAAK1jB,IAAA,IAAC,MAAEshC,GAAOthC,EAAA,OAAKshC,IAAUqkC,CAAY,GAAC,GACjF,CAAC5B,GAAsBtrC,SAAUisC,KAGpC/hE,EAAAA,EAAAA,KAAU,KACR,GAAK+hE,GAAYU,IAEjBA,EAAcp2D,SAAShK,IACrB,MAAM6gE,GAAOC,EAAAA,EAAAA,IAAoB9gE,EAAQpE,IACzC+xD,EAAAA,GAAkBkT,EAAMlgE,EAAAA,GAAeC,QAAQ,IAG7C8/D,GAAe,CACjB,MAAMK,GAAaD,EAAAA,EAAAA,IAAoBJ,EAAc9kE,IACrD+xD,EAAAA,GAAkBoT,EAAYpgE,EAAAA,GAAeC,QAC/C,IACC,CAAC8/D,EAAehB,EAASU,KAE5BhmC,EAAAA,EAAAA,GAAWolC,EAAeF,EApFD,SAoF2C3jE,IAEpEgC,EAAAA,EAAAA,KAAU,KACR,GAAI2hE,EAAoB,CACtBD,EAAmB9/D,SAAU,EAE7B,MAAMyhE,EAASzwD,SAASirB,eAAe0jC,EAAe,aAAe,eACrE,IAAK8B,EAAQ,QAEbzkD,EAAAA,EAAAA,KAAe,KACb,MAAM,IACJ4xB,EAAG,KAAEriC,EAAI,MAAEnC,EAAK,OAAEC,GAChBo3D,EAAOj1D,wBAEXqzD,EAAgB,CACdjxB,MACAriC,OACAnC,QACAC,SACAzH,MAAO,YACP,GAEN,IACC,CAAC+8D,EAAcI,IAElB,MAAM2B,EAAY,kBAAiBvB,EAAU,QAAU,UAAUC,EAAM,OAAS,KAE1EuB,EAAiBxB,IAAYtuC,EAAK+vC,YAAc/vC,EAAK61B,SAAW+X,EAEhEoC,GAAsBr/D,EAAAA,EAAAA,IAAgB,KAC1Co9D,EAAqB,CAAEkC,WAAY,CAACjwC,EAAKx1B,KAAM,IAG3CyjB,GAActd,EAAAA,EAAAA,IAAgB,KAC7B29D,IAEDwB,GAAkB7B,EAAmB9/D,QACvC6hE,IAIF7B,IAAe,IAGXhB,GAAYmB,IAAYwB,EAE9B,OACE/iE,EAAAA,GAAAC,cAAA,OAAKjC,UDnKc,YCoKjBgC,EAAAA,GAAAC,cAACkoD,EAAAA,EAAQ,CACP/oC,KAAK,WACLipC,cAAe0a,EAAiB,YAASvlE,EACzC2lE,uBDvKyL,WCwKzLhD,WAAS,EACTE,QAAM,EACNt7D,IAAKA,EACL4K,QAASywD,EACTjgE,QAAS+gB,EACTk/C,SAAUA,EACVgD,qBAAsBH,GAEtBjjE,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,UAASqR,EAAAA,EAAAA,GAAWhR,EAAKykE,EAAU,CAACxB,EAAeE,QAAMhkE,EAAWgkE,KACnFxhE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,EAAKkjE,EAAU,uBAAyB,qBAErEJ,GAAsBkC,EAAAA,IAA4BpB,GAAe5iE,KAAI,CAACwC,EAASyhE,IAC9EtjE,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDrLsB,WCqLQojE,EAAQ,GDrL4F,YCsL7It/D,MAAQ,mBAAkBs/D,KAE1BtjE,EAAAA,GAAAC,cAACsjE,EAAAA,EAAW,CACV7L,aAAc3yD,EACdlD,QAASA,EACTvB,KA9JgB,IA+JhBkjE,aAAW,OAIhBrC,GAAsBoB,GACrBviE,EAAAA,GAAAC,cAAA,OAAKjC,UDjM8J,YCkMjKgC,EAAAA,GAAAC,cAACsjE,EAAAA,EAAW,CACV7L,aAAc3yD,EACdlD,QAAS0gE,EACTjiE,KAtKQ,IAuKRmjE,YAAU,EACVD,aAAW,KAIb,KAgBV,SAASxB,EAAO0B,GACd,MAAMjC,EAAQ,IAAI7kD,KAClB,IAAI4kD,EAAMC,EAAMzvB,cAAgB0xB,EAAU1xB,cAC1C,MAAM2xB,EAAIlC,EAAMM,WAAa2B,EAAU3B,WAKvC,OAJI4B,EAAI,GAAY,IAANA,GAAWlC,EAAMzE,UAAY0G,EAAU1G,YACnDwE,IAGKA,CACT,CCpOA,QAAmC,WCyE7BoC,EAAqB,CACzBp4D,MAAO,GACPC,OAAQ,GACRo4D,KAAM,IAGFC,GAAeC,EAAAA,EAAAA,KAAU3mD,GAAOA,KAAM,KAAK,GAqTjD,GAAe1gB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAAkD,IAAhD,aAAEmnE,EAAY,cAAEtsB,GAAe76C,EACtC,MAAQkpD,aAAeke,WAAYC,IAAoBtnE,EAEjDG,EAAOinE,GAAehnE,EAAAA,EAAAA,KAAWJ,EAAQonE,QAAgBxmE,EACzDy1B,EAAO+wC,GAAehyC,EAAAA,EAAAA,KAAWp1B,EAAQonE,QAAgBxmE,EACzDs2B,EAAU/2B,GAAM+2B,QAChBqwC,EAAUpnE,IAAQqnE,EAAAA,EAAAA,IAAkBrnE,GAAMsnE,EAAAA,EAAAA,KAAqBznE,IAAS0nE,EAAAA,EAAAA,KAAuB1nE,KAC/F,SAAEmjB,IAAaiH,EAAAA,EAAAA,KAAyBpqB,IAAW,CAAC,EACpDs2D,EAAUp/B,EAAU4W,OAAO3qB,QAAYviB,EAEvCqzB,EAAe9zB,IAAQ+zB,EAAAA,EAAAA,KAAmBl0B,EAAQG,EAAKU,IACvDswD,EAAe96B,IAAQrC,EAAAA,EAAAA,KAAmBh0B,EAAQq2B,EAAKx1B,IAEvD8mE,EAAiB1zC,GAAc2zC,WAE/BvhB,EAAc8K,GAAc0W,KAAO5zC,GAAc6zC,MAevD,MAAO,CACLR,gBACAnnE,OACAk2B,OACA86B,eACA4W,eAlBqB5nE,IAASk2B,MAC5B2B,EAAAA,EAAAA,IAAc73B,MAAU6nE,EAAAA,EAAAA,IAAkB7nE,EAAM,iBAC/C8nE,EAAAA,EAAAA,IAAiB9nE,EAAM,gBAiB1BonE,UACAjR,UACAqR,iBACAthB,cACA6hB,UAlBgB5R,GAAU6R,EAAAA,EAAAA,KAAgBnoE,EAAQonE,EAAc9Q,QAAW11D,EAmB3EwnE,kBAjBwBttB,GAAiB96C,EAAOqC,MAAMgmE,QAAQC,OAAOvuD,SAASqtD,GAkB9EmB,gBAhBsBpX,GAAcqX,mBAClCpoE,EAAAA,EAAAA,KAAWJ,EAAQmxD,EAAaqX,wBAChC5nE,EAeH,GA5Ceb,EAnTyBoB,IAevC,IAfwC,aAC5CimE,EAAY,KACZ/wC,EAAI,KACJl2B,EAAI,aACJgxD,EAAY,aACZgT,EAAY,eACZ4D,EAAc,QACdR,EAAO,cACPD,EAAa,QACbhR,EAAO,YACPjQ,EAAW,eACXshB,EAAc,UACdO,EAAS,iBACTE,EAAgB,gBAChBG,GACDpnE,EACC,MAAM,iBACJiY,EAAgB,qBAChBqvD,EAAoB,sBACpBC,EAAqB,gBACrBC,EAAe,gBACfC,EAAe,aACfC,EAAY,uBACZC,IACEtnE,EAAAA,EAAAA,OAGFX,GAAIw7C,EAAM,UACV0sB,EAAS,YACTC,EAAW,OACX9c,GACE71B,GAAQ,CAAC,GACLx1B,GAAIX,EAAQ6oE,UAAWE,GAAkB9oE,GAAQ,CAAC,EACpDyuC,EAASyN,GAAUn8C,GACnB,iBACJgpE,GAAgB,kBAChBC,GAAiB,yBACjBC,GAAwB,SACxBlF,IACE/S,GAAgB,CAAC,EACf1vD,IAAOC,EAAAA,EAAAA,MAEN2nE,GAAyBC,KAA8Bx+D,EAAAA,EAAAA,KAAUy8D,IAExE3kE,EAAAA,EAAAA,KAAU,KACR0mE,IAA4B/B,EAAQ,GACnC,CAACA,KAEJ76B,EAAAA,EAAAA,IAAsBhqC,IAAkB,IAAhB6mE,GAAW7mE,EAC5BksC,GAAU26B,IAAe36B,IAC1BvY,GAASl2B,IAAQ63B,EAAAA,EAAAA,IAAc73B,KACjCwoE,EAAgB,CAAE/5B,UACpB,GACC,CAACA,EAAQzuC,EAAMk2B,IAElB,MAAM,MAAEznB,GAAK,OAAEC,GAAM,KAAEo4D,IAASD,EAC1B/L,IAAMC,EAAAA,EAAAA,KACNsO,GAAoBN,IAAkBO,MACvCC,EAAAA,EAAAA,IAAmBR,GAAiBO,IAAK76D,GAAOC,GAAQo4D,GAAMhM,IAC7D0O,IAAkBjkE,EAAAA,EAAAA,GAAS8jE,IAE3BI,IAAyB7nE,EAAAA,EAAAA,KAAQ,KACrC,GAAKmnE,IAAkBO,IACvB,OAAIE,GACKvmE,EAAAA,GAAAC,cAAA,OAAKiE,IAAKqiE,GAAiB1tD,IAAI,GAAG7a,UAAWmG,IAG/CnE,EAAAA,GAAAC,cAACwmE,EAAAA,EAAQ,CAACzoE,UAAWmG,GAA2B,GACtD,CAAC2hE,GAAkBS,KAEhBG,GAAchpE,QAAQw1D,GAAWA,IAAYl/B,EAAAA,IAC7C2yC,GAAwB5pE,IAAQ63B,EAAAA,EAAAA,IAAc73B,IAAUk2B,GAAM+vC,UAE9D4D,IAAkBjoE,EAAAA,EAAAA,KAAQ,KAC9B,MAAMuV,EAASyxD,GAAWpmE,QAAQsnE,GAAMA,EAAE1pE,WAE1C,OAAO+W,GAAQ9T,OAAS8T,OAAS1W,CAAS,GACzC,CAACmoE,IAEEmB,IAAsBnoE,EAAAA,EAAAA,KAAQ,KAClC,MAAMuV,EAAU+e,OAAkDz1B,EAA3CqoE,GAAetmE,QAAQsnE,GAAMA,EAAE1pE,WAEtD,OAAO+W,GAAQ9T,OAAS8T,OAAS1W,CAAS,GACzC,CAACqoE,EAAe5yC,IAEb3D,IAAO3wB,EAAAA,EAAAA,KAAQ,KACnB,GAAK5B,EAIL,OAAO2pE,GAAc5B,GAAaiC,EAAAA,EAAAA,IAAYhqE,IAASwnE,CAAc,GACpE,CAACxnE,EAAM2pE,GAAa5B,EAAWP,IAE5ByC,IAAsBpjE,EAAAA,EAAAA,IAAgB,KAC1C,MAAM,QAAEqjE,EAAO,IAAEZ,GAAQP,GACzB,IAAKO,EAGH,OAFA/kB,EAAAA,EAAAA,IAAoB2lB,QACpBjxD,EAAiB,CAAE7Q,QAAS9G,GAAK,4BAInConE,EAAa,CAAEyB,SAAUb,EAAKxC,SAAO,IAGjCsD,IAA2BvjE,EAAAA,EAAAA,IAAgB,KAC/CsiE,IAA4B9kE,IAC1B,MAAMgmE,GAA8BhmE,EAcpC,OAZA0iE,GAAa,KACP4C,GACFpB,EAAsB,CACpBxoE,OAAQA,EACRo2D,QAASA,EACTiR,SAAUiD,IAGZ/B,EAAqB,CAAEvoE,OAAQA,EAASqnE,SAAUiD,GACpD,IAGKA,CAA0B,GACjC,IAGEC,IAAwBzjE,EAAAA,EAAAA,IAAgB,KAC5C4hE,EAAgB,CAAE1oE,OAAQknE,GAAe,IAG3C,SAASsD,GAAK5mE,EAAcwuB,IAC1BoyB,EAAAA,EAAAA,IAAoB5gD,GACpBsV,EAAiB,CAAE7Q,QAAU,GAAE+pB,gBACjC,CAEA,MAAMq4C,GAAkB3B,IAAe4B,EAAAA,EAAAA,IAA0BtD,EAAe0B,GAE1E6B,IAAmB7jE,EAAAA,EAAAA,IAAgB,KACnCgiE,GAAaxlE,SAAWsnE,EAAAA,KAAyB9B,EAAYjgC,WAAWgiC,EAAAA,KAC1EjC,EAAuB,CAAEkC,YAAahC,EAAap6B,OAAQA,EAASrvB,KAAM,UAG5EmrD,GAAKC,GAAkBlpE,GAAK,SAAS,IAGjCwpE,IAAsBjkE,EAAAA,EAAAA,IAAgB,CAACsX,EAAuB4sD,KAC7D5sD,EAAS6sD,WAIdT,IAAK9M,EAAAA,EAAAA,GAAet/C,EAASA,SAAU4sD,GAASzpE,GAAKypE,EAAS,OAAS,aAHrEpC,EAAuB,CAAEkC,YAAa1sD,EAASA,SAAUswB,OAAQA,EAASrvB,KAAM,YAGC,IAGrF,GAAKpf,IAAQA,EAAKmiD,gBAAiB4J,GAAWiY,GAyD9C,OACE/gE,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aACZmnE,GACCnlE,EAAAA,GAAAC,cAAA,OAAKjC,UDpSmD,YCqStDgC,EAAAA,GAAAC,cAAA,MAAIjC,UDrSoF,YCqS3CK,GAAK,mBAClD2B,EAAAA,GAAAC,cAAA,QAAMjC,UDtS0H,YCuS7HK,GAAK,cAAe8mE,EAAgB1kB,aAAc,MAErDzgD,EAAAA,GAAAC,cAAC+nE,EAAAA,EAAI,CACHlrE,OAAQqoE,EAAgB1nE,GACxBwqE,UAAW,EACXC,cAAeC,EAAAA,EAAmB/0B,KAClCg1B,WAAS,EACTC,iBAAkBrC,GAClBhoE,UD/S+J,cCmTpKN,QAAQ6pE,IAAiBnnE,SAExBJ,EAAAA,GAAAC,cAACkoD,EAAAA,EAAQ,CAAC/oC,KAAK,QAAQ+gD,WAAS,EAACE,QAAM,EAAC1wD,QAAM,EAACxP,QAASsnE,IACtDznE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,QAAQ0D,IAAI,QAAQ6lE,IACpCvnE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,GAAK,WAGpCuoE,IAAmB0B,GAAgB1B,IACnC3jB,GAAevlD,QAAQulD,EAAY7iD,SAClCJ,EAAAA,GAAAC,cAACkoD,EAAAA,EAAQ,CACP/oC,KAAK,OACL+gD,WAAS,EACTE,QAAM,EACND,UAAQ,EACRmI,gBAAc,GAEdvoE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,mCAAmC0D,IAAI,SAEnD2N,EAAAA,EAAAA,GAAW4zC,EAAa,CACtB,KACA0jB,GAAuB,QAAU,WACjC,WAIN3mE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,GAAK46C,EAAS,UAAY,UAGzD6tB,KAAwBJ,IAAe4B,GAAgBxB,IAAqB,KACzEA,IAAuBnC,GAAmB+B,KAAgBp3C,IAC5DtvB,EAAAA,GAAAC,cAACkoD,EAAAA,EAAQ,CACP/oC,KAAK,OACL+gD,WAAS,EACTE,QAAM,EACN1wD,QAAM,EAENxP,QAASA,IAAMmnE,GAAKh4C,GAAMjxB,GAAK,uBAE/B2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,SAASsxB,IACxBtvB,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,GAAK,uBAGpCyiE,IACC9gE,EAAAA,GAAAC,cAACuoE,EAAY,CAAC9mD,IAAK8pB,EAAQs1B,SAAUA,GAAU7tC,KAAMA,EAAO8tC,aAAcA,KAE1EA,GACA/gE,EAAAA,GAAAC,cAACkoD,EAAAA,EAAQ,CAAC/oC,KAAK,SAASzP,QAAM,EAACxP,QAASgnE,IACtCnnE,EAAAA,GAAAC,cAAA,YAAO5B,GAAK,kBACZ2B,EAAAA,GAAAC,cAACwoE,EAAAA,EAAQ,CACPhrE,GAAG,sBACH2+C,MAAOnD,EAAS,4BAA8B,4BAC9CkD,QAAS8pB,GACT7d,UAAQ,KAIb2d,IACC/lE,EAAAA,GAAAC,cAACyoE,EAAa,CAAC5K,cAAeiI,KAE/BD,IACC9lE,EAAAA,GAAAC,cAACkoD,EAAAA,EAAQ,CACP/oC,KAAK,WACLzP,QAAM,EACNwwD,WAAS,EACTE,QAAM,EACNrV,aAAcwb,GACdrmE,QAAS6mE,IAEThnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,SAAS8nE,GAAiBmB,SACzCjnE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YAAYK,GAAK,6BAGpC2mE,IAAqBjE,GACpB/gE,EAAAA,GAAAC,cAACkoD,EAAAA,EAAQ,CAAC/oC,KAAK,iBAAiBzP,QAAM,EAACxP,QAASknE,IAC9CrnE,EAAAA,GAAAC,cAAA,YAAO5B,GAAK,uBAjJpB,SAASiqE,GAAgBK,EAA6Bb,GACpD,MAAOnoB,KAAiBipB,GAAkBD,EAEpCE,EAAgBD,EAAexoE,OAChC/B,GAAK,eAAgB,eACrBgkE,MAAM,KACNhjE,KAAKypE,GACU,cAANA,EACN9oE,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACG+3D,EAAevpE,KAAI,CAAC6b,EAAU6tD,IAE3B/oE,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACGk4D,EAAM,EAAI,KAAO,GAClB/oE,EAAAA,GAAAC,cAAA,KACEyhB,IAAKxG,EAASA,SACdvH,MAAM6mD,EAAAA,EAAAA,GAAet/C,EAASA,UAAU,GACxC+7B,YAAasL,EAAAA,EACbpiD,QAAUuN,KACR60C,EAAAA,EAAAA,GAAU70C,GACVm6D,GAAoB3sD,EAAU4sD,EAAO,EAEvC9pE,UAAU,mCAETw8D,EAAAA,EAAAA,GAAet/C,EAASA,eAMjC4tD,SAENtrE,EAEJ,OACEwC,EAAAA,GAAAC,cAACkoD,EAAAA,EAAQ,CACP/oC,KAAM0oD,EAAS,OAAS,UACxB3H,WAAS,EACTE,QAAM,EACN1wD,QAAM,EAENxP,QAASA,KACP0nE,GAAoBloB,EAAcmoB,EAAO,GAG3C9nE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,QAAQ0D,IAAI,SAAQ84D,EAAAA,EAAAA,GAAe7a,EAAazkC,SAAU4sD,IAC1E9nE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,YACb6qE,GAAiB7oE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,mBAAmB6qE,GACpDxqE,GAAKypE,EAAS,OAAS,aAIhC,CAiGQ,I,oHChYV,QAA6C,WCgF7C,GAAeprE,EAAAA,EAAAA,KAvDyBqB,IAMlC,IANmC,SACvCo0C,EAAQ,SACR4mB,EAAQ,UACR/6D,EAAS,aACTgrE,EAAY,QACZC,GACDlrE,EACC,MAAMmrE,GAAc3mE,EAAAA,EAAAA,IAAsB4vC,EAAS7J,YAE7C6gC,GAAmB7mE,EAAAA,EAAAA,GAAUy2D,OAAyBv7D,EAAd0rE,GAExCE,GAAkBzqE,EAAAA,EAAAA,KAAQ,IACzB0kE,EAAAA,GACEh5D,MAAMgN,KAAK,CAAEjX,OAfF,IAe2Bf,KAAI,IA4CrD,WAAmD,IAAnB2pE,EAAYl/D,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,GAC7C,MAAMoC,GAAK88D,EAAe,EAAI1+D,KAAKm4D,SAAWuG,EAAe,IAAM1+D,KAAKm4D,SAAW,GAAM,GAAK,GACxFt2D,EAAI68D,EAAe1+D,KAAKm4D,SAAWuG,EAAe,EAExD,MAAQ,eAAc98D,MAAMC,EAAI68D,KAAgB98D,KAAKC,GACvD,CAjD2Dk9D,CAAuBL,KADxC,IAErC,CAACA,IAEJ,GAAKG,GAAqBpQ,EAI1B,OACE/4D,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GD/CM,WC+CsBlC,GACvCgG,OAAOC,EAAAA,EAAAA,GAAWvG,QAAQsrE,IAAkB,oBAAmBA,QAE9DI,EAAM/pE,KAAI,CAACsgB,EAAMpe,KAChB,MAAMyC,EAAS,wBAAuB2b,OACtC,OAAIo5C,EAEA/4D,EAAAA,GAAAC,cAAC+Y,EAAAA,EAAW,CACVsvB,WAAY6J,EAAS7J,WACrBtqC,UAAWmG,EACXH,MAAOA,EACPslE,qBAAmB,EACnBhpE,KAAM0oE,EACNvnE,eAAsB,IAANF,EAAU0nE,OAAUzrE,IAMxCwC,EAAAA,GAAAC,cAAA,OACEiE,IAAKilE,EACLtwD,IAAI,GACJ7a,UAAWmG,EACXH,MAAOA,EACPI,WAAW,EACX3C,eAAsB,IAANF,EAAU0nE,OAAUzrE,GACpC,IAGF,G,iOC5EV,SAAgB,KAAO,WAAW,gBAAgB,WAAW,aAAe,WAAW,OAAS,WAAW,UAAY,WAAW,eAAiB,YCgD7I+rE,EAAY,IAAMrsB,EAAAA,EAElBssB,EAAc,IAAMtsB,EAAAA,EAEpBusB,EAAoBvsB,EAAAA,EAiK1B,GAAexgD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAsB,IAApB,YAAEmzC,GAAanzC,EACtB,MAAM,oBAAEoqE,EAAmB,UAAEr1C,GAAcz3B,GACrC,gBAAE+sE,IAAoBvsE,EAAAA,EAAAA,KAAeR,GAErCgtE,GAAcC,EAAAA,EAAAA,KAA+BjtE,EAAQ,mBAE3D,MAAO,CACL+sE,gBAAiBA,IAAkBl3B,GACnCre,mBAAoBC,EAAUD,mBAC9B01C,eAAgBJ,EAChBE,cACD,GAZejtE,EA/JUoB,IAgBD,IAhBE,YAC7B00C,EAAW,SACXN,EAAQ,UACRn0C,EAAS,KACTsC,EAAOipE,EAAS,WAChBQ,EAAaP,EAAW,gBACxBG,EAAe,mBACfv1C,EAAkB,eAClB01C,EAAc,YACdF,EAAW,eACXzyB,EAAc,YACd6yB,EAAW,WACXvG,EAAU,UACV1Q,EAAS,gBACTkX,EAAe,oBACfxwB,GACsB17C,EACtB,MAAM,mBAAEmsE,IAAuB9rE,EAAAA,EAAAA,MAGzB2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7BswD,EAAW,eAAgB/e,EAE3Bgf,GAAoBxyD,EAAAA,EAAAA,KAAQ,IAChCy1B,GAAoB7T,MAAM4pD,IAAM9Y,EAAAA,EAAAA,IAAe8Y,EAAEh4B,SAAUA,MAC1D,CAAC/d,EAAoB+d,IAClBi4B,EAAejZ,GAAmBkZ,YAAY5sE,IAE9C,YAAEs6D,IAAgBC,EAAAA,EAAAA,GAAe9G,EAAW/e,EAAS7J,gBAAa9qC,GAElE8sE,GAAmB3rE,EAAAA,EAAAA,KAAQ,KAC/B,IAAKuyD,EAAU,OAAOC,GAAmBoZ,iBAAiB9sE,GAE1D,IAAKs6D,EAAa,OAClB,MAAMyS,EAAap2C,GAAoB7T,MAAM6wC,GAAcA,EAAUjf,SAASzW,WAAaq8B,EAAY55B,SACnGosC,iBAAiB9sE,GACrB,OAAO+sE,CAAU,GAChB,CAACrZ,EAAmB/8B,EAAoB2jC,EAAa7G,IAElDuZ,GAAW9rE,EAAAA,EAAAA,KAAQ,KACvB,GAAI2rE,EACF,OAAOA,EAGT,IAAKR,GAAgBx0C,SACnB,OAGF,MAAM,SAAEA,GAAaw0C,EAGrB,OAAOx0C,EAFahrB,KAAKgiC,MAAMhiC,KAAKm4D,SAAWntC,EAASl1B,SAE3B3C,EAAE,GAC9B,CAAC6sE,EAAkBR,IAEhBnvB,GAAiBC,EAAAA,EAAAA,IAAkB71C,EAAK00C,GAExCixB,EAAsBN,GAAiB,UAASA,IAChDO,EAAkBF,GAAa,UAASA,IAExCG,GAAsBtoE,EAAAA,EAAAA,GAASooE,GAAsBN,GACrDS,GAAkBvoE,EAAAA,EAAAA,GAASqoE,GAAkBF,GAE7CK,GAAiBnsE,EAAAA,EAAAA,KAAQ,IAC7BgrE,GAAiBppD,MAAMwqD,IAAW1Z,EAAAA,EAAAA,IAAe0Z,EAAQ54B,MACxD,CAACw3B,EAAiBx3B,IAEf64B,EAAmBttE,QACvBksE,GAAekB,IAAmB5Z,GAAY0Z,IAAwBC,GAElEI,EAAmBtwB,IAAoBqwB,IAAqB7zB,GAAmBssB,IAEnF/jE,aAAcwrE,EACdvrE,qBAAsBwrE,IACpBvrE,EAAAA,EAAAA,GAAkBorE,OAAkBxtE,GAAW,EAAM,SAEvDkC,aAAc0rE,EACdzrE,qBAAsB0rE,KACpBzrE,EAAAA,EAAAA,GAAkBqrE,OAAkBztE,GAAW,EAAM,QAEnD8tE,IAAc1nE,EAAAA,EAAAA,IAAgB,KAClCsmE,EAAmB,CAAEz3B,cAAaN,YAAW,KAGxCo5B,GAAmBC,GAAqBC,KAAyBzqE,EAAAA,EAAAA,KAClE0qE,KAAoBxa,GAAc+Z,GAAqBM,KAE3D7rE,aAAcisE,GACdhsE,qBAAsBisE,KACpBhsE,EAAAA,EAAAA,GAAkB8rE,QAAkBluE,GAAW,GAE7CquE,IAAgB3rE,EAAAA,EAAAA,GACpBiE,EAAOuN,KACPw5D,GAAsB/mE,EAAO2nE,UAC7B30B,GAAkBhzC,EAAOgzC,eACzBn5C,GAGF,OACEgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAW6tE,GAAe9mE,IAAKA,IAChCoyC,GAAkBw0B,IAClB3rE,EAAAA,GAAAC,cAAC8rE,EAAAA,EAAmB,CAClB/tE,UAAW4tE,GACXz5B,SAAUA,EACV/d,mBAAoBA,EACpB9zB,KAAMA,EACNm5C,oBAAqBA,KAGvBtC,GAAkB+Z,GAClBlxD,EAAAA,GAAAC,cAAC+Y,EAAAA,EAAW,CACVsvB,WAAY6J,EAAS7J,WACrBtqC,UAAWmG,EAAO4zD,YAClBz3D,KAAMA,EACN0rE,OAAQhC,EACRjX,UAAWA,EACXyQ,aAAcyG,EACdvY,8BAA+BjY,IAGlC2xB,IAAuBla,GACtBlxD,EAAAA,GAAAC,cAACgsE,EAAAA,EAAe,CACdvqD,IAAM,GAAE0oD,KAAgB9pE,IACxBtC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAO+nE,aAAcb,IAC/C/qE,MAAM6rE,EAAAA,EAAAA,IAjIe,IAiII7rE,GACzBoC,OAAQkoE,EACRwB,KAAMzxB,IAAmBqvB,EACzB55D,QAASqzD,EACTD,aAAcyG,EACd5lE,OAAQmnE,GACRvC,QAASwC,KAGZP,GACClrE,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAACgsE,EAAAA,EAAe,CACdvqD,IAAM,GAAE+oD,KAAYV,IACpB/rE,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAOkoE,OAAQlB,GACzC7qE,KAAMypE,EACNrnE,OAAQmoE,EACRuB,KAAMzxB,EACNvqC,QAAM,EACNozD,aAAcyG,EACdhB,QAASqC,KAEVpa,IAAaoZ,GAAoB3vB,GAChC36C,EAAAA,GAAAC,cAACqsE,EAAAA,EAAiB,CAChBn6B,SAAUA,EACVn0C,UAAWmtE,EACXnC,aAAc1+D,KAAK2B,IAxJM,GAwJF3L,EAAuCmpE,GAC9DR,QAASqC,MAKb,I,wECzMV,MAQA,EAR4C1pE,IAC1C,MAAM,OAAEqgB,GAAWrgB,EACb2qE,GAAkBvtD,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,mBAAoB+C,GAG3E,OAAOsqD,EAAkBvsE,EAAAA,GAAAC,cAACssE,EAAoB3qE,QAAYpE,CAAS,C,wECLrE,MAQA,EAR0CoE,IACxC,MAAM,OAAEqgB,GAAWrgB,EACb4qE,GAAgBxtD,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,iBAAkB+C,GAGvE,OAAOuqD,EAAgBxsE,EAAAA,GAAAC,cAACusE,EAAkB5qE,QAAYpE,CAAS,C,0VCbjE,QAA0E,WCiC1E,GAAed,EAAAA,EAAAA,KArBsBqB,IAI/B,IAJgC,WACpC2H,EAAU,SACVvI,EAAQ,SACRmK,GACDvJ,EACC,OACEiC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GDlBG,WCoBjB/C,GDpB8G,WCqB9GuI,IAAe4B,GDrB2E,aCwB1FtH,EAAAA,GAAAC,cAAA,OAAKjC,UDxBmC,YCyBtCgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,IAChBnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,IAChBnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,KAEd,ICqYV,GAAezH,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAEW,IAFT,OACPxC,EAAM,cAAE46C,EAAa,UAAE0wB,EAAS,iBAAEC,GACnC/oE,EACC,MAAMvC,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAChC,IAAKC,EACH,MAAO,CACL+0B,cAAel1B,EAAOk1B,eAI1B,MAAM26C,EAAgBpE,IAAoBqE,EAAAA,EAAAA,KAAwB9vE,EAAQE,EAAQ46C,EAAgB,QAAU,OACtG4kB,EAAc+L,GAChBphD,EAAAA,EAAAA,KAAkBrqB,EAAQE,EAAQurE,IAClC9L,EAAAA,EAAAA,KAAsB3/D,EAAQE,EAAQ46C,EAAgB,QAAU,QAC9D,SAAEi1B,EAAQ,WAAEC,EAAU,YAAErjD,GAAgB+yC,GAAe,CAAC,EACxDuQ,EAAiBn1B,EAAgBnuB,GAAaujD,OAASH,EACvDI,EAAmBzQ,IAAe0Q,EAAAA,EAAAA,GAAoB1Q,IAAcnzC,aACpE8jD,EAAoBJ,GAAiBvjD,EAAAA,EAAAA,KAAW1sB,EAAQiwE,QAAkBrvE,EAC1E0vE,EAAoB5Q,GAAc6Q,EAAAA,EAAAA,IAAiB7Q,QAAe9+D,EAClE4vE,EAAsBF,GAAqBH,GAC7C9lD,EAAAA,EAAAA,KAAkBrqB,EAAQG,EAAKU,GAAIsvE,QACnCvvE,GACI6vE,cAAeC,EAAqBC,aAAcC,GAAuBN,GAAqB,CAAC,EACjGO,GAAoB71B,EAAAA,EAAAA,IAAqB76C,IAG7CD,OAAQ4wE,EACR3tD,SAAU4tD,EACVxxD,KAAM0L,IACJb,EAAAA,EAAAA,KAAyBpqB,IAAW,CAAC,EACnC8I,GAAc0iE,GAAatrE,IAAW4wE,IAAkBh2B,EAC1D56C,IAAW6wE,EAAkBA,IAAoB35C,EAAAA,IAC/C45C,EAAmB7wE,EAAK+2B,SAAWh3B,IAAW4wE,GAC/C5wE,KAAWM,EAAAA,EAAAA,KAAeR,GAAQixE,iBAEjC56C,EAAOw6C,GAAoBz7C,EAAAA,EAAAA,KAAWp1B,EAAQ6wE,QAAqBjwE,EACnEmtD,EAAa8iB,GAAoB7iB,EAAAA,EAAAA,KAAiBhuD,EAAQ6wE,QAAqBjwE,EAC/EswE,EAAmBxR,IAAeroC,EAAAA,EAAAA,KAAuBr3B,EAAQ0/D,GAEjEze,GAAekwB,EAAAA,EAAAA,KAAkBnxE,EAAQE,EAAQk3B,EAAAA,GAAgB,gBAEvE,MAAO,CACLj3B,OACAonE,SAASC,EAAAA,EAAAA,IAAkBrnE,GAAMsnE,EAAAA,EAAAA,KAAqBznE,IAAS0nE,EAAAA,EAAAA,KAAuB1nE,IACtFqwE,oBACAK,sBACAE,qBACAJ,sBACAxkD,OAAOC,EAAAA,EAAAA,KAAYjsB,EAAQE,EAAQk3B,EAAAA,IACnCtuB,aACAkoE,kBACAI,kBAAkBC,EAAAA,EAAAA,KAAuBrxE,GACzCsxE,cAAexoE,GAAkC,WAApBmiB,EAC7BsmD,iBAAkBvxE,EAAOwxE,YAAYC,YAAYjuE,QAAU,GAAK,KAC5DwsE,GAActQ,GAAe,CAC/BgS,2BAA2BC,EAAAA,EAAAA,KAAqB3xE,EAAQ0/D,IAE1DrpC,OACA03B,aACAmjB,mBACAjwB,eACA2wB,yBAAyBttE,EAAAA,EAAAA,KAA0BtE,GACnD0/D,cACAmQ,gBACA36C,cAAel1B,EAAOk1B,cACvB,GAlEen1B,EAjToBoB,IAkClC,IAlCmC,OACvCjB,EAAM,SACN2xE,EAAQ,UACRxG,EAAS,cACTC,EAAa,SACbwG,EAAQ,oBACRj1B,EAAmB,KACnB18C,EAAI,QACJonE,EAAO,KACPlxC,EAAI,WACJ03B,EAAU,oBACV2iB,EAAmB,kBACnBL,EAAiB,0BACjBqB,EAAyB,oBACzBlB,EAAmB,mBACnBI,EAAkB,UAClBmB,EAAS,MACT/lD,EAAK,wBACL4lD,EAAuB,WACvB9oE,EAAU,gBACVkoE,EAAe,iBACfI,EAAgB,cAChBE,EAAa,gBACbC,EAAe,iBACfL,EAAgB,aAChBjwB,EAAY,cACZ4uB,GAAa,YACbnQ,GAAW,cACX5kB,GAAa,cACb5lB,GAAa,UACbs2C,GAAS,iBACTC,GAAgB,UAChBrqE,GAAS,YACT4wE,IACD7wE,EACC,MAAM,SACJ8wE,GAAQ,gBACRrJ,GAAe,eACfsJ,GAAc,iBACdC,GAAgB,aAChBnkD,GAAY,WACZokD,GAAU,eACVC,GAAc,gBACdC,GAAe,0BACfC,KACE/wE,EAAAA,EAAAA,OAEE,SAAEkJ,KAAaC,EAAAA,EAAAA,OACd+4B,GAAmBC,GAAiBC,KAAoBx/B,EAAAA,EAAAA,MACxDouE,GAAiBC,GAAeC,KAAkBtuE,EAAAA,EAAAA,MAClDuuE,GAAuBC,GAAqBC,KAAwBzuE,EAAAA,EAAAA,MACpE0uE,GAAmBC,GAAiBC,KAAoB5uE,EAAAA,EAAAA,MACxD6uE,GAAyBC,GAAuBC,KAA2B/uE,EAAAA,EAAAA,MAC3EgvE,GAAuBC,GAAqBC,KAAyBlvE,EAAAA,EAAAA,MACrEmvE,GAA6BC,GAA2BC,KAA+BrvE,EAAAA,EAAAA,MACvFsvE,GAAyBC,GAAuBC,KAA2BxvE,EAAAA,EAAAA,MAE5E,QAAE8yB,GAAO,kBAAEC,IAAsBh3B,GAAQ,CAAC,GAEhD0zE,EAAAA,EAAAA,GAAiB/4B,GAAgB5lB,GAAgBh1B,EAAQ2vE,GAAenQ,IAExE,MAAM,eAAEoU,GAAc,IAAE3rE,KAAQ4rE,EAAAA,EAAAA,GAAiB,CAC/C5zE,OACAD,SACAw/D,eACAze,eACAj1B,QACAwkD,sBACAE,sBACAE,qBACAM,mBACAb,oBACAxzB,sBACAyuB,gBACAsG,0BACAvG,YACAvwB,iBACA0wB,eAGIwI,IAAwBnS,EAAAA,EAAAA,GAAkBoS,EAAAA,KAE1C3vD,IAActd,EAAAA,EAAAA,IAAgB,KAClC,MAAMwoB,EAAoB9kB,IAAYysB,GAMtC,GAJIzsB,IACF6nE,GAA0B,CAAExtB,OAAO,IAGjCymB,GACFx9C,GAAa,CACX9tB,SACAwR,UAAW+5D,SAHf,CAQA,GAAI3wB,GAMF,OALA8tB,GAAgB,CAAE1oE,SAAQsvB,mBAAmB,GAAQ,CAAE0kD,uBAAuB,SAE1ExpE,IACFwnE,GAAe,CAAEiC,OAAO,KAK5B,GAAIj9C,GAAS,CACX,GAAIk6C,EAGF,YAFAkB,QAAgB1xE,EAAW,CAAEszE,uBAAuB,IAQpD,GAJK1kD,GACH6iD,GAAe,CAAEnyE,UAAU,CAAEg0E,uBAAuB,KAGjD/8C,GAAmB,MAE5B,CAEA86C,GAAS,CAAEpxE,GAAIX,EAAQsvB,oBAAmBme,sBAAsB,GAAQ,CAAEumC,uBAAuB,IAE7FprE,GAAcwoE,GAChBa,IA5BF,CA6BA,IAGIiC,IAAkBptE,EAAAA,EAAAA,IAAiB8J,IACvCA,EAAE4L,iBACFs1D,KAAc9xE,EAAO,IAGjBm0E,IAAertE,EAAAA,EAAAA,IAAgB,KACnCksE,KACAvvC,IAAiB,IAGb2wC,IAAattE,EAAAA,EAAAA,IAAgB,KACjCqsE,KACAZ,IAAe,IAGX8B,IAAyBvtE,EAAAA,EAAAA,IAAgB,KAC7CwsE,KACAZ,IAAqB,IAGjBnd,IAAezuD,EAAAA,EAAAA,IAAgB,KACnC2sE,KACAZ,IAAiB,IAGbyB,IAAiBC,EAAAA,EAAAA,GAAsB,CAC3Ct0E,OACAk2B,OACAg+C,gBACAC,cACAC,0BACA9e,gBACAoc,WACAC,WACAvK,UACAgK,kBACAz2B,iBACA5lB,iBACAs2C,eAGIztB,IAAiBC,EAAAA,EAAAA,IAAkB71C,GAAKhI,EAAO08C,OAAsBj8C,IAG3EgC,EAAAA,EAAAA,KAAU,KACJm7C,IAAkB7mB,IAAW/2B,QAAgCS,IAAxBT,EAAKu0E,gBAC5CtC,GAAW,CAAElyE,UACf,GACC,CAACC,EAAMD,EAAQg3B,GAAS6mB,KAE3B,MAAM42B,GAAWt+C,GAAQ03B,IAAca,EAAAA,EAAAA,IAAav4B,EAAM03B,IAClD6mB,cAAeC,KAAwB7xE,EAAAA,EAAAA,GAAkB2xE,IAE3D59D,IAAOhV,EAAAA,EAAAA,KAAQ,KACnB,GAAK+yE,EAAAA,GAEL,OAAIh6B,GACM,KAAGi6B,EAAAA,EAAAA,IAAmB7/C,GAAe,SAAUh1B,KAGjD,KAAG60E,EAAAA,EAAAA,IAAmB70E,EAAQ,SAAUk3B,EAAAA,KAAiB,GAChE,CAACl3B,EAAQg1B,GAAe4lB,KAE3B,IAAK36C,EACH,OAGF,MAAM4U,GAAOshB,GAAQl2B,EAEf60E,IAAgB1xE,EAAAA,EAAAA,GACpB,4BACAwwB,EAAAA,EAAAA,IAAS5zB,GAAU,UAAY,QAC/Bg3B,IAAW,QACXpuB,GAAc,WACdkoE,GAAmB,iBACnBxF,IAAa,aACbpqE,IAGF,OACEgC,EAAAA,GAAAC,cAACkoD,EAAAA,EAAQ,CACPpjD,IAAKA,GACL/G,UAAW4zE,GACXj+D,KAAMA,GACN3P,MAAQ,QAAO2qE,MACfh/D,QAASmkB,KAAYxsB,GACrB8pE,eAAgBA,GAChBjxE,QAAS+gB,GACT0tD,YAAaoC,GACba,mBAAiB,GAEjB7xE,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAU,qBACvCF,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACLD,KAAMA,GACN0jC,gBAAiBpiB,GAAM61B,OACvBpR,cAAeA,GACf8G,WAAYvrB,GAAM61B,OAClBgpB,aAAcL,GACdhzB,kBAAmBszB,EAAAA,GAAkBC,SACrCnyB,gBAAgB,gBAElB7/C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,wBACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBuxE,IAAuB,yBACvEzxE,EAAAA,GAAAC,cAACgyE,EAAAA,EAAS,CAACl1E,KAAMA,EAAMonE,QAASA,EAAS+N,6BAA2B,EAACC,YAAavB,MAEnF7zE,EAAKe,cAAgBf,EAAKc,gBACzBmC,EAAAA,GAAAC,cAACmyE,EAAc,CAAC9qE,SAAUA,GAAU5B,WAAYA,EAAYvI,SAAUqxE,KAG1ExuE,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAC8/C,EAAAA,EAAa,CACZpuC,KAAMA,GACNquC,iBAAe,EACf3K,gBAAiBv4C,IAAWm2B,GAAMx1B,IAAMw1B,GAAM61B,OAC9CpR,cAAeA,GACf+B,oBAAqBA,IAEtB0qB,IAAYzsB,IAAiB13C,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBAC3CgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,cACds+D,IACCt8D,EAAAA,GAAAC,cAACoyE,EAAAA,EAAe,CACdltE,QAASm3D,GACTzb,eAAiBnJ,QAA4Cl6C,EAA5B8wE,EACjCxtB,UAAWl4B,GAAOrjB,QAIxBvF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACZ0yE,MACCtI,IACApoE,EAAAA,GAAAC,cAACgyE,EAAAA,EAAS,CACRl1E,KAAMA,EACN2xE,SAAUA,EACVvK,QAASA,EACTzsB,cAAeA,OAKtBm4B,IACC7vE,EAAAA,GAAAC,cAACqyE,EAAAA,EAAe,CACdrwD,OAAQqe,GACRje,QAASme,GACTle,oBAAqBytD,GACrBhzE,KAAMA,EACN26C,cAAeA,KAGlBs4B,IACChwE,EAAAA,GAAAC,cAACusE,EAAAA,EAAa,CACZvqD,OAAQmtD,GACR/sD,QAASitD,GACThtD,oBAAqB4tD,GACrBpzE,OAAQA,IAGXqzE,IACCnwE,EAAAA,GAAAC,cAACssE,EAAAA,EAAe,CACdtqD,OAAQstD,GACRltD,QAASotD,GACTntD,oBAAqB+tD,GACrBvzE,OAAQA,IAGXwzE,IACCtwE,EAAAA,GAAAC,cAACsyE,EAAAA,EAAW,CACVtwD,OAAQytD,GACRrtD,QAASutD,GACTttD,oBAAqBkuD,GACrBhlC,OAAQ1uC,EACR80D,QAAQ,SAGH,I,oHCnYf,MA8GA,GAAel1D,EAAAA,EAAAA,KA9GiBqB,IAE1B,IAF2B,MAC/B0/C,EAAK,KAAE1gD,EAAI,SAAE2xE,EAAQ,QAAEvK,EAAO,4BAAE+N,EAA2B,eAAEM,EAAc,YAAEL,EAAW,cAAEz6B,GAC3F35C,EACC,MAAM,oBACJ00E,EAAsB,EAAC,qBAAEC,EAAuB,GAC7C31E,EAAK+2B,QAAiB,CAAC,EAAR/2B,EAEd41E,GAAmBjE,GAAYjxB,IAAU+0B,EACzC1+C,EAAU/2B,EAAK+2B,UAAY2pB,EAC3Bm1B,GAAmBj0E,EAAAA,EAAAA,KAAQ,IAC/Bm1B,GAAW/2B,GAAM2gD,OAASx+C,OAAOC,OAAOpC,EAAK2gD,QAAQn+C,QAAOD,IAAA,IAAC,YAAEuzE,GAAavzE,EAAA,OAAKuzE,CAAW,SAAIr1E,GAC/F,CAACT,EAAM+2B,IAEJ++C,GAAcl0E,EAAAA,EAAAA,KAAQ,IAC1Bm1B,EAEMqwC,GAAWyO,GAAkBrzE,QAAQ4e,IAAwB,IAAhBA,EAAIgmD,UAAmB/jE,QACnEwyE,GAAkBxyE,QACpBq9C,GAAS1gD,GAAM81E,aACnB,CAAC91E,EAAM0gD,EAAOm1B,EAAkB9+C,EAASqwC,IAEtC2O,GAAgBn0E,EAAAA,EAAAA,KAAQ,KAC5B,MAAMo0E,EAAyBh2E,EAAK2gD,QAC/Bx+C,OAAOC,OAAOpC,EAAK2gD,QAAQ5zB,MAAM3L,IAASA,EAAIgmD,SAAWhmD,EAAI00D,cAElE,OAAO1O,GAAYpnE,EAAK2gD,SAAWq1B,CAAuB,GACzD,CAACh2E,EAAMonE,IAEJ6O,GAAgBv1B,GAAgB1gD,EAAKi2E,cAMrC1nD,IAJsBkE,EAAAA,EAAAA,IAC1B,KAAOyjD,EAAAA,EAAAA,IAASd,GAAeA,IAAgBA,GAC/C,CAACA,KAEqCz0E,QACtCm1E,GAAeJ,GAAuBO,GAAiBtE,GAAYgE,GAChEC,GAGCO,EAAWx1E,SAASm1E,GAAeG,KAAmBt7B,GACtD15C,GAAYkC,EAAAA,EAAAA,GAChB,YACA4yE,GAAiB,SAChBI,GAAYxE,GAAY,SACzBwE,GAAY,UA2Dd,OACElzE,EAAAA,GAAAC,cAACkzE,EAAAA,EAAc,CAACjiB,UAAQ,EAAClzD,UAAU,uBAAuBikB,OAAQqJ,GAzDpE,WACE,MAAM8nD,EAAyBV,GAC7B1yE,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,qBAAsB4yE,GAAiB,UACpE9yE,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAIXq1E,EAAwBZ,GAC5BzyE,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,qBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBAIXs1E,EAAuBX,GAC3B3yE,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,qBAAsB4yE,GAAiB,WAGlES,EAAsBP,GAAiBH,EAC3C7yE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWA,IACZg1E,GAAiBhzE,EAAAA,GAAAC,cAACuzE,EAAAA,EAAe,CAAC9yE,MAAM+yE,EAAAA,EAAAA,IAAqBZ,WAE/Dr1E,EAEEk2E,EAAgBhF,GACpB1uE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWA,GACdgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,2BAOXsD,EAAW,CACfgyE,EAAsBF,EAAwBC,EAAuBE,GAJzCA,IAAuBF,IAA0BD,GAC1EM,GAIHn0E,OAAO7B,SAET,OAAIg6C,EAAsBg8B,EAEF,IAApBpyE,EAASlB,OAEW,IAApBkB,EAASlB,OAAqBkB,EAAS,GAEvC4wE,EACgC,CAChCmB,EAAuBE,EAAoBH,EAAwBM,GACnEn0E,OAAO7B,SACwB,GAIjCsC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,qBACZsD,QAbL,CAgBF,CAIKqyE,GACc,G,2UCrIrB,SAAgB,KAAO,WAAW,UAAY,WAAW,OAAS,WAAW,MAAQ,WAAW,eAAe,WAAW,YAAc,WAAW,KAAO,WAAW,KAAO,WAAW,KAAO,WAAW,cAAgB,WAAW,OAAS,WAAW,aAAe,YAAY,OAAS,YCoK5R,GAAej3E,EAAAA,EAAAA,KAxIeqB,IAIxB,IAJyB,gBAC7B61E,EAAe,YACfhF,EAAW,QACXzuE,GACDpC,EACC,MAAM,sBAAE81E,IAA0Bz1E,EAAAA,EAAAA,MAC5BC,GAAOC,EAAAA,EAAAA,KAEPw1E,GAAiBC,EAAAA,EAAAA,IAA8BC,EAAAA,KAC/CC,GAAiBC,EAAAA,EAAAA,MACjBC,EAAqBF,EAAeD,EAAAA,MAAqBI,WAEzDC,GAAe11E,EAAAA,EAAAA,KAAQ,KAC3B,IAAKm1E,GAAgB1zE,OAAQ,OAAO/B,EAAK,WAEzC,MAAMW,GAAYH,EAAAA,EAAAA,MAAYI,MAAMF,KAEpC,OAAO+0E,EAAe10E,MAAM,EAnBV,GAmB4BC,KAAI,CAACvC,EAAQyE,EAAG+yE,KAC5D,MAAMhlB,EAAS/tD,IAAM+yE,EAAIl0E,OAAS,EAC5BrD,EAAOiC,EAAUlC,GACvB,IAAKC,EACH,OAGF,MAAMyR,GAAQqqC,EAAAA,EAAAA,IAAax6C,EAAMtB,GAEjC,OACEiD,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAOpH,KAAMo3E,GAAsBp3E,EAAK81E,aAAe1uE,EAAOowE,UAC3FllE,EAAAA,EAAAA,GAAWb,IAEb8gD,EAAS,GAAK,KACd,GAEL,GACD,CAACwkB,EAAgBz1E,EAAM81E,IAEpB/C,GAAiBzyE,EAAAA,EAAAA,KAAQ,KAC7B,MAAM61E,GAAkBZ,EAAgBlrB,aAAe,CACrDl6C,MAAOnQ,EAAK,gCACZ+gB,KAAM,WACNq1D,QAASA,KACPZ,EAAsB,CAAEnrB,aAAa,GAAO,GAI1CgsB,EAAed,EAAgBlrB,aAAe,CAClDl6C,MAAOnQ,EAAK,8BACZ+gB,KAAM,SACNq1D,QAASA,KACPZ,EAAsB,CAAEnrB,aAAa,GAAQ,GAI3CisB,EAAa,CACjBnmE,MAAOnQ,EAAK,+BACZ+gB,KAAM,kBACNq1D,QAASA,KACPZ,EAAsB,CAAEe,UAAU,GAAO,GAI7C,OAAOC,EAAAA,EAAAA,IAAQ,CAACL,EAAgBE,EAAcC,GAAY,GACzD,CAACf,EAAgBlrB,YAAarqD,EAAMw1E,IAEjC7C,GAAkBxyE,EAAAA,EAAAA,KAAakP,IACnCA,EAAE4L,iBACFs1D,KAAe,GACd,CAACA,IAiDJ,OACE5uE,EAAAA,GAAAC,cAACkoD,EAAAA,EAAQ,CACPhoD,QAASA,EACTyuE,YAAaoC,EACbhzE,WAAWkC,EAAAA,EAAAA,GACTiE,EAAOuN,KACPkiE,EAAgBlrB,aAAevkD,EAAO2wE,UACtC,sBACA,qBAEFC,gBAAiB5wE,EAAO+J,OACxBkjE,eAAgBA,EAChBS,mBAAiB,GAEhB+B,EAAgBlrB,YA3DjB1oD,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAO6wE,KAAM,SAC1Ch1E,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,QAASiE,EAAOqK,QAC7CxO,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAO8L,KAAM,aACpDjQ,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAOib,KAAM,OAAQ,yBACjD/gB,EAAK,mBAGV2B,EAAAA,GAAAC,cAACg1E,EAAAA,EAAK,CACJj3E,UAAWmG,EAAO0uE,YAClBnyE,KAAMyzE,GAAqBV,EAAAA,EAAAA,IAAqBU,QAAsB32E,MAS5EwC,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAUiE,EAAO+wE,gBAC9Cl1E,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAUiE,EAAO0N,SAC9C7R,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,+BAGjBgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAO6wE,KAAM,SAC1Ch1E,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,QAASiE,EAAOqK,QAC7CxO,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAO8L,KAAM,aAAc5R,EAAK,oBAG7E2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,SAAUiE,EAAOgxE,eAC7Cd,GAEHr0E,EAAAA,GAAAC,cAACg1E,EAAAA,EAAK,CACJj3E,UAAWmG,EAAO0uE,YAClBnyE,KAAMyzE,GAAqBV,EAAAA,EAAAA,IAAqBU,QAAsB32E,OAuBrE,I,2DChKf,MCsEA,GAAed,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,EAAM0C,KAA2C,IAAzC,SAAEmvE,EAAQ,WAAE2G,GAAY91E,EAGxE,MAAO,CACL+1E,WAHiB5G,GAA2B,WAAf2G,GAA0BE,EAAAA,EAAAA,KAAiB14E,EAAQ6xE,QAAYjxE,EAI5F+3E,eAAeC,EAAAA,EAAAA,KAAoB54E,EAAQ,MAC5C,GANiBD,EAvC2BoB,IAEzC,IAF0C,WAC9Cs3E,EAAU,cAAEE,EAAa,gBAAEE,EAAe,uBAAEC,GAC7C33E,EACC,MAAMM,GAAOC,EAAAA,EAAAA,MACP,SAAEgJ,IAAaC,EAAAA,EAAAA,MAEfouE,GAAmBn3E,EAAAA,EAAAA,KAAY,KACnCi3E,EAAgB,CAAEt5D,KAAM,aAAcmuB,QAAS+qC,IAC/CK,EAAuBE,EAAAA,GAAgBC,8BAA8B,GACpE,CAACR,EAAYI,EAAiBC,IAEjC,OACE11E,EAAAA,GAAAC,cAAA,OAAKjC,UD3Cc,YC4CjBgC,EAAAA,GAAAC,cAAA,OAAKjC,UD5CiC,YC6CnCu3E,GAAiBv1E,EAAAA,GAAAC,cAAC61E,EAAAA,EAAuB,CAACj0E,QAAS0zE,EAAej1E,KAhBzD,MAkBZN,EAAAA,GAAAC,cAAA,MAAIjC,UD/CqD,WC+C5B0D,IAAI,QAAQrD,EAAK,2BAC9C2B,EAAAA,GAAAC,cAAA,KAAGjC,UDhD+E,WCgDhD0D,IAAI,QACnCrD,EAAKg3E,EAAa,mCAAqC,mBAEzDA,GACCr1E,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLmP,QAASrI,EACTyhD,OAAK,EACLgtB,MAAI,EACJ51E,QAASw1E,EACTr1E,KAAK,UACLqB,MAAOtD,EAAKsD,OAEZ3B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UD7D4M,YC8D9MK,EAAK,sCAIR,K,eClEV,QAA4H,WCsE5H,GAAe3B,EAAAA,EAAAA,KArDYqB,IAA6C,IAA5C,SAAEi4E,EAAQ,eAAEC,GAA2Bl4E,EACjE,MAAM,sBAAEm4E,EAAqB,uBAAEC,EAAsB,iBAAEngE,IAAqB5X,EAAAA,EAAAA,MAEtE2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAC7BvC,GAAOC,EAAAA,EAAAA,MAEbisD,EAAAA,EAAAA,GAAkBxlD,GAAMu0D,IACtB,MAAM7tD,EAAS6tD,EAAM8c,gBAAgB,IAAIC,WAAa/c,EAAMC,YAAY9tD,OACxEwqE,EAAexqE,EAAO,IAGxB,MAAM6qE,GAAmB33E,EAAAA,EAAAA,KAAQ,IACxBO,OAAOC,OAAO62E,GAAUvY,MAAK,CAACC,EAAGC,IAAMA,EAAE4Y,YAAc7Y,EAAE6Y,cAC7Dh2D,MAAMi2D,GAAYA,EAAQC,iBAC5B,CAACT,IAEEU,GAAiB/3E,EAAAA,EAAAA,KAAQ,IACtB,CAAC23E,EAAiBK,YAAaL,EAAiBM,OAAQN,EAAiB5uB,SAASnoD,OAAO7B,SAAS+nB,KAAK,OAC7G,CAAC6wD,IAEEO,GAAejzE,EAAAA,EAAAA,IAAgB,KACnCsyE,EAAsB,CACpBxT,KAAM4T,EAAiB5T,KACvBoU,aAAa,GACb,IAGEC,GAAenzE,EAAAA,EAAAA,IAAgB,KACnCuyE,EAAuB,CAAEzT,KAAM4T,EAAiB5T,OAChD1sD,EAAiB,CACfxH,MAAOnQ,EAAK,6BAA8B,GAC1C8G,QAAS9G,EAAK,qCAAsCq4E,IACpD,IAGJ,OACE12E,EAAAA,GAAAC,cAAA,OAAKjC,UDrDqC,WCqDb+G,IAAKA,GAChC/E,EAAAA,GAAAC,cAAA,MAAIjC,UDtDuD,YCsD7BK,EAAK,yBACnC2B,EAAAA,GAAAC,cAAA,KAAGjC,UDvD0E,YCwD1EK,EAAK,wBAAyBq4E,IAEjC12E,EAAAA,GAAAC,cAAA,OAAKjC,UD1D6F,YC2DhGgC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACuoD,OAAK,EAACxP,QAAM,EAACj5C,KAAK,UAAUtC,UAAWmG,EAAehE,QAAS02E,GACpEx4E,EAAK,2BAER2B,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACuoD,OAAK,EAACxP,QAAM,EAACj5C,KAAK,UAAUsP,MAAM,SAASzP,QAAS42E,EAAc/4E,UAAWmG,GAClF9F,EAAK,yBAGN,ICRJ24E,EAAmB,IAAIj0E,IAAI,CAAC,IAAK,MA+NvC,GAAerG,EAAAA,EAAAA,KA7NgBqB,IAYzB,IAZ0B,UAC9BC,EAAS,WACTo3E,EAAU,SACV3G,EAAQ,SACRtxE,EAAQ,iBACR6wE,EAAgB,kBAChBiJ,EAAiB,gBACjBrD,EAAe,SACfoC,EAAQ,gBACRP,EAAe,uBACfC,EAAsB,0BACtBwB,GACDn5E,EACC,MAAM,SACJ8wE,EAAQ,aACRsI,EAAY,gBACZjI,EAAe,kBACfkI,IACEh5E,EAAAA,EAAAA,MAEEs5D,GAAe92D,EAAAA,EAAAA,IAAuB,MACtCy2E,GAAsBz2E,EAAAA,EAAAA,KAAO,IAC5B02E,EAA0BC,IAA+B7vE,EAAAA,EAAAA,IAAS,GAEnE8vE,EAA4B,aAAfpC,EACbqC,EAA6B,QAAfrC,EACdsC,EAAyB,UAAftC,EACVuC,EACJF,EAAcG,EAAAA,IAAgBJ,EAAaxD,EAAAA,IAAqB0D,EAAUG,EAAAA,IAAkBpJ,EAGxFqJ,EAAuBL,GAAeR,GAAqBrD,EAE3DvF,GAAa0F,EAAAA,EAAAA,IAA8B4D,IACjDI,EAAAA,EAAAA,GAAsB1J,GAEtB,MAAM2J,GAAe3J,GAAYjuE,QAAU,GAAK63E,EAAAA,IAC1CC,EAAgBJ,EAClBlE,GAAiBlrB,YAAcyvB,EAAAA,IAA2BF,EAAAA,IAAiB,GAEzE,cAAEG,EAAa,iBAAEC,KAAqBC,EAAAA,EAAAA,GAAajK,IAElDrnB,GAAaC,KAAWC,EAAAA,EAAAA,QAAkB1pD,EAAW6wE,OAAY7wE,EAAW+6E,EAAAA,KAE7EC,IAAgC75E,EAAAA,EAAAA,KAAQ,KAC5C,MAAM85E,EAAgBv5E,OAAOC,OAAO62E,GAAY,CAAC,GAC3C50E,EAAUq3E,EAAcl4D,MAAMi2D,GAAYA,EAAQkC,YACxD,SAAKt3E,IAAWgrC,EAAAA,EAAAA,MAAkBhrC,EAAQm1E,YAAcoC,EAAAA,MAEjDlB,GAAegB,EAAc3uD,MAAM0sD,GAAYA,EAAQC,eAAc,GAC3E,CAACgB,EAAazB,KAEjBx2E,EAAAA,EAAAA,KAAU,KACHg5E,IAA+BjB,EAA4B,EAAE,GACjE,CAACiB,MAGJI,EAAAA,EAAAA,GAAWz7E,GAAYkxE,GAAYjuE,OAAS,CAC1C,cAAgBsN,IACdA,EAAE4L,iBACF69D,EAAa,CAAE0B,kBAAmB,EAAGxK,cAAa,EAEpD,gBAAkB3gE,IAChBA,EAAE4L,iBACF69D,EAAa,CAAE0B,iBAAkB,EAAGxK,cAAa,QAEjD7wE,IAGJgC,EAAAA,EAAAA,KAAU,KACR,GAAKrC,IAAYu6E,GAAYrJ,GAAeyK,EAAAA,GA2B5C,OAFA1mE,SAAS6D,iBAAiB,UAAW8iE,GAE9B,KACL3mE,SAAS+D,oBAAoB,UAAW4iE,EAAc,EAxBxD,SAASA,EAAcrrE,GACrB,IAAMsrE,EAAAA,IAAatrE,EAAEurE,UAAcD,EAAAA,IAAatrE,EAAEwrE,UAAaxrE,EAAEo0D,KAAKn8B,WAAW,SAAU,CACzF,MAAO,CAAE28B,GAAS50D,EAAEo0D,KAAK3qD,MAAM,cAAgB,GAC/C,IAAKmrD,GAAS0U,EAAiBzzE,IAAI++D,GAAQ,OAE3C,MAAM6W,EAAkBrB,GAAwBlE,IAAoBA,EAAgBlrB,YAE9E2U,EAAQ8b,GAAmB,EAAI,EAC/B1tC,EAAWf,OAAO43B,GAASjF,EAAQ,EAEzC,GAAI8b,IAAiC,IAAd1tC,EAErB,YADAyrC,IAA4BkC,EAAAA,GAAkBC,UAIhD,GAAI5tC,EAAW4iC,EAAYjuE,OAAS,EAAG,OAEvCyuE,EAAS,CAAEpxE,GAAI4wE,EAAY5iC,GAAWlB,sBAAsB,GAC9D,CACF,CAMC,GACA,CACDqpC,EAAiB8D,EAASv6E,EAAU+5E,EAA2BrI,EAAUsI,EAAc9I,EACvFyJ,IAGF,MAAM,QAAEwB,KAAYC,EAAAA,EAAAA,IAAwB,CAC1CC,QAAS9hB,EACT+hB,WA/G0B,MAkHtBC,IAAsB91E,EAAAA,EAAAA,IAAgB,KAC1CszE,EAA2BkC,EAAAA,GAAkBC,UAC7CnK,GAAiB,IAGbyK,IAA0B/1E,EAAAA,EAAAA,IAAgB,KAC1CyzE,EAAoBj2E,QACtBi2E,EAAoBj2E,SAAU,EAGhCs4E,IAAqB,IAGjB1I,IAAkB4I,EAAAA,EAAAA,IAAsB98E,IACxCu6E,EAAoBj2E,QACtBi2E,EAAoBj2E,SAAU,EAGhCytE,EAAS,CAAEpxE,GAAIX,EAAQytC,sBAAsB,GAAO,GACnD,CAACskC,GApIsB,KAoIU,GAE9BgL,IAAkBj2E,EAAAA,EAAAA,IAAiB8J,IACvC,MAAMoT,EAAOpT,EAAEqT,cAAcnT,wBACvB1B,EAAIwB,EAAEG,QAAUiT,EAAKnT,KACrBxB,EAAIuB,EAAEk1C,QAAU9hC,EAAKkvB,IACvB9jC,EAAI4U,EAAKtV,OAASW,EAAI2U,EAAK3U,IAC/BkrE,EAAoBj2E,SAAU,EAAI,IAW9B04E,GCpMO,SACbpiB,EACAqiB,EACAC,EACAvrD,GAGA,MAAMwrD,GAAuBr5E,EAAAA,EAAAA,IAAuB,MAE9Cs5E,GAAuBt5E,EAAAA,EAAAA,KAAO,GAC9Bu5E,GAAmBv5E,EAAAA,EAAAA,IAAO,GAC1Bw5E,GAAsBx5E,EAAAA,EAAAA,KAAO,GAC7By5E,GAAiBz5E,EAAAA,EAAAA,KAAO,GACxB05E,GAAkB15E,EAAAA,EAAAA,IAAO,GACzB25E,GAA2B35E,EAAAA,EAAAA,KAAO,GAElC45E,GAA0B52E,EAAAA,EAAAA,IAAgB,WAAiC,IAAhC62E,EAAmB3wE,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAC9DswE,EAAoBh5E,SACnB64E,EAAqB74E,SAAYs2D,EAAat2D,UAEnD64E,EAAqB74E,QAAQ4C,MAAM02E,QAAU,QAC7ChjB,EAAat2D,QAAQu5E,UAxBF,EA0Bdj5C,EAAAA,IAAc+4C,IACjBG,EAAAA,EAAAA,GAAkBljB,EAAat2D,SAGjC84E,EAAqB94E,SAAU,EAC/B+4E,EAAiB/4E,QA/BE,EAgCnBg5E,EAAoBh5E,SAAU,EAC9Bi5E,EAAej5E,SAAU,EAC3B,IAEMy5E,GAA2Bj3E,EAAAA,EAAAA,IAAgB,KAC1Cw2E,EAAoBh5E,SACpB64E,EAAqB74E,UAE1B64E,EAAqB74E,QAAQ4C,MAAM02E,QAAU,OAE7CN,EAAoBh5E,SAAU,EAAK,IAG/B05E,GAAel3E,EAAAA,EAAAA,IAAgB,KACnC,IAAK8zD,EAAat2D,QAAS,OAE3B,GAAI84E,EAAqB94E,QAGvB,YAFA84E,EAAqB94E,SAAU,GAKjC,MAAM25E,EAAerjB,EAAat2D,QAAQu5E,UACpCK,EAAeD,EAAeZ,EAAiB/4E,QAC/C65E,EAAaF,EAAeZ,EAAiB/4E,QAC7C85E,EAA2B,IAAjBH,EACVI,EAAiBv+D,KAAKC,MAAQy9D,EAAgBl5E,QAEpD,GAAI64E,EAAqB74E,QAAS,CAChC,GAAI85E,IAAYd,EAAoBh5E,QAElC,YADAg6E,EAAAA,EAAAA,IAAcZ,EAAyB,CAAC9iB,EAAat2D,QAAS64E,EAAqB74E,WAIrFg6E,EAAAA,EAAAA,IAAcP,EAA0BZ,EAAqB74E,QAC/D,CAGE65E,IACGZ,EAAej5E,SAAW+5E,EAtET,KAuEdJ,EAAe,GAAKR,EAAyBn5E,SAEnD24E,MACSiB,GAAgBD,EAAe,GACxCf,MAGFG,EAAiB/4E,QAAU25E,EAC3BV,EAAej5E,QAAU85E,EACzBZ,EAAgBl5E,QAAUwb,KAAKC,MAC/B09D,EAAyBn5E,QAAU45E,GAAgBD,EAAe,CAAC,IAI/DM,GAAczB,EAAAA,EAAAA,IAAsBz1B,IACxC,IAAKuT,EAAat2D,QAAS,OAC3B,MAAMo4D,EAAY9B,EAAat2D,QAEVo4D,EAAU8hB,aAAe9hB,EAAUuG,cACnB,IAAjB5b,EAAMo3B,SAEtBp3B,EAAMo3B,OAAS,EACjBxB,MAEAC,MACF,GACC,CAACtiB,EAAcqiB,EAAcC,GAnGL,KAwH3B,OAnBAx6E,EAAAA,EAAAA,KAAU,KACR,MAAMg6D,EAAY9B,EAAat2D,QAC/B,GAAKo4D,EAWL,OAT4B,IAAxBA,EAAUmhB,YACZ74C,EAAAA,EAAAA,KAAgB,KACd04C,GAAwB,EAAK,IAIjChhB,EAAUvjD,iBAAiB,SAAU6kE,EAAc,CAAEU,SAAS,IAC9DhiB,EAAUvjD,iBAAiB,QAASolE,EAAa,CAAEG,SAAS,IAErD,KACLhiB,EAAUrjD,oBAAoB,SAAU2kE,GACxCthB,EAAUrjD,oBAAoB,QAASklE,EAAY,CACpD,GACA,CAAC3jB,EAAc2jB,IAEVlpE,EAAAA,IAAWsc,OAEfjxB,EADFwC,EAAAA,GAAAC,cAAA,OAAK8E,IAAKk1E,EAAsBj8E,UAAU,qBAAqB0jB,IAAI,sBAEvE,CD6EkC+5D,CAAiB/jB,GARnB9zD,EAAAA,EAAAA,IAAgB,KAC5CwzE,EAAkB,CAAE9rD,SAAS,EAAMksD,cAAa,KAGpB5zE,EAAAA,EAAAA,IAAgB,KAC5CwzE,EAAkB,CAAE9rD,SAAS,EAAOksD,cAAa,IAG0DE,GA4B7G,OACE13E,EAAAA,GAAAC,cAAC2oD,EAAAA,EAAc,CACb5qD,WAAWkC,EAAAA,EAAAA,GAAe,0BAA2B8tE,GAAoB,mBAAoBhwE,GAC7F+G,IAAK2yD,EACLxiD,MAAO8xC,GACP00B,aAAa,oCACbC,iBAAkBpD,EAAAA,IAClBqD,yBAAuB,EACvBtzB,eAAgBwxB,GAChB+B,UAAW7D,EAAcE,EAAgBZ,EACzCzxB,WAAYoB,GACZ60B,YAAajC,IAEZrB,IACCx4E,EAAAA,GAAAC,cAAC87E,EAAkB,CACjBr6D,IAAI,cACJs0D,SAAUA,EACVC,eAAgBsB,IAGnBO,GACC93E,EAAAA,GAAAC,cAAC+7E,EAAO,CACNt6D,IAAI,UACJkyD,gBAAiBA,EACjBzzE,QAASu5E,GACT9K,YAAa+K,KAGhB3yB,IAAa5mD,OAtDlB,WACE,MAAM67E,EAAiB5N,EAAYl5D,QAAQ6xC,GAAa,IAElDk1B,GAAcC,EAAAA,EAAAA,IAAoBxE,IAAqB,EAC7D,OAAO3wB,GAAa3nD,KAAI,CAAC5B,EAAI8D,KAC3B,MAAMmtE,EAAWuN,EAAiB16E,EAAI26E,EAChCvN,EAAY2I,EAA2BY,GAAiB+D,EAAiB16E,GAAK02E,EAAAA,IAEpF,OACEj4E,EAAAA,GAAAC,cAAC+nE,EAAAA,EAAI,CACHtmD,IAAKjkB,EACL2+E,cAAe1N,EAAWntE,GAAI86E,EAAAA,EAAAA,IAAY5+E,EAAIi6E,GAC9C56E,OAAQW,EACRixE,SAAUA,EACVD,SAAUA,EACV/2B,cAAeggC,EACfxP,cAAemQ,GAAiB56E,GAChCwqE,UAAWmQ,EAAc36E,GACzBkxE,UAAWA,EACXl1B,oBAAqB6/B,GACrB1K,YAAaoC,IACb,GAGR,CA+BMsL,IACEt1B,IAAgBA,GAAY5mD,QAAWs3E,EAUzC13E,EAAAA,GAAAC,cAAC4oD,EAAAA,EAAO,CAACnnC,IAAI,YARX1hB,EAAAA,GAAAC,cAACs8E,EAAW,CACV9N,SAAUA,EACV2G,WAAYA,EACZK,gBAAiBA,EACjBC,uBAAwBA,IAMf,G,oWErRrB,SAAgB,KAAO,WAAW,cAAc,WAAW,WAAa,WAAW,QAAU,WAAW,MAAQ,WAAW,YAAc,WAAW,SAAS,WAAW,MAAQ,WAAW,WAAW,WAAW,QAAU,YC2BrNnM,EAAY,EAAIrsB,EAAAA,EAwCtB,GAAexgD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,EAAM0C,KAA6B,IAA3B,OAAExC,GAAQwC,EAC1D,MAAMvC,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1B0/E,EAAkBz/E,IAASA,EAAKo8C,YAAa0rB,EAAAA,EAAAA,IAAiB9nE,EAAM,iBAE1E,MAAO,CACLw4E,eAAeC,EAAAA,EAAAA,KAAoB54E,EAAQ,MAC3C4/E,kBACD,GAPiB7/E,EAtC0BoB,IAExC,IAFyC,OAC7CjB,EAAM,cAAEy4E,EAAa,gBAAEiH,GACxBz+E,EACC,MAAM,qBAAE0+E,IAAyBr+E,EAAAA,EAAAA,MAE3BC,GAAOC,EAAAA,EAAAA,MACP,SAAEgJ,IAAaC,EAAAA,EAAAA,MAEfm1E,GAAoBl+E,EAAAA,EAAAA,KAAY,KACpCi+E,EAAqB,CAAE3/E,UAAS,GAC/B,CAACA,EAAQ2/E,IAEZ,OACEz8E,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,EAAOuN,MACrB1R,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,EAAOtC,SACpB0zE,GAAiBv1E,EAAAA,GAAAC,cAAC61E,EAAAA,EAAuB,CAACj0E,QAAS0zE,EAAej1E,KAAMipE,KAE3EvpE,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,EAAOqK,MAAO9M,IAAI,QAAQrD,EAAK,8BAC9C2B,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAO8+C,YAAa9+C,EAAOw4E,UAAWj7E,IAAI,QACpErD,EAAK,oCAEPm+E,GACCx8E,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLmP,QAASrI,EACTyhD,OAAK,EACL5oD,QAASu8E,EACTp8E,KAAK,UACLqB,MAAOtD,EAAKsD,OAEZ3B,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,EAAOy4E,YACpBv+E,EAAK,gCAIR,K,uIC/DV,MC4OA,GAAe3B,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAoC,IAAlC,OAAExC,EAAM,MAAE2gD,EAAK,WAAE/3C,GAAYpG,EACpC,MAAMvC,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAE1Bw/D,GAAcr1C,EAAAA,EAAAA,KAAkBrqB,EAAQE,EAAQ2gD,EAAMgvB,gBACtD,SAAEE,EAAQ,WAAEC,GAAetQ,GAAe,CAAC,EAC3CyQ,EAAmBzQ,IAAe0Q,EAAAA,EAAAA,GAAoB1Q,IAAcnzC,aACpE8jD,EAAoBN,GACrB36C,EAAAA,EAAAA,KAAWp1B,EAAQ+vE,KAAa3vE,EAAAA,EAAAA,KAAWJ,EAAQ+vE,QAAanvE,EAC/D0vE,EAAoB5Q,GAAc6Q,EAAAA,EAAAA,IAAiB7Q,QAAe9+D,EAClE4vE,EAAsBF,GAAqBH,GAC7C9lD,EAAAA,EAAAA,KAAkBrqB,EAAQE,EAAQiwE,QAClCvvE,GACI6vE,cAAeC,EAAqBC,aAAcC,GAAuBN,GAAqB,CAAC,EACjGrvB,GAAekwB,EAAAA,EAAAA,KAAkBnxE,EAAQE,EAAQ2gD,EAAMhgD,GAAI,gBAC3DmrB,GAAQC,EAAAA,EAAAA,KAAYjsB,EAAQE,EAAQ2gD,EAAMhgD,IAC1C0/C,GAAaC,EAAAA,EAAAA,KAAiBxgD,EAAQE,EAAQ2gD,EAAMhgD,IACpD+0E,EAAiB90E,QAAQy/C,GAAY0/B,yBAEnC//E,OAAQ4wE,EAAe3tD,SAAU4tD,IAAoB3mD,EAAAA,EAAAA,KAAyBpqB,IAAW,CAAC,EAElG,MAAO,CACLG,OACAu/D,cACAgR,sBACAE,qBACAJ,sBACAH,oBACApvB,eACAi/B,WAAWC,EAAAA,EAAAA,KAAqBngF,EAAQE,EAAQ2gD,EAAMhgD,IACtD+wE,yBAAyBttE,EAAAA,EAAAA,KAA0BtE,GACnDgsB,WACIgkD,GAActQ,GAAe,CAC/BgS,2BAA2BC,EAAAA,EAAAA,KAAqB3xE,EAAQ0/D,IAE1D4R,cAAexoE,GAAc3I,GAAMU,KAAOiwE,GAAiBC,IAAoBlwB,EAAMhgD,GACrF+0E,iBACD,GArCe71E,EArKqBoB,IAqBnC,IArBoC,MACxC0/C,EAAK,WACL/3C,EAAU,OACV5I,EAAM,KACNC,EAAI,MACJiH,EAAK,YACLs4D,EAAW,cACX4R,EAAa,0BACbI,EAAyB,oBACzB70B,EAAmB,UACnBqjC,EAAS,oBACT1P,EAAmB,oBACnBE,EAAmB,mBACnBE,EAAkB,kBAClBP,EAAiB,cACjB/E,EAAa,wBACbsG,EAAuB,UACvBvG,EAAS,aACTpqB,EAAY,MACZj1B,EAAK,eACL4pD,GACDz0E,EACC,MAAM,WACJ86B,EAAU,YACVmkD,EAAW,iBACXjO,EAAgB,uBAChBkO,IACE7+E,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAENgiC,EAAmBC,EAAiBC,IAAoBx/B,EAAAA,EAAAA,MACxDouE,EAAiBC,EAAeC,IAAkBtuE,EAAAA,EAAAA,MAClD6uE,EAAyBC,EAAuBC,IAA2B/uE,EAAAA,EAAAA,MAC3EgvE,EAAuBC,GAAqBC,KAAyBlvE,EAAAA,EAAAA,MAEtE,SACJ0tE,GAAQ,SAAEwO,IACRz/B,EACE0mB,GAAU1mB,EAAM0mB,cAA8B3mE,IAAlBigD,EAAM0mB,SAAyBpnE,EAAKonE,QAEhEgZ,IAAwBv5E,EAAAA,EAAAA,IAAgB,KAC5CksE,IACAvvC,GAAiB,IAGb0wC,IAAertE,EAAAA,EAAAA,IAAgB,KACnCo5E,EAAY,CAAElgF,OAAQC,EAAKU,GAAIy1D,QAASzV,EAAMhgD,IAAK,IAG/CyzE,IAAattE,EAAAA,EAAAA,IAAgB,KACjCqsE,KACAZ,GAAe,KAGX,eAAEqB,GAAc,IAAE3rE,KAAQ4rE,EAAAA,EAAAA,GAAiB,CAC/C5zE,OACAD,SACAw/D,cACA1zC,QACAwkD,sBACAE,sBACAE,qBACAP,oBACAa,iBAAkBrwB,EAClBhE,sBACAuF,SAAS,EACTnB,eAEAqqB,gBACAsG,0BACAvG,cAGImV,IAAkBx5E,EAAAA,EAAAA,IAAgB,KACtCi1B,EAAW,CAAE/7B,SAAQijB,SAAU09B,EAAMhgD,GAAI8sC,sBAAsB,IAC/D0yC,EAAuB,CAAEngF,SAAQ0kB,WAAW,IAExC0sD,GACFa,GACF,IAGIqC,GC/IO,SAA+BrzE,GAc3C,IAd4C,MAC7C0/C,EAAK,KACL1gD,EAAI,UACJsgF,EAAS,UACTP,EAAS,aACT7L,EAAY,WACZC,GAQDnzE,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEb,OAAOK,EAAAA,EAAAA,KAAQ,KACb,MAAM,SACJ+vE,EAAQ,QAAEvK,EAAO,SAAE+Y,EAAUz/E,GAAIy1D,GAC/BzV,EAEE3gD,EAASC,EAAKU,IAEd,UACJ6/E,EAAS,kBACTC,EAAiB,cACjBC,EAAa,sBACblY,EAAqB,iBACrBmY,IACEr/E,EAAAA,EAAAA,MAEEs/E,GAAkBC,EAAAA,EAAAA,IAAkB5gF,EAAM0gD,GAC1CmgC,EAAkB7gF,EAAKo8C,YAAa0rB,EAAAA,EAAAA,IAAiB9nE,EAAM,gBAE3D8gF,EAAqBnM,EAAAA,IAAgC,CACzDljE,MAAO,kBACP4Q,KAAM,kBACNq1D,QAASA,KACPgJ,EAAiB,CAAE3gF,OAAQC,EAAKU,GAAIsiB,SAAUmzC,GAAU,GAItD4qB,EAAmBrgC,EAAMo1B,cAAgBwK,EAC3C,CACA7uE,MAAOnQ,EAAK,cACZ+gB,KAAM,YACNq1D,QAASA,KACP+I,EAAc,CAAE1gF,SAAQo2D,WAAU,QAGpC11D,EAEEugF,EAAYH,EAAmBlP,EACjC,CACAlgE,MAAOnQ,EAAK,gBACZ+gB,KAAM,QACNq1D,QAASA,IAAM8I,EAAkB,CAAEzgF,SAAQo2D,UAASwb,UAAU,KAE9D,CACAlgE,MAAOnQ,EAAK,YACZ+gB,KAAM,MACNq1D,QAASA,IAAM8I,EAAkB,CAAEzgF,SAAQo2D,UAASwb,UAAU,UAC3DlxE,EAEDwgF,EAAejhF,EAAKonE,UAAuB,IAAZA,IAAkC,IAAZA,EACvD,CACA31D,MAAOnQ,EAAK,mBACZ+gB,KAAM,SACNq1D,QAASA,IAAMnP,EAAsB,CAAExoE,SAAQo2D,UAASiR,SAAS,KAEjE,CACA31D,MAAQ,GAAEnQ,EAAK,sBACf+gB,KAAM,OACNq1D,QAASvD,GAGP+M,EAAmBP,EAAmBR,EACxC,CACA1uE,MAAOnQ,EAAK,0BACZ+gB,KAAM,eACNq1D,QAASA,IAAM6I,EAAU,CAAExgF,SAAQo2D,UAASgqB,UAAU,KAEtD,CACA1uE,MAAOnQ,EAAK,yBACZ+gB,KAAM,cACNq1D,QAASA,IAAM6I,EAAU,CAAExgF,SAAQo2D,UAASgqB,UAAU,UACnD1/E,EAED0gF,EAAepB,EAAY,CAC/BtuE,MAAOnQ,EAAK,0BACZ+gB,KAAM,SACNmD,aAAa,EACbkyD,QAASxD,QACPzzE,EAEJ,OAAOq3E,EAAAA,EAAAA,IAAQ,CACbgJ,EACAE,EACAD,EACAE,EACAC,EACAC,GACA,GACD,CAACzgC,EAAO1gD,EAAMsgF,EAAWh/E,EAAMy+E,EAAW7L,EAAcC,GAC7D,CDsCyBiN,CAAuB,CAC5C1gC,QACA1gD,OACAsgF,UAAW7K,EACXsK,YACA7L,aAAckM,GACdjM,gBAGF,OACElxE,EAAAA,GAAAC,cAACkoD,EAAAA,EAAQ,CACPnqD,WAAWkC,EAAAA,EAAAA,GDrKM,WCuKf,OACAwF,GAAc,WACd,uBAEFvF,QAASi9E,GACTp5E,MAAOA,EACP2P,KAAM+9D,EAAAA,GAAgC,KAAGC,EAAAA,EAAAA,IAAmB70E,EAAQ,SAAU2gD,EAAMhgD,WAAQD,EAC5F4zE,eAAgBA,GAChBS,mBAAiB,EACjB9sE,IAAKA,IAEL/E,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,QACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACbgC,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,UAC7BF,EAAAA,GAAAC,cAAC6/C,EAAAA,EAAS,CAACrC,MAAOA,EAAOz/C,UDrLkF,WCqLrDy7C,oBAAqBA,IAC3Ez5C,EAAAA,GAAAC,cAAA,MAAIyB,IAAI,OAAO1D,UAAU,aAAYqR,EAAAA,EAAAA,GAAWouC,EAAMjvC,SAEvDivC,EAAM0mB,SAAWnkE,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBAC/BgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,cACdk/E,IACCl9E,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GACZ,OACA,kBD7L0D,cCkM7Do8D,GACCt8D,EAAAA,GAAAC,cAACoyE,EAAAA,EAAe,CACdltE,QAASm3D,EACTzb,eAAgBytB,KAItBtuE,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACZ0yE,KACD1wE,EAAAA,GAAAC,cAACgyE,EAAAA,EAAS,CACRl1E,KAAMA,EACN2xE,SAAUA,GACVvK,QAASA,GACT1mB,MAAOA,EACP+0B,eAAgBA,MAIrB3C,GACC7vE,EAAAA,GAAAC,cAAC+7C,EAAAA,EAAa,CACZ/5B,OAAQqe,EACRje,QAASme,EACTle,oBAAqBytD,EACrBqO,sBAAoB,EACpBniC,eAAgBg1B,GAChBvwE,KAAMrC,EAAK,+BACXggF,aAAchgF,EAAK,YAGtB2xE,GACChwE,EAAAA,GAAAC,cAACusE,EAAAA,EAAa,CACZvqD,OAAQmtD,EACR/sD,QAASitD,EACThtD,oBAAqB4tD,GACrBpzE,OAAQA,EACRo2D,QAASzV,EAAMhgD,KAGV,KE+Cf,GAAef,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KACjBC,IACC,MAAME,GAASM,EAAAA,EAAAA,KAAeR,GAAQixE,iBAChC9wE,EAAOD,GAASE,EAAAA,EAAAA,KAAWJ,EAAQE,QAAUU,GAEjDV,OAAQ4wE,EACR3tD,SAAU4tD,IACR3mD,EAAAA,EAAAA,KAAyBpqB,IAAW,CAAC,EAEzC,MAAO,CACLG,OACA+wD,eAAgBhxD,IAAW4wE,EAAgBhjC,OAAOijC,QAAmBnwE,EACrEgxE,yBAAyBttE,EAAAA,EAAAA,KAA0BtE,GACpD,IAEFA,IAAWqxE,EAAAA,EAAAA,KAAuBrxE,IAfjBD,EA5N0BoB,IASxC,IATyC,KAC7ChB,EAAI,eACJ+wD,EAAc,OACd7rC,EAAM,SACN2yD,EAAQ,cACR0J,EAAa,oBACbh8D,EAAmB,qBACnBi8D,EAAoB,wBACpB/P,GACDzwE,EACC,MAAM,gBACJmxE,EAAe,iBAAEsP,EAAgB,WAAExP,IACjC5wE,EAAAA,EAAAA,MAGE2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAG7B82D,GAAe92D,EAAAA,EAAAA,IAAuB,MAEtC69E,GAAsB79E,EAAAA,EAAAA,IAAuB,OAC7C,SAAE0G,IAAaC,EAAAA,EAAAA,OAErB/H,EAAAA,EAAAA,KAAU,KACJzC,IAASA,EAAK2gD,QAChBsxB,EAAW,CAAElyE,OAAQC,EAAKU,IAC5B,GACC,CAACV,EAAMiyE,IAEV,MAAO0P,EAAYC,IAAiBj3E,EAAAA,EAAAA,KAAS,GACvCrJ,GAAOC,EAAAA,EAAAA,KAEPsgF,GAAch7E,EAAAA,EAAAA,IAAgB,KAClCsrE,GAAiB,KAGnB1vE,EAAAA,EAAAA,KAAU,KACHgvE,GAA4BvsD,GAC/BK,KACF,GACC,CAACksD,EAAyBvsD,EAAQK,IAErC,MAAMu8D,GAAuBj7E,EAAAA,EAAAA,IAAgB,KACtC7G,GACLyhF,EAAiB,CAAE/gF,GAAIV,EAAKU,GAAI8sC,sBAAsB,GAAO,KAGzD,QAAE+uC,IAAYC,EAAAA,EAAAA,IAAwB,CAC1CC,QAAS9hB,EACT+hB,WAnD0B,OAsD5BqF,EAAAA,EAAAA,IAAeL,EAAqBnF,GAASh6E,IAAwB,IAAvB,eAAEq7C,GAAgBr7C,EAC9Dq/E,GAAehkC,EAAe,IAGhC,MAAM0zB,GAAa1vE,EAAAA,EAAAA,KAAQ,IAClB5B,GAAM2gD,QACTqhC,EAAAA,EAAAA,IAAiB7/E,OAAOC,OAAOpC,EAAK2gD,QAAS3gD,EAAKiiF,uBAAuB3/E,KAAIxC,IAAA,IAAC,GAAEY,GAAIZ,EAAA,OAAKY,CAAE,IAC3F,IACH,CAACV,KAEE,cAAEq7E,EAAa,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAajK,EAAYtxE,GAAMU,KAEpEupD,EAAaC,KAAWC,EAAAA,EAAAA,IAAkB,KAC1CnqD,GACLiyE,EAAW,CAAElyE,OAAQC,EAAKU,IAAK,GAC9B4wE,GAAatxE,GAAMkiF,aAAe5Q,EAAWjuE,QAAUrD,EAAKkiF,YAAaC,EAAAA,KAEtEC,IAAkBv+E,EAAAA,EAAAA,KAAO,GACzB6hD,GAAYxgC,IAAW2yD,EACvBwK,IAAgBllD,EAAAA,EAAAA,GAAYuoB,IAE9B28B,KAAkB38B,KACpB08B,GAAgB/9E,SAAU,IAG5Bi+E,EAAAA,EAAAA,GAAe,CACbliF,SAAUslD,GACV68B,OAAQV,KAGVp/E,EAAAA,EAAAA,KAAU,IAAOijD,IAAYj3B,EAAAA,EAAAA,GAAsBozD,QAAephF,GAAY,CAACohF,EAAan8B,MAE5FjjD,EAAAA,EAAAA,KAAU,KACJ4/E,KAAkB38B,KAEpB3kB,EAAAA,EAAAA,KAAoB,KAClB,IAAK/4B,EAAI3D,QAAS,OAElB,MAAMm+E,GAA6BC,EAAAA,EAAAA,OACnCC,EAAAA,EAAAA,GAAqB16E,EAAI3D,QAASm+E,GAElChB,MAEI97B,IACF08B,GAAgB/9E,SAAU,EAC1B2D,EAAI3D,QAAS4C,MAAM07E,UAAY,SAE/BP,GAAgB/9E,SAAU,EAC1B2D,EAAI3D,QAAS4C,MAAM07E,UAAY,GACjC,GAEJ,GACC,CAACj9B,GAAW87B,EAAsBa,MAErC5/E,EAAAA,EAAAA,KAAU,KACR,GAAKknB,EAAAA,GAIL,OAAOhY,EAAAA,EAAAA,IAAc3J,EAAI3D,QAAU,CACjC8uD,wBAAyB,aACzBC,QAAUA,CAACziD,EAAG0iD,IAGRA,KAFmB/xD,EAAKsD,MAAQ0uD,EAAAA,GAAeE,KAAOF,EAAAA,GAAeC,SAGvE4e,KACO,IAKX,GACD,CAACA,EAAiB7wE,EAAKsD,QAmB1B,MAAMw0B,QAA6B34B,IAAjBT,GAAM2gD,OAExB,OACE19C,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACL/G,WAAWkC,EAAAA,EAAAA,GC/MM,WDiNfw+E,GCjN2K,WDkN3KrgF,EAAKsD,OClN2B,YDmN/B6sE,GCnNkF,YDqNrFmR,gBAAkB19D,OAA+BzkB,EAAtB8kB,GAE3BtiB,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,SACfgC,EAAAA,GAAAC,cAAA,OAAKxC,GAAG,kBAAkBO,UAAU,eAClCgC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLH,KAAK,UACLsP,MAAM,cACNzP,QAASy+E,EACT/uE,UAAWxR,EAAK,UAEhB2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAGdjB,GACCiD,EAAAA,GAAAC,cAAC2nD,EAAAA,EAAa,CACZ5J,UAAQ,EACRhgD,UCtOuP,WDuOvPlB,OAAQC,EAAKU,GACb0C,QAAS0+E,IAIZ9hF,GAEGiD,EAAAA,GAAAC,cAAC2/E,EAAAA,EAAa,CACZ9iF,OAAQC,EAAKU,GACbsiB,SAAUiU,EAAAA,GACVnM,gBAAgB,SAChBg4D,kBAAkB,EAClBC,YAAU,EACVx4E,SAAUA,EACVg3E,cAAeA,KAKtBvhF,GAAQiD,EAAAA,GAAAC,cAAC8/E,EAAAA,EAAgB,CAACjjF,OAAQC,EAAKU,GAAIQ,iBAAiB,EAAOD,UC1PgE,aD4PpIgC,EAAAA,GAAAC,cAAA,OAAKjC,UC5PkJ,aD8PvJgC,EAAAA,GAAAC,cAAC2oD,EAAAA,EAAc,CACb5qD,UAAU,0BACV+G,IAAK2yD,EACLxiD,MAAO8xC,EACP20B,iBAAkBuD,EAAAA,IAClBtD,yBAAuB,EACvBC,WAAYxN,GAAYjuE,QAAU,GAAK4/E,EAAAA,IACvCn6B,WAAYoB,GACZg5B,cAAeC,EAAAA,IACf53B,eAAgBtoD,EAAAA,GAAAC,cAAA,OAAK8E,IAAK05E,EAAqBzgF,UCvQ0L,cDyQxON,QAAQspD,GAAa5mD,SAhF5B,WACE,MAAM67E,EAAiB5N,EAAYl5D,QAAQ6xC,EAAa,IAExD,OAAOA,GAAa3nD,KAAI,CAAC5B,EAAI8D,IAC3BvB,EAAAA,GAAAC,cAACkgF,EAAK,CACJz+D,IAAKjkB,EACLX,OAAQC,EAAMU,GACdggD,MAAO1gD,EAAM2gD,OAAQjgD,GACrBuG,MAAQ,SAAQi4E,EAAiB16E,GAAKy+E,EAAAA,SACtCt6E,WAAYooD,IAAmBrwD,EAC/Bg8C,oBAAqB6/B,EACrBpR,cAAemQ,EAAiB56E,GAChCwqE,UAAWmQ,EAAc36E,MAG/B,CAkEQ2iF,GAEDjqD,KAAc6wB,GAAa5mD,QAC1BJ,EAAAA,GAAAC,cAAC4oD,EAAAA,EAAO,CAACnnC,IAAI,cAGfyU,IAAqC,IAAxB6wB,GAAa5mD,QAAgB4mD,EAAY,KAAOq5B,EAAAA,KAC7DrgF,EAAAA,GAAAC,cAACqgF,EAAU,CAACxjF,OAAQC,EAAKU,KAEvB,I,0DElRH,IAAK0qE,EAAkB,SAAlBA,GAAkB,OAAlBA,EAAAA,EAAkB,eAAlBA,EAAAA,EAAkB,qBAAlBA,EAAAA,EAAkB,eAAlBA,CAAkB,MAMvB,SAASoY,EAAgDnI,GAC9D,OAAOz5E,EAAAA,EAAAA,KAAQ,KACb,MAAM6hF,EAAathF,OAAOC,OAAOi5E,GAC3BqI,EAAaD,EAAWjhF,QAAQw9D,GAASA,EAAO,IAAG38D,OACnDsgF,EAAeF,EAAWjhF,QAAQw9D,GAASA,EAAO,IAAG38D,OAE3D,OAAQtD,IACN,MAAMmrE,EAAYmQ,EAAct7E,GAChC,OAAkB,IAAdmrE,EACKE,EAAmB/0B,KAI1B60B,IAAc0Y,KACX1Y,KAAc,KACbwY,GAAcC,GAAgBzY,EAAY,GAC1CyY,EAAeD,GAAcxY,EAAY,EAEtCE,EAAmByY,QAGrBzY,EAAmB0Y,IAAI,CAC/B,GACA,CAACzI,GACN,C,4OC/BA,QAAoE,WAApE,EAAiN,WAAjN,EAAyT,WAAzT,EAA4U,WC+BtU0I,EAAsBp2C,OAAOwS,EAAAA,GAsInC,GAAexgD,EAAAA,EAAAA,KAnI4BqB,IAIrC,IAJsC,KAC1ChB,EAAI,kBACJgkF,EAAiB,oBACjBtnC,GACD17C,EACC,MAAM,WAAE86B,IAAez6B,EAAAA,EAAAA,MAGjB4iF,GAAiBpgF,EAAAA,EAAAA,IAAuB,MAExCqgF,GAAgBrgF,EAAAA,EAAAA,IAAuB,MAEvCvC,GAAOC,EAAAA,EAAAA,MAEN4iF,KAAoBC,IAAexiF,EAAAA,EAAAA,KAAQ,IAC3C5B,EAAK2gD,QAIHqhC,EAAAA,EAAAA,IAAiB7/E,OAAOC,OAAOpC,EAAK2gD,aAASlgD,GAAW,GAAM4B,MAAM,EArB5D,GAkBN,IAIR,CAACrC,EAAK2gD,UAEF0jC,EAAkBC,IAAuB35E,EAAAA,EAAAA,KAAS,IAClD45E,EAAkBC,IAAuB75E,EAAAA,EAAAA,SAA6BlK,IAG3E0jB,YAAasgE,EACb5rB,gBAAiB6rB,IACf5rB,EAAAA,EAAAA,IAAcnoD,IACoB,IAAhCwzE,EAAgBrO,aAAqB91E,EAAKg3B,oBAE9CrmB,EAAEM,kBACFN,EAAE4L,iBAEFuf,EAAW,CACT/7B,OAAQC,EAAKU,GACbsiB,SAAUmhE,EAAgBzjF,GAC1B8sC,sBAAsB,EACtBne,mBAAmBs1D,EAAAA,EAAAA,QACnB,IAmBJ,OAhBAliF,EAAAA,EAAAA,KAAU,KACR,MAAMmiF,EAAqBX,EAAe5/E,QACpCwgF,EAAoBX,EAAc7/E,QACxC,IAAKugF,IAAuBC,EAAmB,OAE/C,MAAMC,EAAmBF,EAAmB33B,YACtC83B,EAAkBF,EAAkB53B,YAEtC1/C,KAAKy3E,IAAIF,EAAmBC,GAAmBhB,EACjDS,EAAoBj3E,KAAK2B,IAAI41E,EAAkBC,IAE/CP,OAAoB/jF,GAEtB6jF,EAAoBQ,EAAmBC,EAAgB,GACtD,CAACZ,EAAiBH,IAGnB/gF,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GD9FM,WCgGfkhF,GDhGojB,WCiGpjBE,GDjGinB,YCmGnnB5/E,IAAKrD,EAAKsD,MAAQ,WAAQnE,EAC1BwG,MAAOs9E,EAAoB,wBAAuBA,WAAuB9jF,GAExE0jF,GACClhF,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDzGsK,WC2G/KghF,EAAgBrO,aAAe1uE,GAEjCY,IAAKk8E,EACL9gF,QAASqhF,EACTvqC,YAAawqC,GAEbzhF,EAAAA,GAAAC,cAAC6/C,EAAAA,EAAS,CACRrC,MAAOyjC,EACPznC,oBAAqBA,IAEvBz5C,EAAAA,GAAAC,cAAA,OAAKjC,UDrH8U,aCqHpTqR,EAAAA,EAAAA,GAAW6xE,EAAgB1yE,SACxD8yE,GAAoBF,GACpBphF,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,MAKtBnE,EAAAA,GAAAC,cAAA,OAAKjC,UD7Hge,YC8HlemjF,EAAY9hF,KAAKo+C,GAChBz9C,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDhIiH,WCiItGu9C,EAAMo1B,aAAe1uE,GAE3Cud,IAAK+7B,EAAMhgD,IAEXuC,EAAAA,GAAAC,cAAC6/C,EAAAA,EAAS,CACRrC,MAAOA,EACPz/C,UDvI0W,WCwI1Wy7C,oBAAqBA,IAEvBz5C,EAAAA,GAAAC,cAAA,QAAMjC,UD1Ioa,aC0I/XqR,EAAAA,EAAAA,GAAWouC,EAAMjvC,YAKlExO,EAAAA,GAAAC,cAAA,OAAKjC,UD/Isf,eCkJ7fkjF,GAAmBlhF,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EDlJ+B,aCkJI9F,EAAK,YAC5F2B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDpJiP,WCoJ9MghF,GAAiBrO,aAAe1uE,GAC9EY,IAAKi8E,EACL7gF,QAASqhF,EACTvqC,YAAawqC,GAEZV,KACCO,IAAqBF,GACrBphF,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,MAKlB,I,0BCxHV,MAAM69E,EAAqB,IAEZ,SAASrR,EAAgB5yE,GAqCrC,IArCsC,KACvChB,EAAI,YACJu/D,EAAW,OACXx/D,EAAM,aACN+gD,EAAY,MACZj1B,EAAK,oBACLwkD,EAAmB,oBACnBE,EAAmB,iBACnBQ,EAAgB,kBAChBb,EAAiB,mBACjBO,EAAkB,oBAClB/zB,EAAmB,cACnByuB,EAAa,UACbD,EAAS,wBACTuG,EAAuB,QACvBxvB,EAAO,cACPtH,EAAa,UACb0wB,GAoBDrqE,EACC,MAAMM,GAAOC,EAAAA,EAAAA,KAEPyG,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7BqhF,EAAW3lB,IAAe9F,EAAAA,EAAAA,IAAgB8F,GAE1CyQ,EAAmBzQ,IAAe0Q,EAAAA,EAAAA,GAAoB1Q,IAAcnzC,cAC1EsnD,EAAAA,EAAAA,GAAiB3zE,EAAQmlF,EAAWlV,OAAmBvvE,EAAW4vE,GAElE,MAAMvY,EAAiByH,KAAgB4lB,EAAAA,EAAAA,IAAkB5lB,IACrDjhB,EAAAA,EAAAA,IAA4BihB,QAC5B9+D,EACEwkD,GAAe1/C,EAAAA,EAAAA,GAASg6D,GAAcz0D,EAAAA,EAAAA,IAAoBy0D,EAAa,cAAW9+D,GAClFu3D,EAAer3D,QAAQ4+D,IAAetH,EAAAA,EAAAA,IAAqBsH,IAE3D6lB,GAAoBxjF,EAAAA,EAAAA,KAAQ,KAChC,IAAK2uE,EACH,OAIF,MAAM1uE,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KACpC,OAAOuuE,EAAoBjuE,KAAK45C,GAAWr6C,EAAUq6C,KAAS15C,OAAO7B,QAAQ,GAC5E,CAAC4vE,IAEE8U,GAA4B5jF,EAAAA,EAAAA,KAAY,KAC5C,IAAKk5C,IAAkB0wB,GAChBvqB,GAAgBye,GAAeze,EAAarD,UAA+B,IAAnB8hB,EAAY/2D,KACzE,OAAOvF,EAAAA,GAAAC,cAACigD,EAAAA,EAAY,CAACrC,aAAcA,IAGrC,MAAMwkC,EAAsBz5D,GAASA,EAAME,WAAWK,eAAiB2kD,GAAkBrwE,GACnF6kF,EAAoB15D,GAAOE,YAAcF,EAAMloB,MAAQkoB,EAAM6e,QAKnE,IAHyB1qC,GAAM+2B,UAAY4jB,IAAkB0wB,GAAax/C,IAAU05D,KAC7EtjC,IAAYqjC,GAGjB,OACEriF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,eAAe0D,IAAKrD,EAAKsD,MAAQ,OAAS,OACrD3B,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAASK,EAAK,WAC7Bg4D,EAAAA,EAAAA,GAAuB,CACtB31D,KAAMkoB,EAAMloB,MAAMA,MAAQ,GAC1B+Y,SAAUmP,EAAMloB,MAAM+Y,SACtBohD,UAAU,EACV0nB,uBAAuB,KAM/B,IAAKjmB,EACH,OAGF,IAAIkmB,EAAAA,EAAAA,IAAiBlmB,GACnB,OACEt8D,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uCAAuC0D,IAAKrD,EAAKsD,MAAQ,OAAS,QAC5E8gF,EAAAA,EAAAA,IAA6BpkF,EAAMi+D,IAK1C,GAAI2lB,EAAU,CACZ,MAAMna,EAAS/qE,KAAS63B,EAAAA,EAAAA,IAAc73B,IAASu/D,EAAYqQ,WAAarQ,EAAYx/D,QAEpF,OACEkD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uCAAuC0D,IAAKrD,EAAKsD,MAAQ,OAAS,QAC5E+gF,EAAAA,EAAAA,GACCrkF,EACAi+D,EACCwL,OAAwCtqE,EAA/ByvE,EACVnF,EAAS/qE,OAAOS,EAChB2kF,EACA/U,EACAI,EACAM,EACA,CAAEpX,YAAY,QACdl5D,OACAA,GAIR,CAEA,MAAMmlF,GAAaC,EAAAA,EAAAA,IAAqBvkF,EAAMvB,EAAQmwE,GAEtD,OACEjtE,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uCAAuC0D,IAAKrD,EAAKsD,MAAQ,OAAS,OAC5EghF,GACC3iF,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,gBAAeqR,EAAAA,EAAAA,GAAWszE,IAC1C3iF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,SAAQ,OAG1B05C,GAAiB4kB,EAAY/yC,aAAgBvpB,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,4CAC3B,UAAhCs+D,EAAYxzC,WAAW3M,MAAqBnc,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,2CAkElE,SACEK,EAAc8G,EAAqBs0C,EAAiCqc,EAAkBf,GAEtF,MAAM8tB,EACJ7iF,EAAAA,GAAAC,cAAC02D,EAAAA,EAAc,CACbt4D,KAAMA,EACN8G,QAASA,EACTyxD,QAASl5D,QAAQo4D,GACjBpB,8BAA+Bjb,EAC/BqpC,YAAU,IAId,IAAKhtB,EACH,OAAO+sB,EAGT,MAAMxjD,GAAY6iB,EAAAA,EAAAA,IAAoB/8C,GAEtC,OACEnF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,iBACdgC,EAAAA,GAAAC,cAAA,OACEiE,IAAK4xD,EACLj9C,IAAI,GACJ7a,WACEkC,EAAAA,EAAAA,GAAe,uBAAwB60D,GAAgB,QAAS11B,GAAa,yBAE/Ej7B,WAAW,KAEZogB,EAAAA,EAAAA,IAAgBrf,IAAYnF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mBACzC6kF,EAGP,CAlGSE,CAAc1kF,EAAMi+D,EAAa7iB,EAAqBuI,GAAgB6S,EAAgBE,GACrF,GAEL,CACDyY,EAAoBJ,EAAqB+U,EAAmBplF,EAAMD,EAAQ8rB,EAAOq5D,EACjFltB,EAAc/V,EAAS3gD,EAAMi+D,EAAa2Q,EAAmBa,EAAkB9rB,EAAc6S,EAC7Fpb,EAAqBoE,EAAcnG,EAAe0wB,IAqDpD,OAnCAj9D,EAAAA,EAAAA,KAAgB,KACd,MAAM8kC,EAAUlrC,EAAI3D,QAEpB,GAAKotE,GAA4Bv+B,EAAjC,CAKA,GAAIi4B,IAAkBC,EAAAA,EAAmByY,QACvC3wC,EAAQjsC,MAAMwzD,QAAU,KAExB11B,EAAAA,EAAAA,KAAgB,KACdmO,EAAQ59B,UAAUxO,IAAI,mBACtBosC,EAAQjsC,MAAMwzD,QAAU,GAAG,QAExB,IAAI0Q,IAAkBC,EAAAA,EAAmB0Y,KAQ9C,OAPA5wC,EAAQjsC,MAAM07E,UAAa,mBAAkBzX,EAAYgQ,EAAAA,aAEzDn2C,EAAAA,EAAAA,KAAgB,KACdmO,EAAQ59B,UAAUxO,IAAI,qBACtBosC,EAAQjsC,MAAM07E,UAAY,EAAE,GAIhC,CAEA37E,YAAW,MACT+9B,EAAAA,EAAAA,KAAgB,KACdmO,EAAQ59B,UAAUoG,OAAO,kBAAmB,qBAC5Cw3B,EAAQjsC,MAAMwzD,QAAU,GACxBvnB,EAAQjsC,MAAM07E,UAAY,EAAE,GAC5B,GACDsC,EAAqBgB,EAAAA,IA3BxB,CA2B4C,GAC3C,CAACxU,EAAyBvG,EAAWC,IAEjC,CACLwI,eAnDF,WACE,OAAI3zE,GAAM+2B,UAAYkrB,EAElBh/C,EAAAA,GAAAC,cAACgjF,EAAoB,CACnBlmF,KAAMA,EACNgkF,kBAAmBqB,EACnB3oC,oBAAqBA,IAKpB2oC,GACT,EAwCEr9E,MAEJ,C,wEC7Oe,SAASm+E,EAAsCC,GAC5D,MAAM7kB,GAAcC,EAAAA,EAAAA,KACd6kB,GAAyCxiF,EAAAA,EAAAA,IAAOuiF,GAChDE,GAAuBnpD,EAAAA,EAAAA,GAAYipD,GAWzC,OAJyB,IAArBA,GAA8BE,IAAyBF,IACzDC,EAAuChiF,SAAU,GAG5C,CAAEgiF,yCAAwCE,gCATjD,WACEF,EAAuChiF,QAAU1D,QAAQylF,GACzD7kB,GACF,EAOF,C,kFCbe,SAASga,EAAajK,EAA6C3sD,GAChF,MAAM6hE,GAAY5kF,EAAAA,EAAAA,KAAQ,KACxB,GAAK0vE,EAIL,OAAOA,EAAWnwD,QAAO,CAACC,EAAK1gB,EAAI8D,KACjC4c,EAAI1gB,GAAM8D,EACH4c,IACN,CAAC,EAA4B,GAC/B,CAACkwD,IAEEmV,GAAgBtpD,EAAAA,EAAAA,GAAYqpD,GAC5BnnD,GAAalC,EAAAA,EAAAA,GAAYxY,GAEzB02D,GAAgBz5E,EAAAA,EAAAA,KAAQ,IACvB4kF,GAAcC,GAAiB9hE,IAAQ0a,GAIrCqnD,EAAAA,EAAAA,IAAUF,GAAW,CAACG,EAAOjmF,SACLD,IAAtBgmF,EAAc/lF,GAAoBimF,EAAQF,EAAc/lF,IAAM,MAJ9D,CAAC,GAMT,CAACikB,EAAK6hE,EAAWnnD,EAAYonD,IAIhC,MAAO,CACLpL,gBACAC,kBAJuBkI,EAAAA,EAAAA,GAAqBnI,GAMhD,C,kDC5BO,SAASuL,EACdtlF,EAAc8G,EAAqBnG,EAAoCJ,GAEvE,MAAM,SAAE+tE,GAAaxnE,EACrB,IAAKwnE,EACH,OAGF,MAAM1jD,GAASyH,EAAAA,EAAAA,IAASi8C,GAAY/tE,EAAU+tE,GAAY3tE,EAAU2tE,GAEpE,IAAIgW,GAAantB,EAAAA,EAAAA,IAAen3D,EAAM4qB,GAEtC,MAAMlsB,EAAOiC,EAAUmG,EAAQrI,QAS/B,OARIC,IACE,WAAYksB,GAAUA,EAAO6/B,OAC/B65B,EAAc,GAAEtkF,EAAK,iBAAgBw6C,EAAAA,EAAAA,IAAax6C,EAAMtB,MAC/Ck6D,EAAAA,EAAAA,IAAYl6D,KACrB4lF,GAAe,OAAK9pC,EAAAA,EAAAA,IAAax6C,EAAMtB,OAIpC4lF,CACT,C,wTCNA,MAmGA,GAAejmF,EAAAA,EAAAA,KAnGoCqB,IAG7C,IAH8C,QAClDoH,EAAO,cACPwuE,GACD51E,EACC,MAAM,gBACJ+gD,EAAe,mBAAE8kC,EAAkB,iBAAE5tE,IACnC5X,EAAAA,EAAAA,OAEE,WAAEwuE,GAAeznE,EAEjB9G,GAAOC,EAAAA,EAAAA,MACNulF,EAAeC,IAAoBp8E,EAAAA,EAAAA,OACnCq8E,EAAkBC,EAAgBC,IAAmBjjF,EAAAA,EAAAA,IAAQ,GAC9DkjF,GAAoB5hF,EAAAA,EAAAA,IAASuF,EAAAA,EAAAA,IAAoB1C,EAAS,SAC1DgnD,EAAUhnD,EAAQ0B,QAAQskB,OAAQwE,OAAOw8B,QAEzCg4B,GAAyBvgF,EAAAA,EAAAA,IAAgB,KAC7CoS,EAAiB,CACfxH,MAAOnQ,EAAK,wBACZ8G,QAAS9G,EAAK,mBACd8sB,OAAQ,CACNA,OAAQ,4BACRmf,QAAS,CACP85C,OAAQxO,EAAAA,GAAgByO,OAG5B75C,WAAYnsC,EAAK,SACjB,IAGEimF,GAA2B1gF,EAAAA,EAAAA,IAAiBqW,IAChD6pE,OAAiBtmF,GACjBomF,EAAmB,CAAE3pE,SACrBkqE,GAAwB,IAGpBI,GAAuB3gF,EAAAA,EAAAA,IAAgB,KAC3CkgF,OAAiBtmF,EAAU,IAGvBgnF,GAAiB5gF,EAAAA,EAAAA,IAAgBwS,UACrC6tE,IACAE,IAGA,MAAMx0D,EAAQxqB,EAAQ0B,QAAQskB,OAAQwE,MAChCmmC,QAAgBtG,EAAAA,GAAmB,cAAa7/B,EAAMlyB,YAAa+E,EAAAA,GAAeC,SAClFic,QAAa+lE,MAAM3uB,GAASyC,MAAM4R,GAAMA,EAAEzrD,SAChDklE,EAAmB,CACjB3pE,KAAM,IAAI4L,KAAK,CAACnH,GAAO,cACvBytC,SAAS,EACTu4B,QAAS/0D,EAAMg1D,YAAYpkE,MAAMqkE,QAAyBpnF,IAAnBonF,EAAEC,gBAA6BA,cACtE,IAoBJ,OACE7kF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,kCAAkCqmD,SAAU,EAAGG,KAAK,SAASrkD,QAlB7CiW,WAC3Bw2D,GAAcsX,EACb/3B,EACF63B,IAEAF,QAAuBW,MAAMP,GAAmB3rB,MAAM4R,GAAMA,EAAEzrD,UAGhEogC,EAAgB,CACdhiD,OAAQqI,EAAQrI,OAChByiD,QAASp6C,EAAQ1H,GACjBsiB,SAAUiU,EAAAA,GACV1uB,OAAQk6C,EAAAA,GAAkBslC,iBAE9B,GAKE9kF,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACL+d,MAAOxqB,EAAQ0B,QAAQskB,OAAQwE,MAC/Bo1D,kBAAgB,EAChBC,UAAW74B,EACX7rD,KAAK,UAEPN,EAAAA,GAAAC,cAAA,YAAO0zE,KAEP3zE,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyBK,EAAK8tD,EAAU,kBAAoB,oBAC5EnsD,EAAAA,GAAAC,cAACglF,EAAAA,EAAS,CACRhrE,KAAM4pE,EACNxhE,QAASkiE,EACTjgC,SAAUggC,IAEZtkF,EAAAA,GAAAC,cAAC+7C,EAAAA,EAAa,CACZ/5B,OAAQ8hE,EACRv1E,MAAOnQ,EAAK,kBACZ49C,eAAgBuoC,EAChBniE,QAAS4hE,EACTiB,UAAWvR,MAER,I,gGCxHX,QAAkN,WAAlN,EAAwhB,WAAxhB,EAAylB,WAAzlB,EAA4mB,WAA5mB,EAAiqB,WAAjqB,EAAstB,WAAttB,EAAuwB,WAAvwB,EAAm0B,WCyKn0B,SAASwR,EAAc7lF,GAAoC,IAAnC,QAAE8lF,GAA+B9lF,EACvD,MAAM,SAAEuvE,IAAazwE,EAAAA,EAAAA,MACfwR,ECnKR,SAAyB7S,GAA4C,IAA7BsoF,EAAav7E,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,YACtD,MAAO8F,EAAO01E,IAAY59E,EAAAA,EAAAA,IAAS29E,GAC7BE,GAAajjF,EAAAA,EAAAA,IAAS+pD,EAAAA,EAAAA,IAAkBtvD,IAAO,EAAOyF,EAAAA,GAAeC,SAa3E,OAXAjD,EAAAA,EAAAA,KAAU,KACR,WACE,IAAK+lF,EACH,OAGF,MAAMC,QAAqBC,EAAAA,EAAAA,IAAgBF,GAC3CD,EAAU,KAAGI,EAAAA,EAAAA,IAAQF,KACtB,EAPD,EAOI,GACH,CAACD,IAEG31E,CACT,CDmJgB+1E,CAAgBP,EA/IJ,aAiJ1B,OACEplF,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,EAAahE,QAASA,IAAM0uE,EAAS,CAAEpxE,GAAI2nF,EAAQ3nF,MACjEuC,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CAAC5T,UAAWmG,EAAeud,IAAK0jE,EAAQ3nF,GAAI6C,KAAK,QAAQqR,KAAMyzE,IACtEplF,EAAAA,GAAAC,cAAA,OAAK+D,MAAQ,eAAc4L,IAAS5R,UAAWmG,GAC7CnE,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAa,2BAC1CnE,EAAAA,GAAAC,cAAA,QAAMjC,UAAWmG,IAAsBsvE,EAAAA,EAAAA,IAAqB2R,GAAS3kC,cAAgB,KAGvFzgD,EAAAA,GAAAC,cAAA,QAAMjC,UAAWmG,GAAsBihF,EAAQ52E,OAGrD,CAEA,SAASo3E,EAAY/oF,GAUlB,IAVmB,QACpBuoF,EAAO,OACPtoF,EAAM,cACN+oF,EAAa,qBACbx7D,GAMDxtB,EACC,MAAM,iBAAE4xD,EAAgB,iBAAE+vB,IAAqBpgF,EAAAA,EAAAA,MACzCC,GAAOC,EAAAA,EAAAA,KAYb,OACE0B,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EDpNqiB,YCqN/jBhE,QAASA,KAZPkqB,EACFm0D,EAAiB,CACf/gF,GAAIX,EAAQytC,sBAAsB,EAAMu7C,WAAY,kBAAmBC,uBAAuB,IAGhGt3B,GAOiC,GAEjCzuD,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CAAC5T,UAAWmG,EAAeud,IAAK0jE,EAAQ3nF,GAAI6C,KAAK,QAAQqR,KAAMyzE,IACtEplF,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,KAElBnE,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAeiE,ED3Nw1B,aC4Nr3BnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,KAElBnE,EAAAA,GAAAC,cAAA,OAAKjC,UAAWmG,GACdnE,EAAAA,GAAAC,cAAA,QAAMjC,UAAWmG,GAAuB,IAAG0hF,MACzCx7D,GAAwBrqB,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,aAAajS,UAAWmG,KAE/DnE,EAAAA,GAAAC,cAAA,QAAMjC,UAAWmG,GAAsB9F,EAAK,gBAGlD,CAEA,SAAe3B,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAAqB,CAACC,EAAMyxC,KAA6B,IAA3B,OAAEvxC,GAAQuxC,EACtC,MAAM,kBAAE23C,EAAiB,iBAAEC,EAAgB,MAAEC,IAAUC,EAAAA,EAAAA,KAAwBvpF,EAAQE,IAAW,CAAC,EAGnG,MAAO,CACLkpF,oBACAC,mBACAC,QACA77D,sBAN2BC,EAAAA,EAAAA,KAA2B1tB,GAOvD,GATHD,EA5LsBoB,IAMK,IANJ,OACvBjB,EAAM,kBACNkpF,EAAiB,iBACjBC,EAAgB,MAChBC,EAAK,qBACL77D,GACsBtsB,EACtB,MAAMM,GAAOC,EAAAA,EAAAA,MACP,6BAAE8nF,IAAiChoF,EAAAA,EAAAA,OAClCioF,EAAWC,EAAaC,IAAkBvlF,EAAAA,EAAAA,IAAQ,IAClDwlF,EAAUC,EAAYC,IAAiB1lF,EAAAA,EAAAA,IAAQ,GAEhD+D,GAAMnE,EAAAA,EAAAA,IAAuB,MAC7B+lF,GAAkBhoF,EAAAA,EAAAA,KAAQ,KAC9B,IAAKqnF,EACH,OAGF,MAAMppF,GAASiC,EAAAA,EAAAA,MACf,OAAOmnF,EAAkB3mF,KAAK5B,IAAOT,EAAAA,EAAAA,KAAWJ,EAAQa,KAAK8B,OAAO7B,QAAQ,GAC3E,CAACsoF,KAEGY,EAAqBC,IAA0Bn/E,EAAAA,EAAAA,KAAUs+E,GAC1Dc,GAAuBnoF,EAAAA,EAAAA,KAAQ,IAAMgoF,GAAiBvnF,MAAM,EAtCvC,KAsCiE,CAACunF,IACvFI,EAA4BrpF,QAAQopF,GAAsB1mF,SAChE4mF,EAAAA,EAAAA,GAAoBjiF,GAAMgiF,IAA8Bd,GAAoBW,GAAqB,GACjG,MACMK,EAAuBvpF,SAC1BkpF,IACKX,GAHYO,GAAYH,IAIzBU,IAGP9qD,EAAAA,EAAAA,IAAW,IAAM4qD,GAAuB,IA9Cf,MAgDzBrnF,EAAAA,EAAAA,KAAU,KACR,GAAIonF,GAAuBD,GAAmBV,EAAkB,CAC9D,MAAMxoF,EAAKsG,YAAW,KACpB8iF,GAAuB,EAAM,GApDV,KAuDrB,MAAO,IAAMK,aAAazpF,EAC5B,CAEgB,GACf,CAACkpF,EAAiBV,EAAkBW,IAEvC,MAAMO,GAAevjF,EAAAA,EAAAA,IAAgB,KACnCwiF,EAA6B,CAAEtpF,WAC3BmpF,GACFM,IACAE,MAEAH,IACAI,IACF,IAGF,OACE1mF,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GDvGG,aCwGjBF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,aACbgC,EAAAA,GAAAC,cAAA,QACEjC,WAAWkC,EAAAA,EAAAA,GAAe6mF,GD1GkG,YC2G5H5mF,QAAS4mF,EAA4BI,OAAe3pF,GAEnDa,EAAK,mBAGTuoF,GAAuB5mF,EAAAA,GAAAC,cAACwmE,EAAAA,EAAQ,CAACzoE,UDhHgM,aCiHjOipF,GACCjnF,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GACTmmF,GDpHkS,WCqHlSG,GDrHwY,aCwH1YxmF,EAAAA,GAAAC,cAAA,OAAKjC,UDxH2B,YCyH9BgC,EAAAA,GAAAC,cAAA,OACEuL,MAAM,KACNC,OAAO,IACPwF,QAAQ,WACRzG,KAAK,OACL48E,MAAM,8BAENpnF,EAAAA,GAAAC,cAAA,QACEjC,UDjIyE,WCkIzE,YAAU,UACV,YAAU,UACVo3C,EAAE,uOACF5qC,KAAK,YAIXxK,EAAAA,GAAAC,cAAA,OAAKjC,UDzI4O,YC0I/OgC,EAAAA,GAAAC,cAAA,OAAKjC,UD1IyI,YC2I5IgC,EAAAA,GAAAC,cAAA,QAAMjC,UD3IyJ,YC2I/HK,EAAK,oBACrC2B,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLxC,UD7IgL,WC8IhL4R,MAAM,cACNzP,QAASgnF,GAETnnF,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,YAGfjQ,EAAAA,GAAAC,cAAA,OAAK8E,IAAKA,EAAK/G,WAAWkC,EAAAA,EAAAA,GDpJge,WCoJ7b,iBAC1D4mF,GAAsBznF,KAAI,CAAC+lF,EAAS7jF,IACtB8lF,IAAN9lF,EACLvB,EAAAA,GAAAC,cAAC2lF,EAAY,CACXR,QAASA,EACTtoF,OAAQA,EACR+oF,cAAeK,EA7HN,GA6HqC,EAC9C77D,qBAAsBA,IAGxBrqB,EAAAA,GAAAC,cAACklF,EAAc,CAACC,QAASA,SAOjC,KEmKV,GAAe1oF,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAwC,IAAtC,QAAE6F,EAAO,SAAE4a,GAAUzgB,EAC5B,MAAM,OACJxC,EAAM,SAAE6vE,EAAQ,QAAE9lE,GAChB1B,GAEE,cAAEkoE,EAAa,aAAEE,GAAiB1mE,EAAQskB,QAAU,CAAC,EACrDm8D,GAAkBta,EAAAA,EAAAA,GAAoB7nE,IAAUgkB,aAChDo+D,EAAgBD,GAClBrgE,EAAAA,EAAAA,KAAkBrqB,EAAQE,EAAQwqF,QAClC9pF,EAEEgqF,IAAYznE,IAAW0nE,EAAAA,EAAAA,KAAuB7qF,EAAQuI,EAAS4a,IAEnEqwC,UAAWs3B,EACXC,YAAaC,GACVJ,IAAapqF,EAAAA,EAAAA,KAAeR,GAAQirF,gBAAmB,CAAC,EAEvDC,GAAa91D,EAAAA,EAAAA,KAAWp1B,EAAQ+vE,GAAY7vE,GAC5CksB,GAAahsB,EAAAA,EAAAA,KAAWJ,EAAQE,GAEhCirF,EAAaxa,GAAevwE,EAAAA,EAAAA,KAAWJ,EAAQ2wE,QAAgB/vE,EAE/DwqF,EAAenhF,EAAQskB,QAAQ88D,OAIrC,MAAO,CACLH,aACA9+D,aACA++D,aACAxa,eACAF,gBACAka,gBACAC,YACAU,oBAXyBC,EAAAA,EAAAA,KAA6BvrF,EAAQorF,GAY9DvqC,OAXYxpB,EAAAA,EAAAA,KAAuBr3B,EAAQuI,GAY3CkyB,uBAAuBC,EAAAA,EAAAA,KAA4B16B,MAC/C4qF,GAAa,CACfE,iBACAE,oBAEH,GA1CejrF,EA1P6BoB,IAwB3C,IAxB4C,QAChDoH,EAAO,WACPuxD,EAAU,gBACV0xB,EAAkB,EAAC,YACnBC,EAAW,aACXC,EAAY,WACZR,EAAU,WACV9+D,EAAU,cACVqkD,EAAa,cACbka,EAAa,aACbha,EAAY,WACZwa,EAAU,UACVP,EAAS,eACTE,EAAc,iBACdE,EAAgB,mBAChBM,EAAkB,cAClBK,EAAa,MACb9qC,EAAK,qBACL+qC,EAAoB,sBACpBnxD,EAAqB,8BACrBoxD,EAA6B,8BAC7B/zB,EAA6B,8BAC7BhD,EAA6B,2BAC7Bg3B,GACD3qF,EACC,MAAM,iBACJ0wD,EAAgB,gBAAEwS,EAAe,cAAE0nB,EAAa,WAAEC,IAChDxqF,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAGPyG,GAAMnE,EAAAA,EAAAA,IAAuB,OAEnCk+E,EAAAA,EAAAA,IAAe/5E,EAAK0jF,IACpBhY,EAAAA,EAAAA,GACEtrE,EAAQrI,OACoB,YAA5BqI,EAAQ2jB,WAAW3M,KAAqBhX,EAAQ2jB,UAAUK,kBAAe3rB,EACzE+pF,IAEFsB,EAAAA,EAAAA,GAAgB9jF,EAAKI,EAAQrI,OAAQ0qF,EAAWE,EAAgBE,EAAkBS,IAElF7oF,EAAAA,EAAAA,KAAU,KACR,GAAK2F,EAAQupE,SAEb,MAAO,KACLga,IAA6B,CAAEI,0BAA2B,CAAC3jF,EAAQ1H,IAAKsrF,WAAW,GAAO,CAC3F,GACA,CAACL,EAA4BvjF,EAAQupE,SAAUvpE,EAAQ1H,KAE1D,MAAMurF,EAAwBZ,GAAmB,GAC1C98D,EAAS29D,IAAajoF,EAAAA,EAAAA,GAAQgoF,GAC/BE,EAASxrF,QAAQyH,EAAQ0B,QAAQskB,QAAQzqB,KAAKilC,WAAW,eACzDwjD,EAAazrF,QAAQyH,EAAQ0B,QAAQskB,QAAQzqB,KAAKilC,WAAW,yBAC7DyjD,EAAqD,wBAAjCjkF,EAAQ0B,QAAQskB,QAAQhP,MAAkChX,EAAQ0B,QAAQskB,OAAQwE,MACtG05D,IAAkBC,EAAAA,EAAAA,IAAuBnkF,IAE/C3F,EAAAA,EAAAA,KAAU,KACJwpF,GAIJjlF,WAAWklF,EAhEU,GAgECb,EAAmC,GACxD,CAACA,EAAiBa,EAAWD,IAEhC,MAAMvmC,IAAY7H,EAAAA,EAAAA,IAAkB71C,EAAK2sD,GAEnC63B,IAAwB3oF,EAAAA,EAAAA,IAAO,MACnC,MAAMsyE,EAAWsV,GAAsBpnF,SAAW+D,EAAQ1H,IAAM+qF,EAAqBpnF,QACrF,OAAO8nF,IAAW/jF,EAAQynE,YAAcsG,CACzC,EAHoC,KAKrC1zE,EAAAA,EAAAA,KAAU,KACJijD,IAAa8mC,GAAsBnoF,UACrCmoF,GAAsBnoF,SAAU,EAChC6/D,EAAgB,CAAEuoB,WAAW,IAC/B,GACC,CAAC/mC,GAAWwe,IAEf,MAAM,qBAAEthE,KAAyBC,EAAAA,EAAAA,GAAkB0rB,OAAS9tB,EAAWwrF,GAAuB,GAGxFpqF,IAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KAC9B0qF,IAAc9qF,EAAAA,EAAAA,KAAQ,IACnB0uE,EACHA,EAAchuE,KAAK45C,GAAWr6C,KAAYq6C,KAAS15C,OAAO7B,cAC1DF,GACH,CAAC6vE,EAAezuE,KAEb+0E,IAAgBn1E,EAAAA,EAAAA,KAAY,KACzBkkF,EAAAA,EAAAA,GACLrkF,EACA8G,EACA2iF,EACA9+D,EACAygE,GACAlC,EACAha,EACA9vB,EACA,CAAEiZ,cACFhC,EACAhD,IAED,CACDgF,EAAYr4D,EAAM8G,EAASuvD,EAA+BhD,EAC1D1oC,EAAY8+D,EAAYva,EAAcga,EAAekC,GAAahsC,KAG9D,kBACJhyB,GAAiB,oBAAEC,GAAmB,wBACtC2f,GAAuB,kBAAExqB,GAAiB,uBAC1C8K,GAAsB,sBAAEC,KACtBC,EAAAA,EAAAA,GAAuB9mB,GACrB2kF,QAA6ClsF,IAAxBkuB,GAgBrBi+D,GAAsBA,KAC1B,MAAMC,EAAOzkF,EAAQ0B,QAAQskB,QAAQy+D,KAChCA,GACLjB,EAAc,CAAEiB,OAAMzkF,QAAS,CAAErI,OAAQqI,EAAQrI,OAAQwR,UAAWnJ,EAAQ1H,KAAO,EAcrF,GADyB8qF,GAAkD,0BAAjCpjF,EAAQ0B,QAAQskB,QAAQzqB,KAEhE,OAAOV,EAAAA,GAAAC,cAAA,QAAM8E,IAAKA,IAGpB,GAAI2xD,EACF,OAAO12D,EAAAA,GAAAC,cAAA,QAAM8E,IAAKA,EAAK/G,UAAU,2BAA2B21E,MAyD9D,MAAM31E,IAAYkC,EAAAA,EAAAA,GAChB,kCACAsnF,IAAcI,GAAoB,WACjCsB,GAAUE,IAAsB,kBACjCM,IAAsB,gBACtBpB,GAAgB,eAChB3oF,IAGF,OACEK,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACLtH,IAAI4kD,EAAAA,EAAAA,IAAiBl9C,EAAQ1H,IAC7BO,UAAWA,GACX,kBAAiBmH,EAAQ1H,GACzB,iBAAgB0H,EAAQupE,eAAYlxE,EACpCy5C,YA7GqBvpC,KACvBm8E,EAAAA,EAAAA,GAAwBn8E,GACxB29B,GAAwB39B,EAAE,EA4GxBmU,cAAehB,KAEbuoE,IAAsBD,IAAeE,IACrCrpF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyBmC,QA7F3B+gB,KACmB,YAAjC/b,EAAQ0B,QAAQskB,QAAQhP,MAC1BysE,EAAW,CACT9rF,OAAQqI,EAAQrI,OAChBwR,UAAWnJ,EAAQ1H,IAEvB,GAuFoEk2E,MAEjEuV,GA1EDlpF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,sBAAsBqmD,SAAU,EAAGG,KAAK,SAASrkD,QApCtC2pF,KAC7Br7B,EAAiB,CACfy6B,QAAQ,EACRr5B,WAAYi4B,GAAYrqF,GACxBssF,SAAU1c,IAAgB,GAC1B2c,aAAc7kF,EAAQ0B,QAAQskB,QAAQ88D,QAAU,GAChD,GA+BEjoF,EAAAA,GAAAC,cAAC61E,EAAAA,EAAuB,CACtBp0D,IAAKvc,EAAQ1H,GACboE,QAASqmF,EACT9b,KAAM/0C,EACNjnB,QAAM,EACNL,gBAAc,IAEhB/P,EAAAA,GAAAC,cAAA,cAAS5B,EAAK,2BACd2B,EAAAA,GAAAC,cAAA,YAAO5B,EAAK,4BAA6BA,EAAK,SAAU8G,EAAQ0B,QAAQskB,QAAQ88D,OAAQ,OAExFjoF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyBK,EAAK,2BAgE/C8qF,GA3DL,WACE,MAAMc,EAAiB9kF,EAAQ0B,QAAQskB,QAAQ++D,WACzCC,EAAchlF,EAAQ0B,QAAQskB,QAAQg/D,YAC5C,OACEnqF,EAAAA,GAAAC,cAAA,QACEjC,UAAU,+CACVqmD,SAAU,EACVG,KAAK,SACLrkD,QAASwpF,IAET3pF,EAAAA,GAAAC,cAAC61E,EAAAA,EAAuB,CACtBp0D,IAAKvc,EAAQ1H,GACboE,QAASqmF,EACT9b,KAAM/0C,EACNjnB,QAAM,EACNL,gBAAc,IAEhB/P,EAAAA,GAAAC,cAAA,cAAS5B,EAAK8rF,EAAc,yBAA2B,4BACvDnqF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,2BACb+pF,IAAc14E,EAAAA,EAAAA,GAAWhR,EAAK4rF,EAAiB,2BAA6BE,EACzE,4BAA8B,iCAClCtxC,EAAAA,EAAAA,IAAax6C,EAAM0pF,IACnB,CAAC,qBAEH/nF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,4BACbqR,EAAAA,EAAAA,GAAWhR,EACV,iCACAA,EAAK,SAAU8G,EAAQ0B,QAAQskB,QAAQ88D,OAAQ,MAC9C,CAAC,qBAGNjoF,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,yBAAyBK,EAAK,gCAGpD,CAyBmB+rF,GACdhB,GACCppF,EAAAA,GAAAC,cAACoqF,EAA4B,CAACllF,QAASA,EAASwuE,cAAeA,KAEhE0V,IAAmBrpF,EAAAA,GAAAC,cAACqqF,EAAe,CAACxtF,OAAQywE,IAC5C7hD,IACC1rB,EAAAA,GAAAC,cAACsqF,EAAAA,EAAoB,CACnBtoE,OAAQwJ,GACR7X,OAAQ8X,GACRvmB,QAASA,EACT0iB,gBAAgB,SAChBxF,QAASsJ,GACTrJ,oBAAqBsJ,KAGrB,I,iOC5TV,MAQA,EARgDhqB,IAC9C,MAAM,OAAEqgB,GAAWrgB,EACb4oF,GAAsBxrE,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,uBAAwB+C,GAGnF,OAAOuoE,EAAsBxqF,EAAAA,GAAAC,cAACuqF,EAAwB5oF,QAAYpE,CAAS,ECwb7E,GAAed,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAMC,KAEW,IAFT,OACPC,EAAM,SAAEijB,EAAQ,gBAAE8H,EAAe,SAAEvgB,GACpCzK,EACC,MAAME,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAC1B63B,EAAYj3B,QAAQX,IAAQ63B,EAAAA,EAAAA,IAAc73B,IAC1Cs7C,EAAe36C,QAAQX,IAAQm/B,EAAAA,EAAAA,IAAiBn/B,IAChDo0B,GAAWs5D,EAAAA,EAAAA,KAAmB7tF,GAC9B8tF,GAAsBC,EAAAA,EAAAA,KAA0B/tF,GAChD+2C,GAAYjjB,EAAAA,EAAAA,IAAS5zB,IACrB,eAAE8tF,GAAmBhuF,EAAO20B,SAASC,MAE3C,IAAKz0B,GAAQA,EAAKmiD,eAAgBlqB,EAAAA,EAAAA,KAAqBp4B,GACrD,MAAO,CACLiuF,QAAQ,EACR15D,WACAu5D,sBACAE,kBAIJ,MAAM9qE,GAAMyQ,EAAAA,EAAAA,KAAU3zB,EAAQE,GACxB+zB,EAAgB8iB,OAAiDn2C,GAArCszB,EAAAA,EAAAA,KAAmBl0B,EAAQE,GACvDixD,EAAepa,GAAY/iB,EAAAA,EAAAA,KAAmBh0B,EAAQE,QAAUU,EAChEstF,EAAWj6D,GAAgBk9B,EAC3BvkC,GAAiBC,EAAAA,EAAAA,KAAqB7sB,EAAQE,GAC9CiuF,EAAmC,WAApBljE,GAAgC9H,IAAaiU,EAAAA,GAC5Dg3D,EAAyC,WAApBnjE,GAAgC9H,IAAaiU,EAAAA,GAClEa,GAAqBC,EAAAA,EAAAA,KAAyBl4B,EAAQ0K,GAEtDowC,GAAgBuzC,EAAAA,EAAAA,IAAiBnuF,EAAQijB,EAAUnjB,EAAOk1B,eAE1Do5D,IAAgBv3C,IAAYw3C,EAAAA,EAAAA,KAAoBvuF,EAAQE,GACxDsuF,EAAgB1tF,QAAQoiB,GAAOorE,GAC/BG,GAAeD,GAAiB1tF,SAAQ4tF,EAAAA,EAAAA,KAA0B1uF,EAAQE,IAC1EyuF,EAAaL,IAAkBprE,EAC/B0rE,EAAe9tF,SAClBqtF,GAAgBhuF,EAAK+2B,WAAaa,GAAa0jB,IAAiBt7C,EAAK0uF,aAElEC,EAAYX,GAAgBC,EAC5BW,EAAUC,EAAAA,KAAuBl7D,EAAAA,EAAAA,IAAS3zB,EAAKU,MAAQ+rB,IAAmB1J,IAAQ/iB,EAAKg7C,aACvFkU,EAAAA,EAAAA,IAAwBlvD,EAAKU,IAC7BouF,EAAUd,IAAiBvhE,IAAmBgiE,EAC9CM,EAAWp0C,GAAkBqzC,IAAiBS,EAC9CO,EAAoBH,EAAAA,IAAuBb,GAAgBhuF,EAAKe,aAChEkuF,EAAqBJ,EAAAA,IAAuBb,IAAiBhuF,EAAKe,eAClEf,EAAKq1B,aAAa65D,YAAelvF,EAAKo8C,YAAaf,EAAAA,EAAAA,IAAiBr7C,IACpEmvF,EAAoBnB,GAAgBl6D,GAAcq7D,kBAClDC,EAAgBpB,IAChB1yC,GAAgB1jB,KAAeu3D,IAAqBrnB,EAAAA,EAAAA,IAAiB9nE,EAAM,gBAC3EqvF,GAAqBD,IAAkB9zC,GAAgB1jB,GACvD03D,EAAsBtB,EAAel6D,GAAcy7D,qBAAkB9uF,EACrE+uF,EAAmB7uF,QAAQX,GAAM0uF,aAAe1uF,EAAKyvF,cACrDC,EAAwB/uF,QAAQX,GAAM0uF,aAAe1uF,EAAK2vF,eAC1DC,IAAezrF,EAAAA,EAAAA,KAA0BtE,GAEzCgwF,EAAgBlvF,SAAQmvF,EAAAA,EAAAA,KAAuCjwF,EAAQE,IAG7E,MAAO,CACL+tF,QAAQ,EACRl2D,YACAE,qBACAw2D,cACAD,gBACAI,eACAE,YACAC,UACAE,UACAK,oBACAC,gBACAC,oBACAN,WACAC,oBACAC,qBACAK,sBACAE,mBACAE,wBACAE,cACAG,cAtBmBC,EAAAA,EAAAA,KAAuBnwF,EAAQE,KAAYguF,GAAUkC,sBAuBxEJ,gBACAlC,sBACAv5D,WACAy5D,iBACAqC,qBAAsBlwF,EAAKmwF,iBAC3B3B,aACD,GAtFe5uF,EA9W6BoB,IAiC3C,IAjC4C,OAChDjB,EAAM,SACNijB,EAAQ,OACR8qE,EAAM,SACNvjF,EAAQ,UACRqtB,EAAS,YACT02D,EAAW,cACXD,EAAa,WACbG,EAAU,aACVC,EAAY,UACZE,EAAS,QACTC,EAAO,QACPE,EAAO,kBACPK,EAAiB,cACjBC,EAAa,kBACbC,EAAiB,SACjBN,EAAQ,kBACRC,EAAiB,mBACjBC,EAAkB,oBAClBK,EAAmB,mBACnBx3D,EAAkB,WAClBirD,EAAU,iBACVD,EAAgB,iBAChB0M,EAAgB,sBAChBE,EAAqB,YACrBE,EAAW,aACXG,EAAY,cACZF,EAAa,oBACblC,EAAmB,SACnBv5D,EAAQ,qBACR87D,EAAoB,eACpBrC,EAAc,cACdtM,GACDvgF,EACC,MAAM,YACJovF,EAAW,eACXC,EAAc,oBACdC,EAAmB,WACnBC,EAAU,4BACVC,EAA2B,4BAC3BC,EAA2B,iBAC3Bx3E,EAAgB,SAChB64D,GAAQ,uBACR4e,GAAsB,uBACtBC,GAAsB,sBACtBC,GAAqB,iBACrB1zC,GAAgB,YAChB2zC,GAAW,uBACX3Q,KACE7+E,EAAAA,EAAAA,MAEEyvF,IAAgBjtF,EAAAA,EAAAA,IAA0B,MAC1CvC,IAAOC,EAAAA,EAAAA,MACNkiB,GAAYstE,KAAiBpmF,EAAAA,EAAAA,KAAS,IACtCiZ,GAAcC,KAAmBlZ,EAAAA,EAAAA,SAAsClK,GAExEuwF,IAAuBnqF,EAAAA,EAAAA,IAAgB,KAC3CkqF,IAAc,GACd,MAAMhtE,EAAO+sE,GAAczsF,QAASwM,wBACpCgT,GAAgB,CAAE1U,EAAG4U,EAAKE,MAAO7U,EAAG2U,EAAKG,QAAS,IAG9C+sE,IAAwBpqF,EAAAA,EAAAA,IAAgB,KAC5CkqF,IAAc,EAAM,IAGhBG,IAAuBrqF,EAAAA,EAAAA,IAAgB,KAC3Cgd,QAAgBpjB,EAAU,IAGtB0wF,IAAuBtqF,EAAAA,EAAAA,IAAgB,KAC3CupF,EAAY,CAAErwF,WACV2vF,GACFz2E,EAAiB,CACf7Q,QAAqB9G,GAAZs2B,EAAiB,sCAA8C,sCAE5E,IAGIw5D,IAAiBvqF,EAAAA,EAAAA,IAAgB,KACrCwpF,EAAe,CAAEtmD,QAAS,UAAW,IAGjCsnD,IAAmBxqF,EAAAA,EAAAA,IAAgB,KACvC0pF,EAAW,CAAExwF,UAAS,IAGlBuxF,IAAgBzqF,EAAAA,EAAAA,IAAgB,KACpCgqF,GAAY,CAAE30C,OAAQn8C,GAAS,IAG3BwxF,IAAuB1qF,EAAAA,EAAAA,IAAgB,KAEzC6pF,GADEb,EACqB,CAAE9vF,SAAQyxF,oBAAgB/wF,GAI5B,CAAEV,SAAQyxF,eAAgB7D,GAAsB,IAGnE8D,IAA0B5qF,EAAAA,EAAAA,IAAgB,KAC9C4pF,EAA4B,CAAEpJ,OAAQqK,EAAAA,GAAkBC,cAAe,IAGnEC,IAAoB/qF,EAAAA,EAAAA,IAAgB,KACpCk8E,EACFxB,OAIF+O,IAEI/lF,EAEkB8K,SAASua,cAAgC,uBACjDza,QACHy6E,GAETvuE,EAAAA,EAAAA,KAAe,MACb0f,EAAAA,EAAAA,IAAoB8wD,EAAsB,IAG5C7qF,WAAW6qF,EA5Ha,KA6H1B,IAGIC,IAAwBjrF,EAAAA,EAAAA,IAAgB,KAC5CirE,GAAS,CAAEpxE,GAAIX,IACfmgF,GAAuB,CAAEngF,SAAQ0kB,WAAW,GAAO,IAG/CstE,IAAoBlrF,EAAAA,EAAAA,IAAgB,KACxC2pF,EAA4B,CAAEt0C,OAAQn8C,GAAS,IAG3CiyF,IAA0BnrF,EAAAA,EAAAA,IAAiB8J,IAC1Cg+E,GAAc5S,EAAAA,KAAUprE,EAAEshF,WAI/BthF,EAAE4L,iBACFq1E,KAAmB,IAGfM,IAAsBrrF,EAAAA,EAAAA,IAAgB,CAACsrF,EAAiBC,KAC5D,MACMC,EAAkB,oBADLD,EAAS9sB,MAAM,KAAK,GACegtB,gBAChDp/E,EAAO5R,GAAK+wF,GAClB,GAAIn/E,IAASm/E,EACX,OAAO/wF,GAAK6wF,EAASj/E,GAGvB,MACMq/E,EADkB,IAAIC,KAAKC,aAAa,CAACr+D,GAAW,CAAEhV,KAAM,aAC3BszE,GAAGN,GAC1C,OAAO9wF,GAAM,GAAE6wF,SAAgBI,EAAe,IAG1C1S,IAAaj+E,EAAAA,EAAAA,KAAQ,IACrBiuF,EAAsBvuF,GAAK,sBAExB4wF,GAAoB,oBAAqBvE,IAC/C,CAACA,EAAqBuE,GAAqBrC,EAAevuF,KAEvDqxF,IAAqB/wF,EAAAA,EAAAA,KAAQ,KACjC,GAAKsuF,EAEL,OAAOgC,GAAoB,yBAA0BhC,EAAqB,GACzE,CAACgC,GAAqBhC,IAEnB0C,IAAa/rF,EAAAA,EAAAA,IAAgB,KACjC8pF,GAAuB,CAAE5wF,SAAQ0kB,WAAW,IAC5CisE,GAAuB,CAAE3wF,SAAQyxF,oBAAgB/wF,GAAY,IAGzDoyF,IAAuBhsF,EAAAA,EAAAA,IAAgB,KAC3C+pF,GAAsB,CAAE7wF,UAAS,IAG7B+yF,IAAuBjsF,EAAAA,EAAAA,IAAgB,KACtCqpF,IAELhzC,GAAiB,CACf2wC,eAAgB,IAAIA,EAAgBqC,KAEtCQ,GAAuB,CAAE3wF,SAAQyxF,oBAAgB/wF,IAEjDwY,EAAiB,CAAE7Q,QAAS8pF,GAAoB,wBAAyBhC,KAAwB,KAGnGrU,EAAAA,EAAAA,GAAW,CACT,QAASmW,KAGX,MAAMe,IAAkEnxF,EAAAA,EAAAA,KAAQ,IACvEW,IAAA,IAAC,UAAEoiD,EAAS,OAAEz/B,GAAQ3iB,EAAA,OAC3BU,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLkP,OAAQklB,EACRjlB,MAAM,cACNtP,KAAK,UACLtC,UAAWikB,EAAS,SAAW,GAC/B9hB,QAASuhD,EACT7xC,UAAWxR,GAAK,qBAEhB2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAAqB,mBAC3B,GAEV,CAAC62B,EAAoBx2B,KAExB,OACE2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,kBACX8hF,GAAcgN,GACd9sF,EAAAA,GAAAC,cAAC4hD,EAAAA,EAAY,CACX7jD,UAAU,2CACV8jD,QAASguC,GACT5tE,UAAU,SAEVliB,EAAAA,GAAAC,cAACwhB,EAAAA,EAAQ,CAACrC,KAAK,WAAWjf,QAASmuF,IAChC1R,IAEH58E,EAAAA,GAAAC,cAACwhB,EAAAA,EAAQ,CAACrC,KAAK,UAAUjf,QAASyvF,IAC/BvxF,GAAK,2BAER2B,EAAAA,GAAAC,cAAC0tB,EAAAA,EAAa,MACbs/D,GACIjtF,EAAAA,GAAAC,cAACwhB,EAAAA,EAAQ,CAACrC,KAAK,YAAYjf,QAAS0vF,IAAuBH,IAChE1vF,EAAAA,GAAAC,cAACwhB,EAAAA,EAAQ,CAACrC,KAAK,eAAejf,QAASwvF,IAAatxF,GAAK,WAG3DiJ,GACAtH,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACGgvE,IAAqB4M,IAA0BjB,GAAgBe,IAC9DvsF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,OACLqP,QAAM,EACNo5C,OAAK,EACL5oD,QAAS+tF,IAER7vF,GAAKs2B,EAAY,qBAAuB,qBAG5CkrD,GAAoB4M,GACnBzsF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,OACLqP,QAAM,EACNo5C,OAAK,EACL5oD,QAAS+tF,IAER7vF,GAAK,uBAGTwhF,GAAoBwL,GACnBrrF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,OACLqP,QAAM,EACNo5C,OAAK,EACL5oD,QAASguF,IAER9vF,GAAK,aAGTwhF,GAAoBuL,GACnBprF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,OACLqP,QAAM,EACNo5C,OAAK,EACL5oD,QAASiuF,IAER/vF,GAAK,eAGTwhF,GAAoB0L,GACnBvrF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,OACLqP,QAAM,EACNo5C,OAAK,EACL5oD,QAASkuF,IAERhwF,GAAK,YAGTqtF,GACC1rF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLkP,OAAQklB,EACRjlB,MAAM,cACNtP,KAAK,UACLH,QAASwuF,GACT9+E,UAAWxR,GAAK,mCAEhB2B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,mBAAmB,oBAGnC2tF,GACC3rF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLmP,MAAM,cACNtP,KAAK,UACLH,QAAS2uF,GACTj/E,UAAU,QAEV7P,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,kBAAkB,sBAKrC8hF,GAAcpiF,QAAQ2uF,IACtBrsF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLzC,UAAU,eACV2R,OAAQklB,EACRjlB,MAAM,cACNtP,KAAK,UACLH,QAASquF,GACT3+E,UAAuBxR,GAAZs2B,EAAiB,oBAA4B,mBAExD30B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,iBAAiB,mBAC9BgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,SAASquF,IAG5BrsF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLuE,IAAK8oF,GACL7vF,UAAWwiB,GAAa,SAAW,GACnC/f,OAAK,EACLkP,QAASrI,EACThH,KAAK,UACLsP,MAAM,cACN2W,SAAUskE,EACVh7E,UAAU,eACV1P,QAAS4tF,IAET/tF,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,iBAAiB,oBAE/B2iB,IACC3gB,EAAAA,GAAAC,cAACuqF,EAAmB,CAClB1tF,OAAQA,EACRijB,SAAUA,EACVkC,OAAQzB,GACR5M,OAAQ+M,GACRovE,iBAAkBzoF,IAAau4E,EAC/BlrD,UAAWA,EACX02D,YAAaA,EACbG,aAAcA,EACdE,UAAWA,EACXC,QAASA,EACTE,QAASA,EACTK,kBAAmBA,EACnBC,cAAeA,EACfC,kBAAmBA,EACnBN,SAAUA,EACVC,kBAAmBA,EACnBC,mBAAoBA,EACpBK,oBAAqBA,EACrB2D,oBAAqBxB,GACrByB,iBAAkBnQ,EAClBoQ,mBAAoBhC,GACpBiC,cAAexB,GACfyB,kBAAmBvB,GACnBxsE,QAAS2rE,GACT1rE,oBAAqB2rE,KAGrB,KA8FV,SAASW,IACP,MAAMyB,EAAcj+E,SAASua,cAAgC,mCAC7D0jE,GAAan+E,OACf,C,wEC1hBA,MAQA,EAR+CtQ,IAC7C,MAAM,OAAEqgB,GAAWrgB,EACbk1C,GAAqB93B,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,sBAAuB+C,GAGjF,OAAO60B,EAAqB92C,EAAAA,GAAAC,cAAC62C,EAAuBl1C,QAAYpE,CAAS,C,wECL3E,MAQA,EAR2CoE,IACzC,MAAM,OAAEqgB,GAAWrgB,EACb0uF,GAAatxE,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,kBAAmB+C,GAGrE,OAAOquE,EAAatwF,EAAAA,GAAAC,cAACqwF,EAAe1uF,QAAYpE,CAAS,C,6LCC3D,MAmCA,GAAed,EAAAA,EAAAA,KAnCkBqB,IAA0C,IAAzC,QAAEwyF,EAAO,UAAEC,EAAS,aAAErtE,GAAcplB,EACpE,MAAO0yF,EAAWC,EAAaC,IAAiB3vF,EAAAA,EAAAA,KAY1ChD,GAAYkC,EAAAA,EAAAA,GAChB,aACAuwF,GAAa,WAGf,OACEzwF,EAAAA,GAAAC,cAAA,OACEjC,UAAWA,EACX4yF,OAAQztE,EACRyrD,YAAa8hB,EACb5U,YApBqBpuE,IACvB,MAAQmjF,cAAeC,GAAapjF,EAEhCojF,GACFpjF,EAAEM,kBAGJ2iF,GAAe,EAcb,oBAEA3wF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,kBACbgC,EAAAA,GAAAC,cAAA,OAAKjC,UAAY,cAAYuyF,EAAU,QAAU,cACjDvwF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,SAAQ,iCACrBwyF,GAAaxwF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,eAAeuyF,EAAU,iBAAmB,wBAExE,IChBH,IAAKp9C,EAAa,SAAbA,GAAa,OAAbA,EAAa,YAAbA,EAAa,oBAAbA,EAAa,uBAAbA,CAAa,MAMzB,MAkGA,GAAez2C,EAAAA,EAAAA,KAhGgBqB,IAEzB,IAF0B,OAC9BkkB,EAAM,UAAEoxB,EAAS,OAAEE,EAAM,aAAEpwB,EAAY,eAAEK,GAC1CzlB,EACC,MAAMM,GAAOC,EAAAA,EAAAA,MACP,iBAAE0X,IAAqB5X,EAAAA,EAAAA,MAEvB2yF,GAAiBnwF,EAAAA,EAAAA,IAAe,MAChCowF,GAAgB92D,EAAAA,EAAAA,GAAYmZ,IAC5B,aAAE3zC,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkBqiB,GAC3D1H,EAAYiJ,GAAkBA,GAAgBhJ,WAEpDhb,EAAAA,EAAAA,KAAU,IAAOyiB,GAASuJ,EAAAA,EAAAA,GAAsB+nB,QAAU/1C,GAAY,CAACykB,EAAQsxB,IAE/E,MAAM09C,GAAkBrtF,EAAAA,EAAAA,IAAgBwS,UACtC,MAAQ86E,aAAcC,GAAOzjF,EAC7B,IAAI2L,EAAgB,GAEpB,KAAI83E,EAAG93E,OAAS83E,EAAG93E,MAAMjZ,OAAS,IAAO+wF,EAAGj8E,OAAUi8E,EAAGj8E,MAAM9U,QAExD,GAAI+wF,EAAGj8E,OAASi8E,EAAGj8E,MAAM9U,OAAS,EAAG,CAC1C,MAAMgxF,QAAoB73E,EAAAA,EAAAA,GAA8B43E,EAAGj8E,OACrDoqB,EAAgB8xD,SAAqBl3E,EAAAA,EAAAA,GAAgBk3E,EAAY,GAAGnhF,KAAMmhF,EAAY,IAG5F,GAFmB5tE,GAAkB8b,IAAiBllB,EAAAA,EAAAA,IAAuBoJ,EAAgB8b,GAI3F,YADAtpB,EAAiB,CAAE7Q,QAAS9G,EAAKkc,EAAY,6BAA+B,iCAG1E62E,GAAahxF,SACfiZ,EAAQA,EAAMqB,OAAO02E,GAEzB,OAbE/3E,EAAQA,EAAMqB,OAAOrQ,MAAMgN,KAAK85E,EAAG93E,QAerCk6B,IACApwB,EAAa9J,GAAOg6B,QAAoB71C,EAAU,IAG9C6zF,GAAuBztF,EAAAA,EAAAA,IAAiB8J,IAC5C,MAAQwjF,aAAcC,GAAOzjF,EAEzByjF,EAAG93E,OAAS83E,EAAG93E,MAAMjZ,OAAS,IAChCmzC,IACApwB,EAAa9Y,MAAMgN,KAAK85E,EAAG93E,QAAQ,GACrC,IAGIwgE,GAAkBj2E,EAAAA,EAAAA,IAAiB8J,IACvCA,EAAEM,kBAEF,MAAQiX,OAAQqsE,EAAYT,cAAeC,GAAapjF,GAIrD4jF,EAA8B3mF,QAAQ,2BACpCmmF,GAAcA,EAA6BnmF,QAAQ,4BAGtDomF,EAAe3vF,QAAUoD,OAAOT,YAAW,KACzCwvC,GAAQ,GA5Dc,KA8D1B,IASF,IAAK7zC,EACH,OAGF,MAAM6xF,EAAoBl+C,GAAa29C,EAEjChzF,GAAYkC,EAAAA,EAAAA,GAChB,WACAP,GAGF,OACEK,EAAAA,GAAAC,cAACuxF,EAAAA,EAAM,CAAC/+C,YAAY,0BAClBzyC,EAAAA,GAAAC,cAAA,OACEjC,UAAWA,EACX89E,YAAajC,EACb4X,WAtBiBC,KACjBX,EAAe3vF,SACjBoD,OAAO0iF,aAAa6J,EAAe3vF,QACrC,EAoBIwvF,OAAQr9C,EACRpzC,QAASozC,GAETvzC,EAAAA,GAAAC,cAAC0xF,EAAU,CAACxuE,aAAc8tE,EAAiBT,WAAYe,IACtDA,GAAqBvxF,EAAAA,GAAAC,cAAC0xF,EAAU,CAACxuE,aAAckuE,EAAsBd,SAAO,KAExE,G,wECzHb,MAQA,EARyC3uF,IACvC,MAAM,OAAEqgB,GAAWrgB,EACbm1C,GAAe/3B,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,gBAAiB+C,GAGrE,OAAO80B,EAAe/2C,EAAAA,GAAAC,cAAC82C,EAAiBn1C,QAAYpE,CAAS,C,8pBCJhD,MAAMo0F,EAKnBC,WAAAA,CACEC,EACQt4B,EACA5G,GACR,KAFQ4G,UAAAA,EAAsB,KACtB5G,QAAAA,EAA6Bm/B,EAAA,qBAAAA,EAAA,kBALnB,GAOlBC,KAAK/qF,MAAQmL,SAASnS,cAAc,SACpC+xF,KAAK/qF,MAAM/C,IAAM4tF,EACjBE,KAAK/qF,MAAMqmD,yBAA0B,EACrC0kC,KAAK/qF,MAAMomD,OAAQ,EACfuF,EAAQ5uD,OACVguF,KAAK/qF,MAAM0R,aAAa,QAASi6C,EAAQ5uD,OAE3CguF,KAAK/qF,MAAMjD,MAAMynC,SAAW,WAC5BumD,KAAK/qF,MAAMgrF,OAEND,KAAKp/B,QAAQxiD,SAChB4hF,KAAK/qF,MAAMsmD,MAAO,IAGpBzrB,EAAAA,EAAAA,KAAgB,KACdkwD,KAAKx4B,UAAUjnD,YAAYy/E,KAAK/qF,OAEhC+qF,KAAKE,4BAA4B,GAErC,CAEO9lB,IAAAA,IACD4lB,KAAK/oF,WAAc+oF,KAAK/qF,QAC5B+qF,KAAKE,6BACDF,KAAK/qF,MAAMkrF,SACbC,EAAAA,EAAAA,GAASJ,KAAK/qF,OAEhB+qF,KAAK/oF,WAAY,EACnB,CAEO6V,KAAAA,GACAkzE,KAAK/oF,WAAc+oF,KAAK/qF,QACxB+qF,KAAK/qF,MAAMkrF,QACdH,KAAK/qF,MAAM6X,QAEbkzE,KAAK/oF,WAAY,EACnB,CAEOopF,OAAAA,GACLL,KAAKlzE,QACLkzE,KAAK/qF,OAAOwR,SACZu5E,KAAK/qF,WAAQzJ,CACf,CAEO80F,cAAAA,CAAe7mD,GACpBumD,KAAKp/B,QAAQnnB,SAAWA,EACxBumD,KAAKE,4BACP,CAEQA,0BAAAA,GACN,MAAM,KAAE5xF,EAAMmrC,UAAU,EAAEv/B,EAAC,EAAEC,IAAQ6lF,KAAKp/B,SAC1Cx0C,EAAAA,EAAAA,KAAe,KACb,IAAK4zE,KAAK/qF,MAAO,OACjB,MAAMA,EAAQ+qF,KAAK/qF,OACb,MAAEuE,EAAK,OAAEC,GAAWumF,KAAKx4B,UAAU5rD,yBACzCk0B,EAAAA,EAAAA,KAAgB,KACd76B,EAAMjD,MAAM2J,KAAQ,GAAErD,KAAK7J,MAAMyL,EAAIV,OACrCvE,EAAMjD,MAAMgsC,IAAO,GAAE1lC,KAAK7J,MAAM0L,EAAIV,OACpCxE,EAAMjD,MAAMwH,MAAS,GAAElL,MACvB2G,EAAMjD,MAAMyH,OAAU,GAAEnL,KAAQ,GAChC,GAEN,E,2HCrDF,MAAMiyF,EAAO,KAAOr1C,EAAAA,E,qCCpBpB,MAQA,EAR0Ct7C,IACxC,MAAM,OAAEqgB,GAAWrgB,EACb4wF,GAAgBxzE,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,iBAAkB+C,GAGvE,OAAOuwE,EAAgBxyF,EAAAA,GAAAC,cAACuyF,EAAkB5wF,QAAYpE,CAAS,EC6B3Di1F,EAAiB,iBA6CjBC,EAA8B,IAG9BC,EAAc,CAClB,MAAO,SAAU,QAAS,SAAU,WAAY,OAAQ,MAAO,OAAQ,YAAa,UAAW,UAAW,SAmhB5G,GAAej2F,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAiD,IAA/C,OAAExC,EAAM,SAAEijB,GAAoBzgB,EACrC,MAAM,oBAAEszF,GAAwBh2F,EAAO20B,SAASC,MAEhD,MAAO,CACLohE,sBACA9pE,UAAWhsB,GAAUijB,GAAW8I,EAAAA,EAAAA,KAAYjsB,EAAQE,EAAQijB,IAAW+I,eAAYtrB,EACnFu3B,oBAAoBC,EAAAA,EAAAA,KAAqBp4B,GACzCy6B,uBAAuBC,EAAAA,EAAAA,KAA4B16B,GACpD,GATeD,EAngB4BoB,IA+B1C,IA/B2C,IAC/CgH,EAAG,GACHtH,EAAE,OACFX,EAAM,aACNi6B,EAAY,uBACZ87D,EAAsB,aACtB58C,EAAY,kBACZD,EAAiB,gBACjB5d,EAAe,QACfN,EAAO,SACP36B,EAAQ,QACRqxB,EAAO,YACP0nB,EAAW,wBACXlF,EAAuB,qBACvBC,EAAoB,kBACpBkF,EAAiB,iBACjBvZ,GAAgB,aAChBwZ,GAAY,oBACZC,GAAmB,oBACnBC,GAAmB,4BACnBC,GAA2B,UAC3BztB,GAAS,mBACTiM,GAAkB,sBAClBsC,GAAqB,oBACrBu7D,GAAmB,SACnBp8C,GAAQ,kBACRC,GAAiB,OACjBxD,GAAM,SACN6/C,GAAQ,QACR96D,GAAO,OACPC,IACDl6B,EACC,MAAM,gBACJg1F,GAAe,mBACfC,GAAkB,oCAClB75D,KACE/6B,EAAAA,EAAAA,MAGJ,IAAIo7B,IAAW54B,EAAAA,EAAAA,IAAuB,MAClCmE,IACFy0B,GAAWz0B,GAIb,MAAMkuF,IAAsBryF,EAAAA,EAAAA,IAAe,MAErCsyF,IAAWtyF,EAAAA,EAAAA,IAAuB,MAElCuyF,IAAmBvyF,EAAAA,EAAAA,IAAuB,MAE1CwyF,IAAkBxyF,EAAAA,EAAAA,IAA0B,MAE5CyyF,IAAoBzyF,EAAAA,EAAAA,IAA0B,MAE9C0yF,IAAuB1yF,EAAAA,EAAAA,IAAuB,MAE9CvC,IAAOC,EAAAA,EAAAA,KACPi1F,IAAuB3yF,EAAAA,EAAAA,KAAO,IAC7B4yF,GAAqBC,GAAmBC,KAAsB1yF,EAAAA,EAAAA,MAC9D2yF,GAA6BC,KAAkClsF,EAAAA,EAAAA,OAC/DmsF,GAAeC,KAAoBpsF,EAAAA,EAAAA,OACnCqsF,GAAyBC,KAA8BtsF,EAAAA,EAAAA,KAAkB,IAC1E,SAAEJ,KAAaC,EAAAA,EAAAA,MACf0sF,GAAiB3sF,KAAa6K,EAAAA,IAAU+hF,EAAAA,KAEvCC,GAAoBC,KAAyB1sF,EAAAA,EAAAA,KAAS,IAE7DlI,EAAAA,EAAAA,KAAU,KACR40F,GAAsB12F,QAAQszC,GAA2BC,GAAsB,GAC9E,CAACA,EAAsBD,IAE1B,MAAMqjD,IAAiBzwF,EAAAA,EAAAA,IAAgB,KACrCwwF,IAAsB,EAAM,KF9IjB,SACb5lE,EACAgL,EACA45D,EACAC,EACAC,EACAgB,EACAj9D,EACAS,EACA36B,GAEA,MAAM+6D,GAAcC,EAAAA,EAAAA,GAAwB3+B,GAAW1B,GACjDy8D,GAAcC,EAAAA,EAAAA,GAAet8B,GAAa,GAC1CL,GAAMC,EAAAA,EAAAA,KACN28B,GAAc7zF,EAAAA,EAAAA,IAAuC,IAAI8zF,KAEzDC,GAAe/wF,EAAAA,EAAAA,IAAiB2kC,IACpCA,EAAI18B,SAASpO,IACX,MAAMm3F,EAASH,EAAYrzF,QAAQi5B,IAAI58B,GACnCm3F,IACFA,EAAOvC,UACPoC,EAAYrzF,QAAQyzF,OAAOp3F,GAC7B,GACA,IAGEq3F,GAAsBlxF,EAAAA,EAAAA,IAAgB,KAC1C,KAAKk0B,GAAY0B,EAASp4B,SAAYgyF,EAAgBhyF,SAAYiyF,EAAkBjyF,SAAS,OAE7F,MAAMxE,GAASiC,EAAAA,EAAAA,MACTk2F,EAAmB,IAAIhyF,IAAI0xF,EAAYrzF,QAAQ4oB,QAChC3f,MAAMgN,KAAKmiB,EAASp4B,QAAQ2W,iBAA8B,kBAElElM,SAASokC,IACpB,IAAKA,EAAQ53B,QAAQ28E,SACnB,OAEF,MAAMC,EAAY,GAAEX,IAAWrkD,EAAQ53B,QAAQ28E,WAAW98B,GAAe,KACnE5vB,EAAa2H,EAAQ53B,QAAQiwB,WAEnCysD,EAAiBF,OAAOI,GAExB,MAAMC,GAAWC,EAAAA,EAAAA,IAAgC7sD,GACjD,IAAK4sD,EACH,OAGF,MAAME,EAAehC,EAAgBhyF,QAASwM,wBACxCynF,EAAgBplD,EAAQriC,wBACxB1B,GAAIzL,EAAAA,EAAAA,KAAO40F,EAAc1nF,KAAOynF,EAAaznF,MAAQynF,EAAa5pF,MAAO,GACzEW,GAAI1L,EAAAA,EAAAA,KAAO40F,EAAcrlD,IAAMolD,EAAaplD,KAAOolD,EAAa3pF,OAAQ,GAE9E,GAAIgpF,EAAYrzF,QAAQmC,IAAI0xF,GAG1B,YAFeR,EAAYrzF,QAAQi5B,IAAI46D,GAChC3C,eAAepmF,EAAGC,GAI3B,MAAM4rD,EAAcn7D,EAAO64B,aAAa12B,KAAKupC,GAC7C,IAAKyvB,EACH,OAEF,MAAMu9B,EAAOv9B,GAAatpB,iBAAkB8mD,EAAAA,EAAAA,KAAgC34F,EAAQm7D,EAAYtpB,gBAC1F+mD,EAAW,CACflB,EAAUhsD,EAAY4vB,EAAaL,GACnCt4D,OAAO7B,SAAS+nB,KAAK,MAoG7BrP,eAA2BvZ,GAwBI,IAxBH,YAC1Bk7D,EAAW,gBACXq7B,EAAe,kBACfC,EAAiB,qBACjBC,EAAoB,SACpBkC,EAAQ,OACRC,EAAM,SACNP,EAAQ,SACRzpD,EAAQ,KACR6pD,EAAI,UACJI,EAAS,YACTnB,GAaD13F,EACC,GAAIk7D,EAAYgB,SAAU,CACxB,MAAMnpD,EAAQmoD,EAAY49B,oBAAsBD,GAAYE,EAAAA,EAAAA,IAASF,QAAal4F,EAE5Eq4F,SADgBC,EAAAA,EAAAA,MACCv5E,KACrB24E,EACAI,EAAOjC,EAAkBjyF,QAAWgyF,EAAgBhyF,QACpDo0F,EACA,CACEl1F,KAAMiyF,EACNwD,OAAQtqD,EACRuqD,eAAgBV,GAElBG,EACA7lF,EAAQ,CAACA,EAAMu6D,EAAGv6D,EAAMqmF,EAAGrmF,EAAM+tD,QAAKngE,GAGxC,MAAO,CACL4uE,KAAMA,IAAMypB,EAAOzpB,OACnBttD,MAAOA,IAAM+2E,EAAO/2E,QACpBuzE,QAASA,IAAMwD,EAAOK,WAAWT,GACjCnD,eAAgBA,CAACpmF,EAAWC,IACnB0pF,EAAOM,sBAAsBV,EAAQ,CAAEvpF,IAAGC,MAGvD,CAEA,GAAI4rD,EAAY5L,QAAS,CACvB,MAAMnoD,EAAQ+zD,EAAY49B,oBAAsBpB,EAAe,WAAUA,UAAiB/2F,EACpF44F,EAAgB,IAAIxE,EACxBsD,EACA5B,EAAqBlyF,QACrB,CAAEd,KAAMiyF,EAAM9mD,WAAUznC,UAE1B,MAAO,CACLooE,KAAMA,IAAMgqB,EAAchqB,OAC1BttD,MAAOA,IAAMs3E,EAAct3E,QAC3BuzE,QAASA,IAAM+D,EAAc/D,UAC7BC,eAAgBA,CAACpmF,EAAWC,IAAciqF,EAAc9D,eAAe,CAAEpmF,IAAGC,MAEhF,CAEA,MAAM,IAAIkqF,MAAM,gCAClB,EArKMC,CAAa,CACXv+B,cACAq7B,kBACAC,oBACAC,uBACAkC,WACAC,OAAQR,EACRC,WACAI,OACA7pD,SAAU,CAAEv/B,IAAGC,KACfupF,UAAWx9B,EACXq8B,gBACCh8B,MAAMg+B,IACHl/D,GACFk/D,EAAUnqB,OAGZqoB,EAAYrzF,QAAQo1F,IAAIvB,EAAUsB,EAAU,GAC5C,IAGJ5B,EAAatqF,MAAMgN,KAAK09E,GAAkB,KAG5Cv1F,EAAAA,EAAAA,KAAU,KACDi3F,EAAAA,EAAAA,IAAkC3B,IACxC,CAACA,KAEJt1F,EAAAA,EAAAA,KAAU,KACR,MAAMk3F,EAAoBjC,EAAYrzF,QAEtC,MAAO,KACLuzF,EAAatqF,MAAMgN,KAAKq/E,EAAkB1sE,QAAQ,CACnD,GACA,KAEHxqB,EAAAA,EAAAA,KAAU,KACHgvB,KAAcgL,EAASp4B,SAAYgyF,EAAgBhyF,SAAYjE,GAAa26B,GAMjF1Z,EAAAA,EAAAA,KAAe,KACb02E,GAAqB,IANrBH,EAAatqF,MAAMgN,KAAKo9E,EAAYrzF,QAAQ4oB,QAO5C,GACD,CAACwE,EAASsmE,EAAqBt7D,EAAUm7D,EAAcvB,EAAiBj2F,EAAU26B,KAErF3sB,EAAAA,EAAAA,KAAgB,KACdiH,SAASuH,gBAAgB3V,MAAM2yF,YAAY,8BAA+BpC,GAAe,OAAO,GAC/F,CAACA,KAEJjrD,EAAAA,EAAAA,IAAsBvrC,IAAuB,IAArB64F,GAAgB74F,OACdP,IAApBo5F,GAAiC1+B,IAAgB0+B,GACnD9B,GACF,GACC,CAAC58B,EAAa48B,IAEjB,MAAM+B,GAA+BC,EAAAA,EAAAA,GACnChC,EACA,CAACA,GAxIe,KA0IhB,IAEFvqC,EAAAA,EAAAA,GAAkB6oC,EAAiByD,IACnCvtD,EAAAA,EAAAA,IAAsBhqC,IAAe,IAAby3F,GAAQz3F,EAC1Bu4D,IAAQk/B,IACVpC,EAAatqF,MAAMgN,KAAKo9E,EAAYrzF,QAAQ4oB,SAC5C8qE,IACF,GACC,CAACj9B,EAAKi9B,IAET,MAAMkC,GAAkBpzF,EAAAA,EAAAA,IAAgB,KACtC6wF,EAAYrzF,QAAQyK,SAAS+oF,IAC3BA,EAAO91E,OAAO,GACd,IAGEm4E,GAAoBrzF,EAAAA,EAAAA,IAAgB,KACnCyzB,GAILo9D,EAAYrzF,SAASyK,SAAS+oF,IAC5BA,EAAOxoB,MAAM,GACb,IAGE8qB,GAAyBtzF,EAAAA,EAAAA,IAAgB,MAC7Cwa,EAAAA,EAAAA,IAAe64E,EAAkB,KAMnCruD,EAAAA,EAAAA,GAAkBouD,EAAiBE,EACrC,CElBEC,CACE3oE,EACAgL,GACA45D,GACAC,GACAC,GACAt9C,EACA3e,GACAS,EACA36B,GAGF,MAAMi6F,GAAiBvE,EAjHiB,IAmHpC58C,EAlH+B,IAkHgB3uC,GAAW,IAAM,IAC9D+vF,IAAoBzzF,EAAAA,EAAAA,IAAgB,WAAsB,IAArB0zF,EAAQxtF,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,IACjDytF,EAAAA,EAAAA,KAAoB,KAClB,MAAMC,EAAWh+D,GAASp4B,QAASq2F,QAAyB,IAAGhF,KACzDiF,EAAgBhtD,OAAO8sD,EAASxzF,MAAMyH,OAAO+L,QAAQ,KAAM,KAC3DmgF,EAAQxE,GAAiB/xF,SACzB,aAAEk6E,GAAiBqc,EACnBC,EAAYttF,KAAKC,IAAI+wE,EAAc8b,IAEzC,GAAIQ,IAAcF,EAChB,OAGF,MAAMG,EAAcvc,EAAe8b,GAEnC,SAASU,IACP,MAAMC,EAAqBztF,KAAK7J,MA7KL,GA8KI6J,KAAK0tF,IAAI1tF,KAAKy3E,IAAI6V,EAAYF,KAE7DF,EAASxzF,MAAMyH,OAAU,GAAEmsF,MAC3BJ,EAASxzF,MAAM+zF,mBAAsB,GAAEA,MACvCP,EAASnlF,UAAU4lF,OAAO,YAAaJ,EACzC,CAEA,OAAIP,OAEFx1D,EAAAA,EAAAA,IAAgBg2D,GAGTA,CACT,GAEJ,KAEA3sF,EAAAA,EAAAA,KAAgB,KACT0nF,GACLwE,IAAkB,EAAM,GACvB,CAACxE,EAAwBwE,KAE5B,MAAMa,IAAUt3F,EAAAA,EAAAA,IAAO4tB,MACvBrjB,EAAAA,EAAAA,KAAgB,KACd,MAAMmI,EAAOnW,EAAWqxB,IAAY,GAEhClb,IAASkmB,GAASp4B,QAASqW,YAC7B+hB,GAASp4B,QAASqW,UAAYnE,GAG5BA,IAAS4/E,GAAS9xF,QAASqW,YAC7By7E,GAAS9xF,QAASqW,UAAYnE,GAG5BA,IAAS4kF,GAAQ92F,UACnB82F,GAAQ92F,QAAUkS,EAElB+jF,IAAmB/jF,GACrB,GACC,CAACkb,EAASrxB,EAAUk6F,MAELz2F,EAAAA,EAAAA,IAAO9D,GACfsE,QAAUtE,EACpB,MAAMq7F,IAAav0F,EAAAA,EAAAA,IAAgB,KAC5B41B,GAASp4B,WAIVg3F,EAAAA,EAAAA,KACFr0F,WAAWo0F,GAhOM,MAoOnBp6D,EAAAA,EAAAA,GAAqBvE,GAASp4B,SAAS,IAGnCi3F,IAA2Bz0F,EAAAA,EAAAA,IAAgB,KAC/C8vF,KAjLJ,WACE,MAAMx2D,EAAY14B,OAAO24B,eACpBD,IAIDA,EAAUsT,gBACZtT,EAAUsT,kBACDtT,EAAUo7D,OACnBp7D,EAAUo7D,QAEd,CAuKIC,EAAgB,IAGlB,SAASC,KAEP,GAAIrmF,EAAAA,GACF,OAAO,EAGT,MAAM+qB,EAAY14B,OAAO24B,eACzB,IAAKD,IAAcA,EAAUI,YAAci2D,GAAqBnyF,QAK9D,OAJAsyF,KACIQ,EAAAA,IACFF,IAA2B,IAEtB,EAGT,MAAMz2D,EAAiBL,EAAUM,WAAW,GACtCi7D,EAAel7D,EAAeyO,WAAWpF,OAC/C,QACE2P,MACI9Y,EAAAA,EAAAA,GAAuBF,EAAgBnF,GAAmB5hB,EAAAA,OAC1DiiF,IACD50D,EAAAA,EAAAA,GAAqB40D,KACpBl7D,EAAem7D,gBAEnBhF,MACO,EAIX,CAEA,SAASiF,KACP,IAAKH,KACH,OAGF,GAAIzE,GACF,OAGF,MAAMx2D,EAAiB/4B,OAAO24B,eAAgBK,WAAW,GACnDo7D,EAAgBr7D,EAAe3vB,wBAC/BirF,EAAer/D,GAASp4B,QAASq2F,QAAyB,IAAGhF,KAAmB7kF,wBAEtF,IAAI1B,EAAK0sF,EAAcjrF,KAAOirF,EAAcptF,MAAQ,EAAKqtF,EAAalrF,KAElEzB,EAAIwmF,EACNxmF,EAAIwmF,EACKxmF,EAAI2sF,EAAartF,MAAQknF,IAClCxmF,EAAI2sF,EAAartF,MAAQknF,GAG3BkB,GAA+B,CAC7B1nF,IACAC,EAAGysF,EAAc5oD,IAAM6oD,EAAa7oD,MAGtC8jD,GAAiBv2D,GACjBk2D,IACF,CAEA,SAASqF,KACH7F,GAAoB7xF,SACtBoD,OAAO0iF,aAAa+L,GAAoB7xF,SAG1C6xF,GAAoB7xF,QAAUoD,OAAOT,WAAW40F,GA/Pb,IAgQrC,EAiHAn5F,EAAAA,EAAAA,KAAU,KACJknB,EAAAA,IAIA0vB,IACF+hD,IACF,GACC,CAACr7F,EAAQq7F,GAAYrvE,GAAWstB,MAEnC52C,EAAAA,EAAAA,KAAU,KACR,IACG1C,GACEs7B,IAAoB5hB,EAAAA,KACpB6/B,IACA49C,IACAl/D,GAEH,OAGF,MAAMgkE,EAAyBrrF,IAC7B,IAAIsrF,EAAAA,EAAAA,MACF,OAGF,MAAM,IAAEt3E,GAAQhU,EACVuX,EAASvX,EAAEuX,OAEjB,IAAKA,GAAU0tE,EAAYh8E,SAAS+K,GAClC,OAGF,MAAMpL,EAAQkjB,GAASp4B,QACjB63F,EAAuB7mF,SAAS+qB,gBAAgB+7D,YAEtD,MACIx3E,EAAIikB,WAAW,UAAaj4B,EAAEshF,UAAoB,UAARttE,KAAsBu3E,GACnD,SAAXvrF,EAAEo0D,OAAoBp0D,EAAEwrE,SAAWxrE,EAAEurE,UAA+B,UAAnBh0D,EAAO9M,UAM5D7B,GACG2O,IAAW3O,GACQ,UAAnB2O,EAAO9M,SACY,aAAnB8M,EAAO9M,UACN8M,EAAOk0E,kBACX,EACAp7D,EAAAA,EAAAA,GAAqBznB,GAAO,GAAM,GAElC,MAAM8iF,EAAW,IAAIC,cAAc3rF,EAAEyO,KAAMzO,GAC3C4I,EAAMqnB,cAAcy7D,EACtB,GAKF,OAFAhnF,SAAS6D,iBAAiB,UAAW8iF,GAAuB,GAErD,KACL3mF,SAAS+D,oBAAoB,UAAW4iF,GAAuB,EAAK,CACrE,GACA,CAACj8F,EAAQs7B,EAAiB67D,GAAgBl/D,GAAoBshB,MAEjE72C,EAAAA,EAAAA,KAAU,KACR,MAAM85F,GAAkBv1B,EAAAA,EAAAA,KAAUr2D,IAClB,QAAVA,EAAEgU,MAAkBs3E,EAAAA,EAAAA,QACtBtrF,EAAE4L,kBACFwoB,EAAAA,EAAAA,IAAgBq2D,IAClB,GAxb6B,KAybA,GAAM,GAErC,OAAOoB,EAAAA,EAAAA,GAAyB,CAAEC,MAAOF,GAAkB,GAC1D,CAACnB,MAEJ34F,EAAAA,EAAAA,KAAU,KACR,MAAM8W,EAAQkjB,GAASp4B,QAEvB,SAASq4F,IACPnjF,EAAMs2B,MACR,CAMA,OAJI0J,IACFhgC,EAAML,iBAAiB,QAASwjF,GAG3B,KACLnjF,EAAMH,oBAAoB,QAASsjF,EAAc,CAClD,GACA,CAACnjD,KAEJ,MAAMlO,IAAY5Y,EAAAA,EAAAA,IAAgB,IAAM9xB,QAAQP,GAAYqxB,MAAY,CAACrxB,EAAUqxB,IAE7ExwB,IAAYkC,EAAAA,EAAAA,GAChB,+BACAkoC,IAAa,UACbkO,IAAuB,kBAGzB,OACEt2C,EAAAA,GAAAC,cAAA,OAAKxC,GAAIA,EAAI0C,QAASm2C,GAAsBG,QAAoBj5C,EAAWkE,IAAKrD,GAAKsD,MAAQ,WAAQnE,GACnGwC,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBuyF,GAC3CK,SAAUA,GACV3yF,QAAU0yF,GAA2Bj2D,QAAiCp/B,EA7G5E,WACMq1F,GAA0Bj2D,IAC9BzD,GAAoC,CAAEr8B,UACxC,GA4GMkD,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACbgC,EAAAA,GAAAC,cAAA,OACE8E,IAAKy0B,GACL/7B,GAAI26B,GAAmB5hB,EAAAA,IACvBxY,UAAWA,GACX+xC,gBAAiB8iD,GAA0Bj2D,GAC3C4nB,KAAK,UACL9iD,IAAI,OACJ2iD,SAAU,EACVlkD,QAASg4F,GACT7zC,SAhKV,SAAsB52C,GACpB,MAAM,UAAE+J,EAAS,YAAE9C,GAAgBjH,EAAEqT,cAKrC,GAHAy1B,GArUc,SAqUL/+B,EAA0B,GAAKA,IAIrCiP,EAAAA,MACI/R,IAAgBA,EAAYvU,UAE3BqjC,EAAAA,KAAsBhsB,EAAUd,SAAS,kBAC1Cc,EAAUd,SAAS,gBACxB,CACA,MAAMumB,EAAY14B,OAAO24B,eACrBD,IACF1D,GAASp4B,QAASwrC,OAClB1P,EAAUsT,mBACVzS,EAAAA,EAAAA,GAAqBvE,GAASp4B,SAAU,GAE5C,CACF,EA6IUs4F,UArMV,SAAuBhsF,GAErB,MAAM,YAAEisF,GAAgBjsF,EAElB4F,EAAOkb,IACb,IAAKmrE,IAAgBrmF,IAAS5F,EAAEurE,SAAWvrE,EAAEwrE,SAAU,CACrD,MAAML,EAA6B,cAAVnrE,EAAEgU,IAAsB,EAAc,YAAVhU,EAAEgU,KAAqB,OAAIlkB,EAChF,GAAIq7E,EAIF,OAHAnrE,EAAE4L,sBAEF05E,GAAmB,CAAEna,oBAGzB,CAEK8gB,GAAyB,UAAVjsF,EAAEgU,KAAoBhU,EAAEshF,SAahC2K,GAAyB,YAAVjsF,EAAEgU,KAAsBpO,GAAS5F,EAAEurE,SAAYvrE,EAAEwrE,SAAYxrE,EAAEksF,OAIxFlsF,EAAEuX,OAAOhP,iBAAiB,QAAS6iF,GAA6B,CAAEe,MAAM,KAHxEnsF,EAAE4L,iBACFy5E,OAbGkB,KAE0B,UAAxBrB,KAAoCllF,EAAEshF,UACX,eAAxB4D,KAAyCllF,EAAEwrE,SAAWxrE,EAAEurE,YAG9DvrE,EAAE4L,iBAEFo6E,KACAzgD,KAQN,EAoKUgE,YArOV,SAAyBvpC,GAcvB,SAASosF,EAAuBC,GAC1BA,aAAcV,eAA4B,QAAXU,EAAGr4E,KAA4B,WAAXq4E,EAAGr4E,MAI1D3d,YAAW,KACTwvF,GAAqBnyF,SAAU,CAAK,GAvUR,KA0U9BoD,OAAO2R,oBAAoB,UAAW2jF,GACtCt1F,OAAO2R,oBAAoB,YAAa2jF,GAC1C,CAxBiB,IAAbpsF,EAAEQ,OAOFqlF,GAAqBnyF,UAIzBmyF,GAAqBnyF,SAAU,EAe/BgR,SAAS6D,iBAAiB,YAAa6jF,GACvC1nF,SAAS6D,iBAAiB,UAAW6jF,KA1BhBpsF,EAAEqT,cAAc02E,QAAS,2BAA6B/pF,EAAEuX,QAEhEhP,iBAAiB,UAAW6iF,GAA6B,CAAEe,MAAM,GAyBhF,EAyMUh4E,cAAeqyE,EAAAA,GA7IzB,SAAkCxmF,GAC3B8qF,OAILxE,IAA4BD,IAEvBA,GAMHL,MALAhmF,EAAE4L,iBACF5L,EAAEM,kBAEF2qF,MAIJ,OA8HiEn7F,EACvDw8F,cAAe9F,EAAAA,GAAa4E,QAA8Bt7F,EAC1D,aAAY04C,EACZle,QAASA,GACTC,OAAQA,MAERke,GACAn2C,EAAAA,GAAAC,cAAA,QACEjC,WAAWkC,EAAAA,EAAAA,GACT,oBACC2yF,IAA2Bj2D,IAAoB,aAElDl7B,IAAI,SAEFmxF,IAA2Bj2D,IACxB58B,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,0CACjBm2F,GACCn0F,EAAAA,GAAAC,cAACg6F,EAAAA,EAAS,CAAC/K,QAASl+C,EAA0BkpD,OAAQjpD,EAAuBkpD,MAAO9F,KAClFn+C,GAGRl2C,EAAAA,GAAAC,cAAA,UAAQ8E,IAAKquF,GAAiBp1F,UAAU,kBACxCgC,EAAAA,GAAAC,cAAA,UAAQ8E,IAAKsuF,GAAmBr1F,UAAU,kBAC1CgC,EAAAA,GAAAC,cAAA,OAAK8E,IAAKuuF,GAAsBt1F,UAAU,+BAG9CgC,EAAAA,GAAAC,cAAA,OAAK8E,IAAKouF,GAAkBn1F,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBuyF,EAAgB,UACrFzyF,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACbgC,EAAAA,GAAAC,cAAA,OAAK8E,IAAKmuF,GAAUl1F,WAAWkC,EAAAA,EAAAA,GAAelC,GAAW,SAAU0D,IAAI,gBAGzDlE,IAAjBu5B,GACC/2B,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,uBAAuB0D,IAAI,QACvCq1B,GAGL/2B,EAAAA,GAAAC,cAACuyF,EAAa,CACZvwE,OAAQuxE,GACR4G,eAAgBzG,GAChBE,cAAeA,GACfC,iBAAkBA,GAClBzxE,QAASg2E,KAEVliD,GAAqBn2C,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,uBAAsBqR,EAAAA,EAAAA,GAAW8mC,IACnE,I,2KClmBV,MAQA,EARuCv0C,IACrC,MAAM,OAAEqgB,GAAWrgB,EACby4F,GAAar7E,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,cAAe+C,GAGjE,OAAOo4E,EAAar6F,EAAAA,GAAAC,cAACo6F,EAAez4F,QAAYpE,CAAS,ECqM3D,GAAed,EAAAA,EAAAA,KA7JwBqB,IAyBjC,IAzBkC,OACtCjB,EAAM,SACNijB,EAAQ,SACRzY,EAAQ,YACRm1B,EAAW,gBACXD,EAAe,kBACfkZ,EAAiB,QACjB5d,EAAO,iBACPkI,EAAgB,SAChB8V,EAAQ,kBACRlK,EAAiB,iBACjBhP,EAAgB,mBAChBnC,EAAkB,UAClBz8B,EAAS,eACTg2C,EAAc,iBACd6B,EAAmBpM,EAAAA,IAA2B,eAC9CxJ,EAAc,gBACdC,EAAe,oBACfmU,EAAmB,gBACnBuB,EAAe,YACfD,EAAW,eACXrB,EAAc,cACdC,EAAa,oBACbxU,EAAmB,gBACnBM,GACDtiC,EACC,MAAM,sBACJu8F,EAAqB,kBACrBC,EAAiB,eACjBzhE,EAAc,qBACdI,IACE96B,EAAAA,EAAAA,MAGEo8F,GAAa55F,EAAAA,EAAAA,IAAuB,OAEnC65F,EAAoBC,IAA+B15F,EAAAA,EAAAA,MACnD0qB,EAAqBivE,IAA0BjzF,EAAAA,EAAAA,SAAsClK,GAEtFo9F,GAA4B16F,EAAAA,EAAAA,GAChC,6BACC43B,GAAW,YACZ2iE,EACKz6D,GAAoB,cACpBA,GAAoB,cAGrB66D,GAA2Bj3F,EAAAA,EAAAA,IAAgB,KAC/Cm8B,MACAM,MACAJ,IACA,MAAM66D,EAAYN,EAAWp5F,QAC7B,IAAK05F,EAAW,OAChB,MAAM,EAAE5uF,EAAC,EAAEC,GAAM2uF,EAAUltF,wBAC3B+sF,EAAuB,CAAEzuF,IAAGC,KAAI,IAG5B4uF,GAAmBn3F,EAAAA,EAAAA,IAAiBuY,IAC3B,aAATA,GACFm+E,EAAsB,CAAEn/E,MAAO,KAC/Bo/E,EAAkB,CAAEp/E,WAAO3d,MAE3B+8F,EAAkB,CAAEp/E,MAAO,KAC3Bm/E,EAAsB,CAAEn/E,WAAO3d,IACjC,IAGIw9F,GAAuBp3F,EAAAA,EAAAA,IAAgB,KAC3C,MAAMw5B,EAAehrB,SAASua,cAC5Bif,EAAoBqvD,EAAAA,IAAoCplD,GAGrDvuC,GAAY81B,IAAiBhrB,SAASmE,eAK3C6mB,GAAcwP,OACd7oC,YAAW,KACTg8B,MACAE,GAAgB,GAnHgB,MA4GhCA,GAQ+B,IAG7BzT,GAAoB5oB,EAAAA,EAAAA,IAAgB,IAAM42F,EAAWp5F,UACrDqrB,GAAiB7oB,EAAAA,EAAAA,IAAgB,IAAM42F,EAAWp5F,SAASq2F,QAAQ,mCACnE/qE,GAAiB9oB,EAAAA,EAAAA,IAAgB,IAAMwO,SAASua,cAAc,kCAC9DuuE,GAAYt3F,EAAAA,EAAAA,IAAgB,KAAM,CAAGwe,YAAY,OAEjD,UACJF,EAAS,UAAEsE,GAAS,iBAAEoG,GAAgB,iBAAEC,GAAkB7oB,MAAO8oB,KAC/DC,EAAAA,EAAAA,GACFrB,EACAc,EACAC,EACAC,EACAwuE,GAGF,OACEl7F,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACGvJ,EACCtH,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLxC,UAAW48F,EACXn6F,OAAK,EACLmP,MAAM,cACNzP,QAAS6/B,EAAmBE,EAAkB86D,EAC9CnrF,UAAU,gCAEV7P,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBACZgiC,IAAqBy6D,GAAsBz6F,EAAAA,GAAAC,cAACy2C,EAAAA,EAAO,CAAC9mC,MAAM,UAG7D5P,EAAAA,GAAAC,cAACkmB,EAAAA,EAAqB,CACpBnoB,WAAWkC,EAAAA,EAAAA,GAAe,qBAAsB8/B,GAAoB,aACpEv/B,OAAK,EACLmP,MAAM,cACNwW,WAAYy0E,EACZhrF,UAAU,gCAEV7P,EAAAA,GAAAC,cAAA,OAAK8E,IAAKy1F,EAAYx8F,UAAU,wBAChCgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAIjBgC,EAAAA,GAAAC,cAACo6F,EAAU,CACTv9F,OAAQA,EACRijB,SAAUA,EACVkC,OAAQ+d,GAAoBtiC,QAAQ+8B,GACpCgC,YAAaA,EACbD,gBAAiBA,EACjBkZ,kBAAmBA,EACnBI,SAAUA,EACVzxC,OAAQq2F,EACRr4E,QAAS6d,EACTqU,cAAeA,EACfqB,gBAAiBA,EACjBvB,oBAAqBA,EACrBsB,YAAaA,EACbrB,eAAgBA,EAChB6mD,aAAcJ,EACdjiE,eAAgBA,EAChBI,qBAAsBA,EACtB0S,kBAAmBA,EACnBhP,iBAAkBA,EAClB5+B,WAAWkC,EAAAA,EAAAA,GAAelC,EAAWg2C,GAAkB,wBACvD9xB,UAAW0pB,EAAoB1pB,OAAY1kB,EAC3CgpB,UAAWolB,EAAoBplB,QAAYhpB,EAC3CovB,iBAAkBgf,EAAoBhf,QAAmBpvB,EACzDqvB,iBAAkB+e,EAAoB/e,QAAmBrvB,EACzDwG,MAAO4nC,EAAoB9e,QAAYtvB,IAExC,G,gFC/LP,MAAM49F,EAAqB,KACrBC,EAAqB,GACrBC,EAAmB,GACnBC,EAAiB,YAERnlF,eAAe8D,EAC5BshF,EAAkB98E,EAAYk0C,GAE9B,MAAMkD,EAAU95C,IAAIy/E,gBAAgB/8E,IAC5BvC,KAAMu/B,EAAQ,KAAEp7C,GAASoe,EACjC,IAAIg9E,EACA50F,EACAzE,EACAs5F,EAEJ,GAAIp2E,EAAAA,IAA8BhiB,IAAIm4C,GAAW,CAC/C,MAAMkgD,QAAYtjC,EAAAA,EAAAA,IAAaxC,IACzB,MAAEtqD,EAAK,OAAEC,GAAWmwF,EAC1BD,GAAoBE,EAAoBrwF,EAAOC,GAE/C,MAAMqwF,EAAexxF,KAAK2B,IAAIT,EAAOC,GAAU2vF,EACzC14C,EAAQhH,IAAaqgD,EAAAA,IAE3B,IAAKJ,EAAkB,CACrB,IAAK/oC,GAASopC,oBAAsBt5C,IAAUo5C,GAA6B,eAAbpgD,GAA4B,CACxF,MAAMugD,QAAmBC,EAAAA,EAAAA,GACvBpmC,EAASgmC,EAAeV,EAAqB9wF,KAAK2B,IAAIT,EAAOC,GAAU,EAAG,cAG5E,OADAuQ,IAAImgF,gBAAgBrmC,GACb57C,EAAgBshF,EAAU98E,EAAM,CACrCs9E,kBAAmBC,GAEvB,CAEiB,eAAbvgD,IACF8/C,EAAWA,EAAShkF,QAAQ+jF,EAAgB,SAG9CG,EAAQ,CAAElwF,QAAOC,SACnB,CAIEpJ,EAF0BiI,KAAK2B,IAAIT,EAAOC,GAAU4vF,QAE7Ba,EAAAA,EAAAA,GACrBpmC,EAASulC,EAAqB/wF,KAAK2B,IAAIT,EAAOC,GAAS,cAGxCqqD,CAErB,MAAO,GAAItwC,EAAAA,IAA8BjiB,IAAIm4C,GAAW,CACtD,IACE,MAAQ0gD,WAAY5wF,EAAO6wF,YAAa5wF,EAAM,SAAErC,SAAmBkzF,EAAAA,EAAAA,IAAaxmC,GAChF6lC,GAAoBE,EAAoBrwF,EAAOC,GAC1CkwF,IACHD,EAAQ,CAAElwF,MAAOA,EAAQC,OAAQA,EAASrC,SAAUA,GAExD,CAAE,MAAOsO,GACPikF,GAAmB,CACrB,CAEAt5F,QAAuBk6F,EAAAA,EAAAA,IAAqBzmC,EAC9C,MAAO,GAAInwC,EAAAA,IAA8BpiB,IAAIm4C,GAAW,CACtD,MAAM,SACJtyC,EAAQ,MAAEoF,EAAK,UAAEiB,EAAS,SAAE+sF,SCxE3BpmF,eAAkC+Y,GACvC,MAAM,aAAEstE,EAAY,YAAEC,SAAsB,oCACtCC,QAAiBF,EAAattE,IAC5BytE,QAAQ,MAAEpuF,EAAK,OAAEquF,EAAM,QAAEC,GAAWC,QAAQ,SAAE3zF,IAAeuzF,EAE/DK,EAAQN,EAAYI,GACpBG,EAAYD,EAAQ,IAAIr+E,KAAK,CAACq+E,EAAM/yF,MAAO,CAAEkS,KAAM6gF,EAAMD,cAAYv/F,EAG3E,MAAO,CACLgR,QACAiB,UAAWotF,EACXzzF,WACAozF,SANeS,EAAYjhF,IAAIy/E,gBAAgBwB,QAAaz/F,EAQhE,CD0Dc0/F,CAAmBpnC,GAC7BhvD,EAAQ,CACNsC,SAAUA,GAAY,EACtBoF,QACAiB,aAEFpN,EAAiBm6F,CACnB,CAEA,MAAO,CACL1mC,UACA0lC,WACA9/C,WACAp7C,OACAo7F,QACA50F,QACAzE,iBACAs5F,iBAAkBA,QAAoBn+F,EACtCw3F,SAAW,GAAEp4E,KAAKC,SAASvS,KAAKm4D,cAC7B7P,EAEP,CAEO,SAAStlB,EACd7yB,EAA8B0iF,GAE9B,OAAO1iF,EAAYpb,KAAK+9F,GAClBD,EACEC,EAAOpB,kBACF,IACFoB,EACHtnC,QAASsnC,EAAOpB,mBAGboB,EAGF,IACFA,EACHzB,kBAAmByB,EAAOp2F,YAAexJ,EACzC+hC,yBAAqB/hC,IAG3B,CAEA,SAASq+F,EAAoBrwF,EAAeC,GAE1C,OADuBnB,KAAK2B,IAAIT,EAAOC,GAAUnB,KAAKC,IAAIiB,EAAOC,IACxC6vF,CAC3B,C,kDE9HellF,eAAemD,EAA8B8jF,GAC1D,MAAMhkF,EAAgB,GAEtB,SAASikF,EAAwBhkC,EAA+BxtD,GAC9D,OAAO,IAAIiO,SAASwE,IAClB,GAAI+6C,aAAiBzzC,KACnBxM,EAAM7X,KAAK83D,GACX/6C,EAAQ+6C,QACH,GAAIA,EAAM50C,OAAQ,CACvB,MAAM64E,EAAWzxF,EAAK0xF,YACrBlkC,EAA8Br/C,MAAMA,IACnCZ,EAAM7X,KAAKyY,GACXsE,EAAQtE,EAAK,IACZ,KAGGsjF,GACFlkF,EAAM7X,KAAK+7F,GAEbh/E,EAAQg/E,EAAS,GAErB,MAAWjkC,EAAMmkC,aACInkC,EAAmCokC,eAC5CC,aAAaC,IACrB,MAAMC,EAAkB,GACxB,IAAK,IAAIt8F,EAAI,EAAGA,EAAIq8F,EAAQx9F,OAAQmB,IAClCs8F,EAAgBr8F,KAAK87F,EAAwBM,EAAQr8F,GAAIuK,IAE3DyS,EAAQxE,QAAQC,IAAI6jF,GAAiB,GAEzC,GAEJ,CAEA,MAAMA,EAAkB,GACxB,IAAK,IAAIt8F,EAAI,EAAGA,EAAI87F,EAAkBj9F,OAAQmB,IAAK,CACjD,MAAMuK,EAAOuxF,EAAkB97F,GAC/B,GAAkB,SAAduK,EAAKgyF,KAAiB,CACxB,MAAMxkC,EAAQxtD,EAAKiyF,oBAAsBjyF,EAAK0xF,YAC1ClkC,GACFukC,EAAgBr8F,KAAK87F,EAAwBhkC,EAAOxtD,GAExD,CACF,CAIA,aAFMiO,QAAQC,IAAI6jF,IAEX14E,EAAAA,EAAAA,IAAc9L,EACvB,C,mCClDA,MAAM2kF,EAAQ,oBACRC,EAAW,mBACXC,EAAgB,oBAChBC,EAAoB,OAEnB,SAASv6D,EAAiBtwB,GAC/B,OAAOA,EACJkE,QAAQymF,EAAU,KAClBzmF,QAAQwmF,EAAO,MACfxmF,QAAQ0mF,EAAe,IACvB1mF,QAAQ2mF,EAAmB,GAChC,C,kFCAe,SAAS32E,EAAyBnpB,EAAc6P,GAC7D,MAAoB,YAAhBA,EAAOiO,KACF9d,EAAK,kBAGM,QAAhB6P,EAAOiO,MACFiiF,EAAAA,EAAAA,GAAiBlwF,EAAOxN,KAAM,IAAKV,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAAChS,UAAU,qBAAqBiS,KAAK,WAG/EZ,EAAAA,EAAAA,GAAWnB,EAAOxN,KAC3B,C,mCCrBA,MAAM29F,EAAsB,EAErB,SAAS5gE,EAAuBF,EAAuBlF,GAC5D,MAAM,wBAAEimE,GAA4B/gE,EACpC,IAAIghE,EAAiCD,EACjCE,EAAa,EACjB,KAAOD,GAAcA,EAAW9gG,KAAO46B,GAAWmmE,EAAaH,GAC7DE,EAAaA,EAAWE,cACxBD,IAGF,OAAO9gG,QAAQ6gG,GAAcA,EAAW9gG,KAAO46B,EACjD,C,gMCSA,MAAMqmE,EAAW,IACXC,EAAmB,IAAIhjF,OAAQ,IAAG+nB,EAAAA,EAAa7nB,WAAY,KAC3D+iF,EAAuB,IAAIjjF,OAAQ,GAAEC,EAAAA,IAAgBC,UAAW,KAEvD,SAASmnB,EACtBxhB,EACAgN,EACAkL,EACAI,EACAN,EACA/D,GAEA,MAAM,wBAAEopE,EAAuB,yBAAEC,IAA6B1gG,EAAAA,EAAAA,OAEvDilC,EAAkBC,EAAoBC,IAAwBviC,EAAAA,EAAAA,IAAQ,GAEvE+9F,GAA4Br5D,EAAAA,EAAAA,KAAqB,KACrD,MAAMpyB,EAAOkb,IACb,IAAKhN,IAAclO,IAASwmB,KAAqBklE,UAAW,OAG5D,IADiB1rF,EAAK6D,MAAMssB,EAAAA,GAAqBC,EAAAA,EAAe9nB,EAAAA,KACjD,OAEf,MAAMqjF,GAAsBC,EAAAA,EAAAA,IAAuB1lE,EAASp4B,SAE5D,OAAO69F,EAAoB9nF,MAAMssB,EAAAA,GAAqBk7D,EAAmBC,KAAwB,EAAE,GAClG,CAACpwE,EAASsL,EAAmBN,EAAUhY,GAAYk9E,GAEhDS,GAAe9vE,EAAAA,EAAAA,GACnB0vE,EAA2B,CAACA,EAA2BvwE,EAASsL,IAAoB,GAGhF38B,GAAWqyB,EAAAA,EAAAA,IAAgB,IAAM9xB,QAAQyhG,MAAiB,CAACA,IAC3DC,EAAkB1hG,QAAQ+3B,GAAcr1B,SAE9CZ,EAAAA,EAAAA,KAAU,KACR,IAAKgiB,IAAcrkB,EAAU,OAE7B,MAAMkiG,EAAYF,IACdE,EACGD,GACHP,EAAwB,CACtB1gE,MAAOsF,EAAAA,GAAqB47D,EAAYA,EAAUloF,MAAM,kBAAkB,KAI9E2nF,GACF,GACC,CAACt9E,EAAWrkB,EAAUgiG,EAAcC,EAAiBN,EAA0BD,IAElF,MAAM97D,GAAoBn/B,EAAAA,EAAAA,IAAiBu6B,IACzC,MAAMkhE,EAAYF,IAClB,IAAK39E,IAAc69E,EAAW,OAE9B,MAAMptF,EAAUunB,EAASp4B,QACnB69F,GAAsBC,EAAAA,EAAAA,IAAuBjtF,GAC7CqtF,EAAY77D,EAAAA,GACd47D,EAEAA,EAAU7nF,QAAQ,wBAAyB,QACzC+nF,EAAQ,IAAI5jF,OAAQ,IAAG2jF,UAAmB,IAE1CpZ,EADU+Y,EAAoB9nF,MAAMooF,GAAQ,GAC5Bn/F,OAASi/F,EAAUj/F,OACnC48B,EAAUiiE,EAAoBznF,QAAQ+nF,GAAOnhE,EAAAA,EAAAA,IAAqBD,GAAOqhE,OAAOtZ,IAChFuZ,EAAqBxtF,EAAQwF,UAAUX,UAAUmoF,EAAoB7+F,QAE3Es5B,EAAS,GAAEsD,IAAUyiE,MAErB3hE,EAAAA,EAAAA,KAAoB,MAClBC,EAAAA,EAAAA,GAAqB9rB,GAAS,GAAM,EAAK,GACzC,IAKJ,OAFAzS,EAAAA,EAAAA,IAAU+jC,EAAsB,CAACA,EAAsB/U,IAEhD,CACLqU,yBAA0BnlC,QAAQP,GAAYiiG,IAAoB/7D,GAClEP,wBAAyBQ,EACzBP,oBAEJ,C,iOCnEA,IAAI28D,EACAC,EACAC,EAEAC,EACAC,EACJ,MAAMC,EAAe,GACfC,EAAoB,EAEpBtB,EAAW,IAEXuB,GAA0BzkF,EAAAA,EAAAA,IAiJhC,SAA6Bzc,EAA6BmhG,EAA0B3uF,GAClF,OAAKxS,GAASmhG,EAAe9/F,OAItBlB,OAAOC,QAAOghG,EAAAA,EAAAA,IAAWphG,EAAMmhG,IAAiB9gG,MAAM,EAAGmS,GAHvDytB,EAAAA,CAIX,IAtJMohE,GAAqB5kF,EAAAA,EAAAA,IAwJ3B,SACEzc,EACA0yB,EACAC,GAEA,MAAMslB,EAAS93C,OAAOC,OAAOJ,GAEvBshG,GAAWh6C,EAAAA,EAAAA,IAA4BrP,EAAQ,UAC/CspD,EAAsB7uE,GACxBgyD,EAAAA,EAAAA,IAAUhyD,GAAoB8uE,GACvBrhG,OAAOC,QAAOghG,EAAAA,EAAAA,IAAWE,EAAUE,MAE1C,CAAC,EACCC,EAAkB9uE,GACpB+xD,EAAAA,EAAAA,IAAU/xD,GAAgB6uE,GACnBrhG,OAAOC,QAAOghG,EAAAA,EAAAA,IAAWE,EAAUE,MAE1C,CAAC,EAECE,EAAY,IAAKH,KAAwBE,GACzCzqE,EAAY,GAAgBrb,OAAOxb,OAAO8qB,KAAKs2E,GAAsBphG,OAAO8qB,KAAKw2E,IAEjFE,EAAS1pD,EAAO94B,QAAO,CAAChK,EAAQiqB,KACpCA,EAAMwiE,MAAM90F,SAASoE,IACdiE,EAAOjE,KACViE,EAAOjE,GAAQ,IAGjBiE,EAAOjE,GAAMzO,KAAK28B,EAAM,IAGnBjqB,IACN,CAAC,GAEEysF,EAAQzhG,OAAO8qB,KAAK02E,GACpBE,EAAe7qE,EAAS7X,QAAO,CAACjS,EAAK40F,IAAYv2F,KAAK2B,IAAIA,EAAK40F,EAAQzgG,SAAS,GAEtF,MAAO,CACLqgG,YACA1qE,WACA2qE,SACAC,QACAC,eAEJ,IAnMME,GAAsBtlF,EAAAA,EAAAA,IAqM5B,SAAyBulF,EAAkBxhG,EAAgBgS,GACzD,MAAM,UACJkvF,EAAS,SAAE1qE,EAAQ,OAAE2qE,EAAM,MAAEC,EAAK,aAAEC,GAClCG,EAEJ,IAAIC,EAAmB,GAEvB,GAAIzhG,EAAOa,OAASwgG,EAClB,OAAO5hE,EAAAA,EAGT,MAAMiiE,EAAkBlrE,EAASx2B,QAAQshG,GAAYA,EAAQl7D,WAAWpmC,KAASk+D,OACjFujC,EAAUA,EAAQtmF,OAAOxb,OAAOC,QAAOghG,EAAAA,EAAAA,IAAWM,EAAYQ,IAAkBC,QAGhF,MAAMC,EAAeR,EAAMphG,QAAQ0Q,GAASA,EAAK01B,WAAWpmC,KAK5D,OAJAyhG,EAAUA,EAAQtmF,OAAOxb,OAAOC,QAAOghG,EAAAA,EAAAA,IAAWO,EAAQS,IAAeD,QAEzEF,GAAUI,EAAAA,EAAAA,IAAOJ,GAEZA,EAAQ5gG,OAIN4gG,EAAQ5hG,MAAM,EAAGmS,GAHfytB,EAAAA,CAIX,IA5NA,IACE6gE,EAAkB,wCAClBC,EAAoB,SACtB,CAAE,MAAOpyF,GAEPmyF,EAAkB,yCAClBC,EAAoB,aACtB,CAEe,SAASl9D,EACtBphB,EACAgN,EACAkL,GAKA,IAJArB,EAAOvuB,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG0M,EAAAA,IACV0pF,EAAwBp2F,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EACxBi0B,EAA4C3nB,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAC5Ck0B,EAAwC5nB,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAExC,MAAO6lC,EAAkBC,EAAoBC,IAAwBviC,EAAAA,EAAAA,IAAQ,IAEtEjC,EAAMsiG,IAAW35F,EAAAA,EAAAA,OACjB+6B,EAAgB6+D,IAAqB55F,EAAAA,EAAAA,IAAkBs3B,EAAAA,IACvD0D,EAAsB6+D,IAA2B75F,EAAAA,EAAAA,IAAuBs3B,EAAAA,IAG/Ex/B,EAAAA,EAAAA,KAAU,KAGR,SAASs4F,IACPuJ,EAAQzB,EAAU5oD,OACpB,CAJKx1B,IAMDo+E,EACF9H,IAiGN1hF,iBAQE,OAPKspF,IACHA,EAAmB,oCACnBC,SAAsBD,GAAkBljF,QAExCojF,GAAY4B,EAAAA,EAAAA,IAAgB7B,IAGvBD,CACT,CAxGM+B,GAAkBlpC,KAAKu/B,GACzB,GACC,CAACt2E,IAEJ,MAAMkgF,GAA2Bh8D,EAAAA,EAAAA,KAAqB,KACpD,MAAMpyB,EAAOkb,IACb,OAAOhN,GAAalO,EAAKqD,SAAS,MAAOitB,EAAAA,EAAAA,GAAiBtwB,GAAM6D,MAAM0oF,KAAmB,GAAGj5D,YAASppC,CAAS,GAC7G,CAACgxB,EAAShN,GAAYk9E,GAEnBiD,GAAetyE,EAAAA,EAAAA,GACnBqyE,EAA0B,CAACA,EAA0BlzE,IAAU,GAG3DozE,GAAiBh+F,EAAAA,EAAAA,IAAiBozC,IAGtC,GAFAsqD,EAAkBtqD,GAEdA,IAAWhY,EAAAA,EAEb,YADAuiE,EAAwBviE,EAAAA,GAI1B,MAAM6iE,EAAe7qD,EAAO33C,KAAK8+B,GAAUA,EAAM2jE,SAC3CrsE,GAAessE,EAAAA,EAAAA,KACnBC,EAAAA,EAAAA,MAA2BnjG,EAAAA,EAAAA,MAAagjG,GACxC,MAEFN,EAAwB9rE,EAAa,IAGjCkN,GAAc/+B,EAAAA,EAAAA,IAAgB,SAACu6B,GAAgD,IAApB8jE,EAAOn4F,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACtE,MAAMwJ,EAAOkb,IACb,IAAKlb,EAAM,OAEX,MAAM4uF,EAAU5uF,EAAK6uF,YAAY,IAAKF,EAAU3uF,EAAK6uF,YAAY,KAAO,OAAI3kG,GAE5E,IAAiB,IAAb0kG,EAAgB,CAClB,MAAME,EAA6B,iBAAVjkE,GAAqB9uB,EAAAA,EAAAA,GAAW8uB,EAAO,CAAC,gBAAiBC,EAAAA,EAAAA,IAAqBD,GACvGzE,EAAS,GAAEpmB,EAAKwD,UAAU,EAAGorF,KAAWE,KAExC,MAAMhlE,EAAe/E,IAAY7hB,EAAAA,IAC7BpE,SAASua,cAA8B8c,EAAAA,KACvCr3B,SAASirB,eAAehF,IAE5ByF,EAAAA,EAAAA,KAAoB,MAClBC,EAAAA,EAAAA,GAAqBX,GAAc,GAAM,EAAK,GAElD,CAEAwkE,EAAe5iE,EAAAA,EACjB,IAqCA,OAnCAx/B,EAAAA,EAAAA,KAAU,KACR,MAAM6iG,EAAYV,IAClB,IAAKU,IAActjG,EAEjB,YADA6iG,EAAe5iE,EAAAA,GAIjB,MAAMsjE,EAAsBD,EAAUjiG,OAAS,GAAKiiG,EAAUlgC,SAAS,KAEjE5iE,EAAS8iG,EAAUvrF,UAAU,EAAGwrF,EAAsB,EAAID,EAAUjiG,OAAS,OAAI5C,GACvF,IAAIwjG,EAAmBhiE,EAAAA,EAEvB,GAAKz/B,GAEE,GAAuB,IAAlBA,EAAOa,QAAgB0/F,EAAkByC,KAAKhjG,IAAYA,EAAOa,QAAU4/F,EAAmB,CACxG,MAAMe,EAAUX,EAAmBrhG,EAAM0yB,EAAmBC,GAC5DsvE,EAAUF,EAAoBC,EAASxhG,EAAOkc,cAAeskF,EAC/D,OAJEiB,EAAUf,EAAwBlhG,EAAMmhG,EAAgBH,GAMrDiB,EAAQ5gG,OAKTkiG,EACF3/D,EAAYq+D,EAAQ,GAAGc,QAAQ,GAE/BF,EAAeZ,GAPfY,EAAe5iE,EAAAA,EAQjB,GACC,CACDvN,EAAmB1yB,EAAM4iG,EAAcjwE,EAAeiR,EAAau9D,EAAgB0B,KAGrFpiG,EAAAA,EAAAA,IAAU+jC,EAAsB,CAACA,EAAsB/U,IAEhD,CACL+T,mBAAoB7kC,QAAQ+kC,EAAeriC,QAAUsiC,EAAqBtiC,UAAYijC,EACtFb,kBAAmBc,EACnBb,iBACAC,uBACAC,cAEJ,C,qLC7JA,MAAM+7D,EAAW,IAEjB,IAAI8D,EACJ,IACEA,EAAqB,iCACvB,CAAE,MAAO90F,GAEP80F,EAAqB,6BACvB,CAEe,SAASn+D,EACtB7iB,EACAgN,EACAkL,EACAI,EACAN,EACA8B,EACA5F,EACA5D,GAEA,MAAO8iB,EAAe6tD,IAAoB/6F,EAAAA,EAAAA,OACnC27B,EAAkBC,EAAoBC,IAAwBviC,EAAAA,EAAAA,IAAQ,GAEvE0hG,GAA8Bh9D,EAAAA,EAAAA,KAAqB,KACvD,MAAMpyB,EAAOkb,IACb,IAAKhN,IAAcsY,KAAqBklE,YAAc1rF,EAAKqD,SAAS,KAAM,OAE1E,MAAMsoF,GAAsBC,EAAAA,EAAAA,IAAuB1lE,EAASp4B,SAE5D,OAAOwiC,EAAAA,EAAAA,GAAiBq7D,GAAqB9nF,MAAMqrF,KAAsB,GAAG57D,MAAM,GACjF,CAACplB,EAAWgN,EAASsL,EAAmBN,GAAWklE,GAEhDiE,GAAiBtzE,EAAAA,EAAAA,GACrBqzE,EAA6B,CAACA,EAA6Bl0E,EAASsL,IAAoB,GAGpF8oE,GAAoBvzE,EAAAA,EAAAA,IAAiB,IAClC7N,GAAagN,IAAUmX,WAAW,MACxC,CAACnX,EAAShN,KAEbhiB,EAAAA,EAAAA,KAAU,KACR,MAAMqjG,EAAcF,IAEpB,IAAKE,IAAiBvnE,IAAoB5F,EAExC,YADA+sE,OAAiBjlG,GAKnB,MAAMoB,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KACpC,IAAKH,EAEH,YADA6jG,OAAiBjlG,GAInB,MAAMslG,EAAYxnE,GAAkBpd,QAAO,CAACC,EAAe4kF,KACrDA,EAAO9pD,SAAWnnB,GACpB3T,EAAI3c,KAAKuhG,EAAO9pD,QAGX96B,IACN,IAEG5e,EAASsjG,EAAY/rF,UAAU,GAC/BksF,GAAcC,EAAAA,EAAAA,KAAkB7B,EAAAA,EAAAA,IAAO,IACtCwB,KAAuBltE,GAAoB,MAC5CotE,GAAa,KACflkG,EAAWW,GAEfkjG,EAAiBvjG,OAAOC,QAAOghG,EAAAA,EAAAA,IAAWvhG,EAAWokG,IAAc,GAClE,CAAClxE,EAAewJ,EAAkB5F,EAAiBitE,EAAgBC,IAEtE,MAAMz+D,GAAgBvgC,EAAAA,EAAAA,IAAgB,SAACqvB,GAAsC,IAAvBiwE,EAAUp5F,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAC9D,IAAKmpB,EAAK0yC,aAAcztB,EAAAA,EAAAA,IAAuBjlB,GAC7C,OAGF,MAAM0sB,GAAeC,EAAAA,EAAAA,IAAgB3sB,GAC/BkwE,GAAsBjrD,EAAAA,EAAAA,IAAuBjlB,IAAS,GACtDmwE,EAAezjD,EAChB,IAAGA,IACH,uEAEqB7mC,EAAAA,GAAsBC,yCAC1Bka,EAAKx1B,0EAGpB0lG,QAEDlxF,EAAUunB,EAASp4B,QAEnBiiG,EAA2BC,GADLpE,EAAAA,EAAAA,IAAuBjtF,IAE7CiwF,EAAUmB,EAAyBlB,YAAY,KAC/CoB,GAAsB5jD,EAAeA,EAAav/C,OAAS,EAAI+iG,EAAoB/iG,SACpFijG,EAAyBjjG,OAAS8hG,GAEvC,IAAiB,IAAbA,EAAgB,CAClB,MAAMllE,EAAW,GAAEqmE,EAAyBG,OAAO,EAAGtB,KAAWkB,UAC3D3D,EAAqB6D,EAAoBrxF,EAAQwF,WAAWX,UAAUusF,EAAyBjjG,QAC/FqjG,GAAgBC,EAAAA,EAAAA,IAAiBzxF,GACvCynB,EAAS,GAAEsD,IAAUyiE,MAErB3hE,EAAAA,EAAAA,KAAoB,KAClB,MAAM6lE,EAAmBF,EAAgBF,EAAqB,GAC9DxlE,EAAAA,EAAAA,GAAqB9rB,EAASixF,GAC1BS,GAAoB,IACtBC,EAAAA,EAAAA,IAAiB3xF,EAAS0xF,EAC5B,GAEJ,CAEAlB,OAAiBjlG,EACnB,IAIA,OAFAgC,EAAAA,EAAAA,IAAU+jC,EAAsB,CAACA,EAAsB/U,IAEhD,CACLyV,qBAAsBvmC,QAAQk3C,GAAex0C,SAAWijC,GACxDa,oBAAqBZ,EACrBa,gBACAC,qBAAsBwQ,EAE1B,CAIA,SAAS0uD,EAAoBhwF,GAC3B,OAAOA,EAAKkE,QAAQ,kCAAmC,OACzD,C,8LCnJA,MCkHA,GAAe9a,EAAAA,EAAAA,KAtFf,SAAkBqB,GAEL,IAFM,MACjBy1B,EAAK,UAAE40C,EAAS,YAAErmB,EAAW,YAAE8hD,GACtB9lG,EACT,MAAM,gBAAE+lG,EAAe,qBAAEC,EAAoB,iBAAE/tF,IAAqB5X,EAAAA,EAAAA,MAE9DC,GAAOC,EAAAA,EAAAA,MACP,SAAEgJ,IAAaC,EAAAA,EAAAA,MACfy8F,EAAYxwE,GAAS,cAAeA,EACpC51B,EAAW41B,GAAS,YAAaA,EACjCvsB,EAAQrJ,EAAW41B,EAAM3sB,QAAQI,WAAQzJ,EACzCymG,EAAYrmG,GAAWsmG,EAAAA,EAAAA,IAAkB1wE,QAASh2B,EAClD+nF,GAAajjF,EAAAA,EAAAA,GAAS2hG,GACtB/hG,EAAYtE,EAAYqJ,EAAQA,EAAM/E,WAAWC,QAAUqxB,EAAM3sB,QAAQ8oB,OAAOztB,WAAWC,aAAW3E,EACtG03F,GAAWp1F,EAAAA,EAAAA,GAAiBylF,GAAY,IACxC,aAAE7lF,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkBlC,QAAQw3F,IACnEiP,GAAuBznD,EAAAA,EAAAA,GAC3Bx6C,EACA8hG,IAAc57B,EACd9gE,IAAaq1C,EAAAA,IAGT7tC,GAAgB5O,EAAAA,EAAAA,GDjDD,WCmDnB,gBACE2jG,GAAeG,IDpD+F,WCqDhHA,GDrDqI,WCsDrI57B,GDtDwC,aCyD1C5oE,EAAAA,EAAAA,KAAU,MACJg0B,GAAW51B,GAAYomG,GACzBD,EAAqB,CAAEv4D,OAAQhY,EAAMgY,OAAQ44D,SAAU,CAAC5wE,EAAM/1B,KAChE,GACC,CAAC+1B,EAAOwwE,EAAWpmG,IAEtB,MAAMsjB,GAActd,EAAAA,EAAAA,IAAgB,KAC9BogG,EACFhuF,EAAiB,CACf7Q,QAAS9G,EAAK,mBAKlBylG,EAAgB,CACdt4D,OAAQhY,EAAOgY,OACfpb,QAASoD,EAAO/1B,GAChB4mG,cAAc,EACdC,eAAe,GACf,IAGJ,OACEtkG,EAAAA,GAAAC,cAAA,OACEjC,UAAW8Q,EACX3O,QAAS0jG,EAAc3iF,OAAc1jB,IAEnCwmG,GAAa57B,GACbpoE,EAAAA,GAAAC,cAAA,UAAQ8E,IAAKo/F,EAAsBnmG,UAAU,2CAE9C0B,GACCM,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAAA,OACEiE,IAAKgxF,EACLr8E,IAAI,GACJ7a,WAAWkC,EAAAA,EAAAA,GD5FiE,WC4FpCkoE,GD5FiB,WC4FgBzoE,GACzEyE,WAAW,IAEZxG,GAAYoC,EAAAA,GAAAC,cAACskG,EAAAA,EAAgB,CAAC/wE,MAAOA,EAAOx1B,UAAW2B,KAG3DqkG,GACChkG,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GDpG0I,WCoGvG,2BAA4B,mBAC5E7B,EAAK,yBAGTX,QAAQuJ,GAAOmC,WACdpJ,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,2BACZwR,EAAAA,EAAAA,IAAoBvI,EAAOmC,WAG/B24C,GAAe/hD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAGtC,G,wECxGA,MAQA,EARiD4D,IAC/C,MAAM,OAAEqgB,GAAWrgB,EACb2oF,GAAuBvrE,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,wBAAyB+C,GAGrF,OAAOsoE,EAAuBvqF,EAAAA,GAAAC,cAACsqF,EAAyB3oF,QAAYpE,CAAS,C,uPC6C/E,MAqLA,EArL4BO,IAoBtB,IApBuB,GAC3BN,EAAE,QACF0H,EAAO,oBACPs0C,EAAmB,UACnBj0C,EAAS,YACTm0C,EAAW,eACX6qD,EAAc,WACd9+F,EAAU,eACVL,EAAc,YACdo/F,EAAW,KACXnkG,EAAO,SAAQ,WACfokG,EAAU,YACVC,EAAW,eACX50F,EAAc,qBACd60F,EAAoB,cACpBj/F,EAAa,YACbo8C,EAAW,MACX78C,EAAK,QACL/E,EAAO,eACPoG,GACDxI,EAEC,MAAMgH,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7B+uB,GAASrL,EAAAA,EAAAA,IAAgBnf,KAAYof,EAAAA,EAAAA,IAAuBpf,GAC5Dm2C,EAAe3rB,EAAMmmC,QAErBnb,GAAiBC,EAAAA,EAAAA,IAAkB71C,EAAK00C,IAExC,SAAEnyC,IAAaC,EAAAA,EAAAA,OACdwzC,EAAeC,IAAoBtzC,EAAAA,EAAAA,IAASiyC,GAC7ChyC,EAAaozC,GAAiBJ,GAC9B,UACJtyC,EAAS,aAAEE,IACTE,EAAAA,EAAAA,IAAyBZ,EAAAA,EAAAA,IAAoB1C,EAAS7E,IAAQqH,GAC5DglD,EAAgBrR,GAAgBjzC,EAEhCw8F,EAAwBnnG,QAAQ+mG,IAC/BloD,IAAa70C,EAAAA,EAAAA,KAAUilD,GACxBnQ,EAAU9+C,QAAQivD,GAClBlQ,GAAWqoD,EAAAA,EAAAA,GAAwB3/F,EAASq3C,GAC5C2nD,IAAuBW,EAAAA,EAAAA,GAAwB3/F,GAAU0/F,GACzD3hG,IAAkBC,EAAAA,EAAAA,IAAoBq5C,GACtCv6C,IAAeo5C,EAAAA,EAAAA,IAA4Bl2C,IAE1Cg9C,GAAgB4iD,GAAa3iD,KAAephD,EAAAA,EAAAA,GAAQ2uB,EAAM0P,YAEjE7/B,EAAAA,EAAAA,KAAU,KACJmwB,EAAM0P,UACR0lE,KAEA3iD,IACF,GACC,CAACzyB,EAAM0P,YAEV,MACE92B,aAAcC,KACZC,EAAAA,EAAAA,IACFZ,EAAAA,EAAAA,IAAoB1C,EAAS,aAAcQ,GAAe2C,EAAAA,EAAAA,IAAsBnD,EAAS,cAGrF,YACJ4H,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IACF/H,EACAE,IAAmBM,EAAgB6C,GAAmBD,GACtDZ,IAAeglD,OACInvD,IAAnB6H,GAEI2/F,IAAiD,KAA/B9qE,EAAAA,EAAAA,GAAY6gB,IAGlCr7C,aAAcyN,GACdxN,qBAAsByN,KACpBxN,EAAAA,EAAAA,GAAkBoN,QAAgBxP,EAAWwnG,GAAiB,SAEhEtlG,aAAculG,GACdtlG,qBAAsBulG,KACpBtlG,EAAAA,EAAAA,IAAmB+sD,IAAkB5R,GAEnC75B,IAActd,EAAAA,EAAAA,IAAgB,KAC9BmJ,GACFxG,IAAiBpB,GAIdwnD,EAKDxK,GACFC,KAIFjiD,IAAUgF,EAAQ1H,IAThBu9C,GAAkBmqD,IAAeA,GASd,IAGjBz7F,IAAQC,EAAAA,EAAAA,IAAaxE,IAC3B8iC,EAAAA,EAAAA,IAA4B3oC,IAAgC,IAA9B8lG,GAAyB9lG,EACrD,IAAKslG,EAIH,YAHIQ,GACFrgG,EAAI3D,QAASq2F,QAAwB4N,EAAAA,KAA2BntF,gBAAgBotF,EAAAA,MAKpF,MAAMC,EAAYxgG,EAAI3D,QAASq2F,QAAwB4N,EAAAA,KACnD14C,GACF64C,EAAAA,EAAAA,GAAoB74C,EAAejjD,GAAOhE,EAAYR,GAAOqzD,MAAMktC,KACjE3jE,EAAAA,EAAAA,KAAgB,KACdyjE,EAAUvhG,MAAM2yF,YAAY,gBAAiB8O,GAC7CF,EAAU5sF,aAAa2sF,EAAAA,IAA2B,GAAG,GACrD,IAGJC,EAAUlzF,UAAUxO,IAAI,qBAC1B,GACC,CAAC+gG,EAAsBj4C,EAAejjD,GAAO86F,EAAgB9+F,EAAYR,IAE5E,MAAM,MAAEsG,GAAK,OAAEC,GAAM,QAAEi6F,IAAYhB,IAAciB,EAAAA,EAAAA,IAAyBxgG,EAASw/F,EAAan/F,EAAW8B,GAErGtJ,IAAYkC,EAAAA,EAAAA,GAChB,eACC6M,KAAgBgD,GAAkB,cACnC21F,IAAW,cACXl6F,KAAUC,IAAU,eACpBA,GAASm6F,EAAAA,IAAoB,kBAGzBC,GAAkBnB,EAAc,WAAUl5F,eAAkBk5F,EAAWx4F,aAAaw4F,EAAWv4F,OAAS,GACxGnI,GAAiB,WAAT1D,EAAqB,WAAUmL,QAAYo6F,UAAoBroG,EAE7E,OACEwC,EAAAA,GAAAC,cAAA,OACExC,GAAIA,EACJsH,IAAKA,EACL/G,UAAWA,GACXgG,MAAOA,GACP7D,QAAS4M,QAAcvP,EAAY0jB,IAElC2jF,GACC7kG,EAAAA,GAAAC,cAAA,UAAQ8E,IAAKo/F,GAAsBnmG,UAAU,2CAE/CgC,EAAAA,GAAAC,cAAA,OACEiE,IAAKyoD,EACL3uD,WAAWkC,EAAAA,EAAAA,GAAe,aAAc2kG,GAAyB,mBACjEhsF,IAAI,GACJ7U,MAAOygG,EAAe,UAASA,WAAkBjnG,EACjD4G,WAAY29C,IAEbxF,GACCv8C,EAAAA,GAAAC,cAAA,UACE8E,IAAK03C,EACLz+C,WAAWkC,EAAAA,EAAAA,GAAe,aAAcs8C,GAAW,oBAAqBt5C,MAG3E6+C,GAAe/hD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAC/BmP,KAAwB83F,IACvBjlG,EAAAA,GAAAC,cAAA,OAAKjC,UAAY,iBAAgBoP,MAC/BpN,EAAAA,GAAAC,cAACoQ,EAAAA,EAAe,CAAChF,SAAU4B,GAAkB9M,QAAS4M,GAAcmU,QAAc1jB,KAGrFynG,IACIjlG,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAQ,gBAAiBglG,MAC3DllG,EAAAA,GAAAC,cAACuiD,EAAAA,EAAY,CACXC,UAAWN,GACXQ,eAAa,EACb1gD,aAAcA,GACduJ,MAAOA,GACPC,OAAQA,GACRzN,UAAU,kBAEXgP,IACChN,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,6BAA6BsM,KAAK7J,MAAyB,IAAnBwM,IAAwB,KAE9E,C,mSCxLV,MAAM64F,EAAkBC,EAAAA,GAA4B,EAE9CC,EAA+D,GAArCF,EADR,GACiDx7F,KAAK27F,GAG9E,IAAIC,EAEJ,MAkPA,EAlPiCnoG,IAS3B,IAT4B,QAChCoH,EAAO,UACPnH,EAAS,YACT27C,EAAW,cACXh0C,EAAa,OACbL,EAAM,oBACNm0C,EAAmB,OACnB0sD,EAAM,YACN7/F,GACDvI,EAEC,MAAMgH,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7BwlG,GAAYxlG,EAAAA,EAAAA,IAAyB,MAErCylG,GAAYzlG,EAAAA,EAAAA,IAAyB,MAErCqG,EAAQ9B,EAAQ0B,QAAQI,OAExB,2BAAER,EAA0B,sBAAEG,IAA0BxI,EAAAA,EAAAA,MAExDu8C,GAAiBC,EAAAA,EAAAA,IAAkB71C,EAAK00C,IAEvCsB,EAAeC,IAAoBtzC,EAAAA,EAAAA,IAASiyC,GAC7ChyC,EAAajK,QAAQq9C,GAAiBJ,IACtC,UAAEtyC,EAAS,aAAEE,IAAiBE,EAAAA,EAAAA,IAClCZ,EAAAA,EAAAA,IAAoB1C,EAAS,WAC5BwC,GACDW,EAAAA,EAAAA,IAAsBnD,EAAS,YAGzBoD,aAAcC,IAAqBC,EAAAA,EAAAA,IACzCZ,EAAAA,EAAAA,IAAoB1C,EAAS,aAC5BQ,EACDnD,EAAAA,GAAeC,UAGV6jG,EAAeC,IAAmBvlG,EAAAA,EAAAA,KACnC+G,GAASC,EAAAA,EAAAA,IAAc7C,GACvB8C,EAA8B,iBAAX3C,EACnBkhG,EAAsBz+F,IAAWE,EAEjCu0C,GADW9+C,SAAQ29C,EAAAA,EAAAA,IAA4Bl2C,KACxBmhG,GAAiBE,EACxC/pD,IAAWqoD,EAAAA,EAAAA,GAAwB3/F,EAASq3C,GAC5Ct5C,IAAkBC,EAAAA,EAAAA,IAAoBq5C,GACtCv6C,IAAeo5C,EAAAA,EAAAA,IAA4Bl2C,GAC3C6H,GAAkB+tC,IAAkBurD,GAAkB3gG,EACtDq/F,IAAiD,KAA/B9qE,EAAAA,EAAAA,GAAY6gB,IAGlCr7C,aAAck9C,GACdj9C,qBAAsByN,KACpBxN,EAAAA,EAAAA,GAAkBoN,QAAgBxP,EAAWwnG,KAE1Cx9F,GAAaC,KAAkBC,EAAAA,EAAAA,KAAS,IAExC++F,GAAaC,KAAe/sE,EAAAA,EAAAA,IAAU,GACvCgtE,IAAuBC,EAAAA,EAAAA,IAAmBH,GA7DxB,KA+DxBjnG,EAAAA,EAAAA,KAAU,KACR,IAAKgI,GACH,OAGF,MAAMq/F,EAAWT,EAAUhlG,QAC3BslG,GAAYG,EAAS55C,YAAc45C,EAASz9F,SAAS,GACpD,CAACs9F,GAAal/F,GAAam/F,MAE9Bx7F,EAAAA,EAAAA,KAAgB,KACd,IAAK3D,KAAgB6+F,EAAUjlG,QAC7B,OAGF,MAAM0lG,EAAmBd,EAAyBW,KAAyBX,EAC3EK,EAAUjlG,QAAQuX,aAAa,oBAAqBmuF,EAAiB96D,WAAW,GAC/E,CAACxkC,GAAam/F,KAEjB,MAAMI,GAAarpG,QAAQ2K,GAAasyC,GAElCqsD,IAAcpjG,EAAAA,EAAAA,IAAgB,KAC7BwiG,EAAUhlG,UAIfqG,IAAe,GACfi/F,GAAY,IACZtU,EAAAA,EAAAA,GAASgU,EAAUhlG,SAAQ,IAGvB6lG,IAAiBrjG,EAAAA,EAAAA,IAAgB,KACrCsiG,MACAA,EAAec,EAAW,IAGtBE,IAAgBtjG,EAAAA,EAAAA,IAAgB,KACpC,MAAMijG,EAAWT,EAAUhlG,QACvBoG,GACEq/F,EAAS1U,SACXC,EAAAA,EAAAA,GAASyU,IACTM,EAAAA,EAAAA,OAEAN,EAAS/nF,SAGXmoF,KAEAJ,EAAS/nF,QACT+nF,EAAS55C,YAAc,GACvBmlC,EAAAA,EAAAA,GAASyU,IACTM,EAAAA,EAAAA,MACA1/F,IAAe,GACjB,KAGFjI,EAAAA,EAAAA,KAAU,KACHyI,GAGLi/F,IAAe,GACd,CAACj/F,IAEJ,MAAMiZ,IAActd,EAAAA,EAAAA,IAAgB,KAClC,GAAKyE,EAAL,CAMA,IAAI1C,EAKJ,OAAIoC,IAAWE,GACbrB,EAAsB,CAAEzB,iBACxBmB,YAIF4gG,KAVEzgG,EAA2B,CAAEtB,WAH/B,MAHE61C,GAAkBmqD,IAAeA,GAgBpB,IAGXiC,IAAmBxjG,EAAAA,EAAAA,IAAiB8J,IACxC,MAAMm5F,EAAWn5F,EAAEqT,cACnB2lF,GAAYG,EAAS55C,YAAc45C,EAASz9F,SAAS,IAoBvD,OACEpJ,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACL/G,WAAWkC,EAAAA,EAAAA,GAAe,aAAc,cAAe+H,GAAoB,kBAAmBjK,GAC9FmC,QAAS+gB,IAER7Y,GACCrI,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,iBACZwoG,GACCxmG,EAAAA,GAAAC,cAACuiD,EAAAA,EAAY,CACXC,WAAS,EACTxgD,aAAcA,GACduJ,MAAOu6F,EAAAA,GACPt6F,OAAQs6F,EAAAA,GACR/nG,UAAU,kBAGdgC,EAAAA,GAAAC,cAACktD,EAAAA,EAAc,CACbC,QAAS25C,GACThiG,IAAKqhG,EACLliG,IAAKmE,EACLrK,UAAU,aACVwN,MAAOu6F,EAAAA,GACPt6F,OAAQs6F,EAAAA,GACR7/F,UAAWsgG,EACXl5C,yBAAuB,EACvBD,OAAQ7lD,GACR+lD,MAAO/lD,GACPgmD,aAAW,EACX65C,YAAU,EACVp+B,QAASzhE,GAAc2+F,GAAUa,QAAcxpG,EAC/C8pG,aAAc9/F,GAAc4/F,QAAmB5pG,EAC/CiwD,QAAS84C,MAIbC,GACAxmG,EAAAA,GAAAC,cAAA,UACE8E,IAAK03C,GACLz+C,WAAWkC,EAAAA,EAAAA,GAAe,YAAa,oBAAqBgD,IAC5Dc,MAAQ,UAAS+hG,EAAAA,iBAAwCA,EAAAA,SAG7D/lG,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,YACZwJ,IACCxH,EAAAA,GAAAC,cAAA,OAAKuL,MAAOu6F,EAAAA,GAA2Bt6F,OAAQs6F,EAAAA,IAC7C/lG,EAAAA,GAAAC,cAAA,UACE8E,IAAKshG,EACLkB,GAAIzB,EACJ0B,GAAI1B,EACJ37B,EAAG27B,EA5NO,EA6NV9nG,UAAU,kBACV0hF,UAAY,eAAcomB,MAAoBA,KAC9C,mBAAkBE,EAClB,oBAAmBA,MAK1BppD,IACC58C,EAAAA,GAAAC,cAAA,OAAKjC,UAAY,iBAAgBoP,MAC/BpN,EAAAA,GAAAC,cAACoQ,EAAAA,EAAe,CAAChF,SAAU1F,EAAgB6C,EAAmBD,KAGjEi+F,IAAwB5pD,IA/EzB58C,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACbgC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLoP,MAAM,OACNnP,OAAK,EACLH,KAAK,UACLtC,UAAU,OACV+R,gBAAc,GAEd/P,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,UAEbjQ,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,gBAsEX5H,IAAc0yC,GACd/6C,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,wBAEbiK,GACAjI,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACZwJ,IAAcgI,EAAAA,EAAAA,IAAoB42F,EAAUhlG,QAAS6rD,cAAez9C,EAAAA,EAAAA,IAAoBvI,EAAMmC,YAC5F5B,IAAe4+F,EAAUhlG,QAAS+wF,SAAWnyF,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAACC,KAAK,WAG3D,C,wRChPV,MA2NA,EA3N4BlS,IAgBtB,IAhBuB,GAC3BN,EAAE,QACF0H,EAAO,8BACPuvD,EAA6B,8BAC7BhD,EAA6B,UAC7BlsD,EAAS,YACTm0C,EAAW,YACX8tD,EAAW,eACXpiG,EAAc,YACdo/F,EAAW,WACXC,EAAU,YACVC,EAAW,cACXh/F,EAAa,YACbo8C,EAAW,QACX5hD,EAAO,eACPoG,GACDxI,EAEC,MAAMgH,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7B+qD,GAAW/qD,EAAAA,EAAAA,IAAyB,MAEpCqG,GAASud,EAAAA,EAAAA,IAAgBrf,KAAYsf,EAAAA,EAAAA,IAAuBtf,GAC5Dm2C,EAAer0C,EAAM6uD,SAEpB3T,EAAgB4iD,EAAa3iD,IAAephD,EAAAA,EAAAA,GAAQiG,EAAMo4B,YAEjE7/B,EAAAA,EAAAA,KAAU,KACJyH,EAAMo4B,UACR0lE,IAEA3iD,GACF,GACC,CAACn7C,EAAMo4B,YAEV,MAAMqoE,GAA2B9sD,EAAAA,EAAAA,IAAkB71C,EAAK2vD,GAClDizC,GACJ/sD,EAAAA,EAAAA,IAAkB71C,EAAK2sD,IACpBg2C,EAECE,GAAoBhnG,EAAAA,EAAAA,IAAO8mG,GAC7BC,IAA6BC,EAAkBxmG,UACjDwmG,EAAkBxmG,SAAU,GAG9B,MAAM,SAAEkG,IAAaC,EAAAA,EAAAA,OACdwzC,EAAeC,IAAoBtzC,EAAAA,EAAAA,IAASiyC,GAC7ChyC,EAAajK,QAAQq9C,GAAiB2sD,IACrCG,EAAeC,IAAoBpgG,EAAAA,EAAAA,IAAShK,QAAQ+pG,IAAgBtlD,IAErE4lD,IAAgBlgG,EAAAA,EAAAA,IAAoB1C,EAAS,WAC5C6iG,KAAwBtgG,EAAAA,EAAAA,IAAShK,QAAQqqG,IAAiBv4C,EAAAA,GAA0Bu4C,OACrF,UAAE1/F,GAAS,aAAEE,KAAiBE,EAAAA,EAAAA,GAClCs/F,IAAgBpgG,GAAYW,EAAAA,EAAAA,IAAsBnD,EAAS,WAEvDwnD,GAAgBrR,GAAgBjzC,IAC/Bi+F,GAAeC,KAAmBvlG,EAAAA,EAAAA,KAEnCiB,IAAeo5C,EAAAA,EAAAA,IAA4Bl2C,GAC3C8iG,GAAWvqG,QAAQuE,IACnB4iG,GAAwBnnG,QAAQ+mG,GAEhCxsC,IAAmBpwD,EAAAA,EAAAA,IAAoB1C,EAAS,YAC/C+iG,KAAsBxgG,EAAAA,EAAAA,IAAShK,QAAQu6D,IAAoBzI,EAAAA,GAA0ByI,MACtFkwC,GAAiBT,EACjBrlG,IAAiBC,EAAAA,EAAAA,GAAS21D,IAAmBkwC,IAC7C3kG,IAAoBL,EAAAA,EAAAA,IAAoB8kG,IAAY5lG,MAAoBikG,IAExE9pD,IAAWyrD,IAAY5lG,IAAkBikG,GACzC7pD,IAAWqoD,EAAAA,EAAAA,GAAwB3/F,EAASq3C,IAC5C2nD,IAAuBW,EAAAA,EAAAA,GAAwB3/F,GAAU0/F,IACzD3hG,IAAkBC,EAAAA,EAAAA,IAAoBq5C,IAEtC4rD,GAAWz7C,IAAiBi7C,EAAkBxmG,QAE9CinG,IAAgBC,EAAAA,EAAAA,GAAoB38C,GAAU,GAAOy8C,KACnD7/F,aAAcC,KAAqBC,EAAAA,EAAAA,IACzCZ,EAAAA,EAAAA,IAAoB1C,EAAS,aAC5BQ,GACD2C,EAAAA,EAAAA,IAAsBnD,EAAS,cAG3B,YAAE4H,GAAW,eAAEC,GAAc,iBAAEC,KAAqBC,EAAAA,EAAAA,IACxD/H,EACAE,IAAmBM,EAAgB6C,GAAmBD,IACrDZ,IAAe2+F,KAAkB0B,IAAyBriG,OACxCnI,IAAnB6H,GAGI2/F,IAAiD,KAA/B9qE,EAAAA,EAAAA,GAAY6gB,IAElCr7C,aAAcyN,GACdxN,qBAAsByN,KACpBxN,EAAAA,EAAAA,GAAkBoN,KAAmBq7F,QAAe7qG,EAAWwnG,KAEjErlG,qBAAsB4oG,KACpB3oG,EAAAA,EAAAA,GAAkBlC,SAASq9C,GAAiB4R,MAAmBk7C,IAAkB16F,MAE9EvI,GAAc4jG,KAAmB9gG,EAAAA,EAAAA,IAAiB,GACnD0/F,IAAmBxjG,EAAAA,EAAAA,IAAiB8J,IACxC86F,GAAgBl+F,KAAK2B,IAAI,EAAGyB,EAAEqT,cAAcksC,YAAc,GAAG,IAGzD7jD,IAAYshC,OAAO+9D,SAAS98C,EAASvqD,SAASgI,UAAYuiD,EAASvqD,SAASgI,SAAWnC,EAAMmC,WAAa,EAE1GM,IAAQC,EAAAA,EAAAA,IAAaxE,GACrBujG,GAAiBhrG,SAAQ+mB,EAAAA,EAAAA,IAAuBtf,KAChD,MACJqG,GAAK,OAAEC,IACLi5F,IAAciE,EAAAA,EAAAA,IAAyB1hG,EAAOyC,GAAOi7F,EAAa+D,GAAgBljG,EAAW8B,GAE3F4Z,IAActd,EAAAA,EAAAA,IAAgB,KAC9BmJ,GACFxG,IAAiBpB,GAIfQ,GACFvH,EAAAA,EAAAA,MAAaqI,2BAA2B,CAAEtB,YAIvCwnD,IAKDA,KAAkBk7C,GACpBC,GAAiB,GAGf3lD,EACFC,IAIFjiD,IAAUgF,EAAQ1H,GAAIwJ,GAAOy7C,QAb3B1H,GAAkBmqD,IAAeA,GAaA,IAG/BnnG,IAAYkC,EAAAA,EAAAA,GAChB,oBACC6M,IAAe,cAChBtB,GAASm6F,EAAAA,IAAoB,kBAIzB5hG,GAAS,WAAUyH,QADDi5F,EAAc,WAAUl5F,eAAkBk5F,EAAWx4F,aAAaw4F,EAAWv4F,OAAS,KAG9G,OACEnM,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACLtH,GAAIA,EACJO,UAAWA,GACXgG,MAAOA,GACP7D,QAAS4M,QAAcvP,EAAY0jB,IAElC2jF,IACC7kG,EAAAA,GAAAC,cAAA,UAAQ8E,IAAKo/F,GAAsBnmG,UAAU,2CAE9CoqG,IACCpoG,EAAAA,GAAAC,cAACktD,EAAAA,EAAc,CACbpoD,IAAK4mD,EACLznD,IAAKyoD,GACL3uD,WAAWkC,EAAAA,EAAAA,GAAe,aAAc2kG,IAAyB,mBACjEz3C,QAASy6C,GAAiBF,IAA6BU,GACvDh7C,OAAK,EACLE,MAAI,EACJC,aAAW,EACXppD,WAAY29C,EACZulD,aAAcF,GACd35C,QAAS84C,GACTviG,MAAOygG,EAAe,UAASA,WAAkBjnG,IAGrDwC,EAAAA,GAAAC,cAAA,OACEiE,IAAK7B,GACLrE,WAAWkC,EAAAA,EAAAA,GAAe,YAAasD,GAAmBqhG,IAAyB,mBACnFhsF,IAAI,GACJ7U,MAAOygG,EAAe,UAASA,YAAmBjnG,EAClD4G,WAAY29C,IAEbkmD,KAAaC,IACZloG,EAAAA,GAAAC,cAAA,UACE8E,IAAK03C,GACLz+C,WAAWkC,EAAAA,EAAAA,GAAe,aAAcs8C,IAAW,oBAAqBt5C,MAG3E6+C,GAAe/hD,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,cAChCgC,EAAAA,GAAAC,cAAA,KAAGjC,WAAWkC,EAAAA,EAAAA,GAAe,OAAQ,kBAAmBqoG,MACxDvoG,EAAAA,GAAAC,cAACuiD,EAAAA,EAAY,CACXC,UAAWN,EACXQ,eAAa,EACb1gD,aAAcA,GACduJ,MAAOA,GACPC,OAAQA,GACRzN,UAAU,kBAEXmP,IACCnN,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,gBAAiBkN,KAC9CpN,EAAAA,GAAAC,cAACoQ,EAAAA,EAAe,CAAChF,SAAU4B,GAAkB9M,QAAS+gB,OAGxD65B,IAAkB4R,IAClB3sD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,wBAEdgP,IAAoBq7F,KAAiB1iG,EAKpC3F,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,0BACZiJ,EAAMy7C,MAAQ,OAAQlzC,EAAAA,EAAAA,IAAoBlF,KAAK2B,IAAI7C,GAAWxE,GAAc,IAC5EyjG,IAAiBroG,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,8CANjCgC,EAAAA,GAAAC,cAAA,QAAMjC,UAAU,6BACZ+O,IAAepH,EAAkB,GAAE2E,KAAK7J,MAAyB,IAAnBwM,OAA6B,OAQ7E,C,uRC/OV,MAmPA,GAAevQ,EAAAA,EAAAA,KAxNeqB,IAoBxB,IApByB,QAC7BoH,EAAO,8BACPuvD,EAA6B,8BAC7BhD,EAA6B,UAC7BlsD,EAAS,YACTm0C,EAAW,YACX8tD,EAAW,UACXz3E,EAAS,YACT20E,EAAW,cACXh/F,GAAgB,EAAK,YACrBo8C,EAAW,YACX8hD,EAAW,MACXrwE,EAAK,MACLtuB,EAAK,kBACLgxD,EAAiB,mBACjBnc,EAAkB,sBAClBH,EAAqB,aACrBI,EAAY,YACZ4uD,EAAW,sBACXC,GACD9qG,EACC,MAAM,iBAAE+qG,IAAqB1qG,EAAAA,EAAAA,MACvB0xB,GAAUyjC,EAAAA,EAAAA,IAAkBpuD,IAC5B,SAAEmC,IAAaC,EAAAA,EAAAA,MAEfxC,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7BmoG,GAAcnoG,EAAAA,EAAAA,IAAuB,MAErCvC,GAAOC,EAAAA,EAAAA,KAEP0qG,GAAmBplG,EAAAA,EAAAA,IAAgB,KACvCo2C,GAAe,IAGXivD,GAAyBrlG,EAAAA,EAAAA,IAAgB,KACxCksB,GACLg5E,EAAiB,CACf35E,IAAKW,EAAQX,KACb,KAGIqE,MAAOtJ,EAAS,SAAEoL,GAAaxF,GAAW,CAAC,GAEnDo5E,EAAAA,EAAAA,GAAeh/E,GAAWshB,OAAQthB,GAAWzsB,GAAI+1B,GAEjD,MAAM21E,EAAiB7zE,GAAU8zE,iBAAmB9zE,GAAU+zE,YAAY,IAAI1T,mBACxEz9B,GAAcC,EAAAA,EAAAA,GAAwB4wC,GAAcI,GAE1D,IAAKr5E,EACH,OAGF,MAAM,SACJ4jC,GAAQ,IACRvkC,GAAG,WACH2kC,GAAU,MACVtlD,GAAK,YACLy0C,GAAW,MACXtzB,GAAK,MACL1oB,GAAK,MACLH,GAAK,KACLqV,GAAI,SACJ/J,IACE0d,EACEw5E,GA3FmB,mBA2FTntF,GAEVotF,GAAsBv5E,GADLwD,GAAS,cAAeA,OACyCh2B,EC9HnF,SAA8B2e,GACnC,OAAQA,GACN,IAAK,2BACL,IAAK,6BACL,IAAK,wBACH,MAAO,+BACT,IAAK,mBACH,MAAO,0BACT,IAAK,eACH,MAAO,sBACT,IAAK,qBACH,MAAO,6BACT,IAAK,sBACH,MAAO,qCACT,IAAK,qBACL,IAAK,gBACH,MAAO,wBACT,IAAK,mBACH,MAAO,0BACT,IAAK,gBACH,MAAO,uBACT,IAAK,kBACH,MAAO,0BACT,IAAK,oBACH,MAAO,eACT,IAAK,iBACH,MAAO,wBACT,IAAK,yBACL,IAAK,uBACH,MAAO,wBACT,IAAK,sBACH,MAAO,6BACT,QACE,OAEN,CD2F6DqtF,CAAqBrtF,IAC1E43C,IAAuBC,EAAAA,EAAAA,GAAS/Q,GA/FhB,KAgGhBwmD,GAAY/rG,QAAQq2D,IAAwBvlD,IAASklD,IAC3D,IAAIg2C,GAAgBhsG,QAAQ43B,GAC5B,GAAIm0E,IAAa35E,GAASH,QAAUG,EAAQ7oB,MAAO,CACjD,MAAM,MAAEuE,EAAK,OAAEC,IAAWk6F,EAAAA,EAAAA,IAAyBxgG,OAAS3H,OAAWA,EAAW8J,GAClFoiG,GAAgBl+F,IAAUC,CAC5B,CACA,MAAMk+F,IAAsBh6E,IAAS1oB,KAAU+yC,IAAiB0vD,GAE1D1rG,IAAYkC,EAAAA,EAAAA,GAChB,UACA8vB,GAAa,aACb05E,IAAiB,qBAChB/5E,KAAU1oB,KAAU+oB,GAAa,gBAClC/oB,IAAS,cACRwiG,IAAa,aACdr3F,IAAY,gBACZm3F,IAAsB,qBAiBxB,OACEvpG,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACL/G,UAAWA,GACX,gBAAe01D,IAAYI,IAAY,GACvCpyD,IAAKrD,EAAKsD,MAAQ,MAAQ,QAE1B3B,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe,mBAAoBopG,IAAW,aAC3DpzC,GACCl2D,EAAAA,GAAAC,cAACk2D,EAAAA,EAAmB,CAClBC,gBAAiBF,EACjBl4D,UAAU,8BAGbsrG,IACCtpG,EAAAA,GAAAC,cAAC2pG,EAAAA,EAAS,CAACp2E,MAAOA,EAAOuuB,YAAaA,EAAa8hD,YAAaA,EAAaz7B,WAAS,IAEvFz4C,KAAU1oB,IACTjH,EAAAA,GAAAC,cAAC4pG,EAAAA,EAAK,CACJ1kG,QAASA,EACTs0C,oBAAqBib,EACrBlvD,UAAWA,EACXm0C,YAAaA,EACbr5C,KAAMopG,GAAgB,YAAc,SACpC/E,YAAaA,EACb50F,gBAAiB45F,GACjBhkG,cAAeA,EACfo8C,YAAaA,EACb78C,MAAOA,EACP/E,QAASwpG,GAAqBX,OAAmBxrG,EACjD+I,eAAgBsiG,IAGnBY,IACCzpG,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACbgC,EAAAA,GAAAC,cAACk0D,EAAAA,EAAQ,CAACn2D,UAAU,YAAYmxB,IAAKA,GAAKzuB,KAAMgzD,IAAYI,MAC1D9jC,GAAaxhB,IACbxO,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,eAAcqR,EAAAA,EAAAA,GAAWb,KAEvCulD,IACC/zD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,qBAAoBqR,EAAAA,EAAAA,GAAW0kD,GAAsB,CAAC,QAAS,UAIhF/jC,GAAa/oB,IACbjH,EAAAA,GAAAC,cAAC6pG,EAAAA,EAAK,CACJ3kG,QAASA,EACTuvD,8BAA+BA,EAC/BlvD,UAAWA,EACXm0C,YAAaA,EACb8tD,YAAaA,EACb9C,YAAaA,EACbh/F,cAAeA,EACfo8C,YAAaA,EACb5hD,QAASwpG,GAAqBX,OAAmBxrG,EACjD+I,eAAgBsiG,KAGlB74E,GAAalpB,IACb9G,EAAAA,GAAAC,cAAC8pG,EAAAA,GAAK,CACJ7kG,MAAOA,EACPC,QAASA,EACTG,OAAQ4C,EAAAA,GAAY6G,OACpBvJ,UAAWA,EACXG,cAAeA,EACfS,OAAQwiG,EACRriG,eAAgBsiG,KAGlB74E,GAAa5d,IACbpS,EAAAA,GAAAC,cAAC+pG,EAAAA,EAAQ,CACP7kG,QAASA,EACTs0C,oBAAqBib,EACrB9a,sBAAuBA,EACvBI,aAAcgvD,EACdziG,eAAgBsiG,EAChBljG,cAAeA,EACfo0C,mBAAoBA,KAGtB/pB,GAAasF,GACbt1B,EAAAA,GAAAC,cAAA,OACE8E,IAAKgkG,EACL/qG,WAAWkC,EAAAA,EAAAA,GACT,cAAe,eAAgBo1B,EAAS20E,SAAW,sBAAuB,sBAG3E30E,EAAS+zE,UAAUhqG,KAAKwC,GACvB7B,EAAAA,GAAAC,cAAA,OAAKyhB,IAAK7f,EAAQpE,GAAIO,UAAU,oBAC9BgC,EAAAA,GAAAC,cAACsjE,EAAAA,EAAW,CACV7L,aAAcqxC,EACdlnG,QAASA,EACT4hE,YAAU,EACVnjE,KAAMg1B,EAAS20E,QA3Nd,GADE,GA6NH/xC,YAAaA,EACbxG,8BAA+BA,EAC/BgD,8BAA+BA,QAMxC1kC,GAAa8jC,KAAe21C,IAC3BzpG,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,gBACbgC,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,aAAa81D,IAC1B9zD,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,oBAAoBK,EAAK,6BAI3CkrG,KA3HsBra,GA2HkBqa,GAzHzCvpG,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLxC,UAAU,wBACVsC,KAAK,OACLsP,MAAM,cACNs6F,eAAa,EACb/pG,QAAS8oG,GAER5qG,EAAK6wF,OATZ,IAA2BA,EA4HnB,G,mCE9QV,MAAMib,EAA2B,CAC/BC,KAAM,CACJC,SAAU,mBACVC,SAAU,iBAEZC,MAAO,CACLF,SAAU,mBACVC,SAAU,qBAIC,SAAS9E,EACtBthG,EAAawF,EAAgBhE,EAAsBR,GAEnD,OAAIQ,EACKqU,QAAQwE,QAAQ4rF,EAAyBjlG,GAAS,SAASwE,EAAQ,WAAa,aAK3F0M,eAAyClS,EAAawF,GACpD,MAAMkyF,EAAM,IAAI4O,MAChB5O,EAAI13F,IAAMA,EACV03F,EAAI6O,YAAc,YAEb7O,EAAIpwF,aACD,IAAIuO,SAASwE,IACjBq9E,EAAI8O,OAASnsF,CAAO,IAIxB,MAAMnT,EAASgH,SAASnS,cAAc,UAChCyL,EAAMN,EAAOO,WAAW,MAE9BP,EAAOI,MAAQowF,EAAIpwF,MACnBJ,EAAOK,OAASmwF,EAAInwF,OAEpBC,EAAIktD,UAAUgjC,EAAK,EAAG,EAAGA,EAAIpwF,MAAOowF,EAAInwF,QAExC,MAAMS,EAAIxC,EAAQkyF,EAAIpwF,MAAQ,EAAI,EAC5BW,EAAIyvF,EAAInwF,OAAS,EAGvB,MAAQ,QADMpB,MAAMgN,KAAK3L,EAAIi/F,aAAaz+F,EAAGC,EAAG,EAAG,GAAGlC,MACjCwb,KAAK,OAC5B,CA3BSmlF,CAA0B1mG,EAAKwF,EACxC,C,yFCRA,MAAMmhG,EAAwB,GACxBC,EAA8B,GACvBC,EAA4B,GAAK7tD,EAAAA,EACxC8tD,EAAkBH,EAAwB3tD,EAAAA,EACnC0oD,EAAmB,EAAI1oD,EAAAA,EAE7B,SAAS+tD,EAAiBvqG,EAAewqG,GAC9C,OAAQxqG,GAAMN,QAAU,GAAK0qG,GAA+BI,EACxDH,EACAC,CACN,CAEO,SAASrF,EACdxgG,EAAqBw/F,EAAuBn/F,EAAqB8B,GAEjE,MAAMoC,GAAQC,EAAAA,EAAAA,IAAaxE,GACrBwqB,GAAQrL,EAAAA,EAAAA,IAAgBnf,KAAYof,EAAAA,EAAAA,IAAuBpf,GAC3D8B,GAAQud,EAAAA,EAAAA,IAAgBrf,GAExBgmG,EAAiBztG,SAAQ6mB,EAAAA,EAAAA,IAAuBpf,IAChDujG,EAAiBhrG,SAAQ+mB,EAAAA,EAAAA,IAAuBtf,KAChD,MAAEqG,EAAK,OAAEC,GAAWkkB,GACtBy7E,EAAAA,EAAAA,IAA+Bz7E,EAAOjmB,EAAOi7F,EAAawG,EAAgB3lG,EAAW8B,IACrFqhG,EAAAA,EAAAA,IAAyB1hG,EAAQyC,EAAOi7F,EAAa+D,EAAgBljG,EAAW8B,GAG9E+jG,EAAgBJ,GADFr3C,EAAAA,EAAAA,IAAezuD,IAGnC,IAAImmG,EAAgB,EAChB9/F,EAAQ6/F,GAAiBA,EAAgB7/F,EAAQq/F,IACnDS,EAAgBD,EAAgB7/F,GAE9BC,EAAS6/F,EAAgB1F,GAAoBA,EAAmBn6F,EAAS6/F,EAAgBT,IAC3FS,EAAgB1F,EAAmBn6F,GAGrC,MAAM8/F,EAAajhG,KAAK7J,MAAM+K,EAAQ8/F,GAChCE,EAAclhG,KAAK7J,MAAMgL,EAAS6/F,GAExC,MAAO,CACL9/F,MAAO+/F,EACP9/F,OAAQ+/F,EACR9F,QAAS6F,EAAaF,GAAiBG,EAAc5F,EAEzD,C,mFChDe,SAASd,EACtB3/F,EACAspB,EACAg9E,GAEA,MAAM,SAAEnkG,IAAaC,EAAAA,EAAAA,MAEfpF,EAAUspG,IAAapwD,EAAAA,EAAAA,IAA4Bl2C,GAEzD,OAAOu3C,EAAAA,EAAAA,GACLv6C,EACAzE,QAAQ+wB,GACRnnB,IAAaq1C,EAAAA,GAEjB,C,mFCXA,MAAM+uD,EAAsB,IACtBC,EAAyB,IACzBC,EAAe,GAEN,SAAS/iB,EACtBvsC,EACAx/C,EACA0qF,EACAE,EACAE,EACAikB,EACAxjB,EACApzB,GAEA,MAAM62C,GAAiBlrG,EAAAA,EAAAA,KAAQynF,IAE/Bl9E,EAAAA,EAAAA,KAAgB,KACd,MAAM4gG,EAAcD,EAAe1qG,QAGnC,GAFA0qG,EAAe1qG,SAAU,EAErBomF,GAAalrC,EAAWl7C,QAAS,CACnC,MAAM4qG,EAAoB1vD,EAAWl7C,QAAQq2F,QAAwB,gBAE/DwU,EAAarkB,EAEbkQ,EAAOA,KACX,MAAM5jF,GAASg4F,EAAAA,EAAAA,IACbF,EACA1vD,EAAWl7C,QACX6qG,EAAa,MAAQ,cACrBL,OACmBpuG,IAAnBkqF,EAAgCukB,EAAaP,EAAsBC,OAA0BnuG,EAC7FkqF,OACAlqF,EACAquG,GACA,GAGF,GAAI52C,EAAS,CACX,MAAMk3C,EAAa7vD,EAAWl7C,QAASurB,cAA+B,aAClEw/E,IACFrqE,EAAAA,EAAAA,KAAgB,MACdsqE,EAAAA,EAAAA,IAAcD,EAAY,UAAU,GAG1C,CAEA,OAAOj4F,CAAM,EAGX63F,GAEFxU,EAAAA,EAAAA,IAAoBO,IAEpB15E,EAAAA,EAAAA,KAAe,MACb0jB,EAAAA,EAAAA,IAAgBg2D,IAAQ,GAG9B,IACC,CACDx7C,EAAYx/C,EAAQ0qF,EAAWE,EAAgBE,EAAkBikB,EAAqB52C,GAE1F,C,wEClEA,MAEMo3C,EAAuB,IAAI3X,IAElB,SAASn/B,EACtBf,EACA13D,EACAwR,EACAg+F,GAEA,MAAMC,EAAqBD,GAAyBh+F,EAChDkmD,GAAkBg4C,WAAWF,KAAyBh+F,QAAa9Q,GAEjE,UAAEivG,EAAS,KAAE/rG,GAAS6rG,GAAsB,CAAC,EAUnD,OARA/sG,EAAAA,EAAAA,KAAU,KACH1C,GAAWwR,IAEX5N,QAAsBlD,IAAdivG,GAA2BH,GA0C5C,SACExvG,EACAwR,EACAigF,GAEA,MAAMme,EAAuBL,EAAqBhyE,IAAIk0D,IAAmB,IAAImG,IACvEzsE,EAAaykF,EAAqBryE,IAAIv9B,IAAW,GAEnDmrB,EAAWtR,SAASrI,KAKxB2Z,EAAWzmB,KAAK8M,GAChBo+F,EAAqBlW,IAAI15F,EAAQmrB,GACjCokF,EAAqB7V,IAAIjI,EAAgBme,IAEzCtuG,EAAAA,EAAAA,MAAauuG,+BAA+B,CAAE7vG,SAAQmrB,aAAYsmE,oBARhEqe,GAWJ,CA7DMC,CAAsB/vG,EAAQwR,EAAWg+F,EAC3C,GACC,CAACxvG,EAAQ4D,EAAM+rG,EAAWn+F,EAAWg+F,IAEnCxvG,GAAWwR,EAOT,CACLm+F,YACAn3C,eAAgB50D,GART,CACL+rG,WAAW,EACXn3C,oBAAgB93D,EAQtB,CAEA,MAAMovG,GAA0BE,EAAAA,EAAAA,KAEhC,WACE,MAAM,kBAAEC,IAAsB3uG,EAAAA,EAAAA,MAC9B,IAAI4uG,GAAiB,EACrBX,EAAqBxgG,SAAQ,CAAC5M,EAAOsvF,KACnCtvF,EAAM4M,SAAQ,CAACoc,EAAYnrB,KACzB,MAAMmwG,EAAwBhlF,EAAW7oB,MAAM,EA3CnB,IA6CxB6tG,EAAsB7sG,OAAS6nB,EAAW7nB,SAC5C4sG,GAAiB,GAGnBD,EAAkB,CAAEjwG,SAAQmrB,WAAYglF,EAAuB1e,mBAiCrE,SACEzxF,EACAmrB,EACAsmE,GAEA,MAAMme,EAAuBL,EAAqBhyE,IAAIk0D,GACtD,IAAKme,GAAsBpsG,KAEzB,YADA+rG,EAAqBxX,OAAOtG,GAI9B,MAAM2e,EAAgBR,EAAqBryE,IAAIv9B,GAC/C,IAAKowG,GAAe9sG,OAElB,YADAssG,EAAqB7X,OAAO/3F,GAI9B,MAAMqwG,EAAgBD,EAAc3tG,QAAQ9B,IAAQwqB,EAAWtR,SAASlZ,KAExE,IAAK0vG,GAAe/sG,OAKlB,OAJAssG,EAAqB7X,OAAO/3F,QACvB4vG,EAAqBpsG,MACxB+rG,EAAqBxX,OAAOtG,IAKhCme,EAAqBlW,IAAI15F,EAAQqwG,EACnC,CA3DMC,CAA0BtwG,EAAQmwG,EAAuB1e,EAAe,GACxE,IAGAye,GACFJ,GAEJ,GAzDuB,I,gKCPvB,QAAuB,WAAvB,EAAmM,WAAnM,EAAsQ,WCYhQS,EAAgB,EAAInwD,EAAAA,EAgD1B,GAAexgD,EAAAA,EAAAA,KApCsCqB,IAQ/C,IARgD,SACpDo0C,EAAQ,OACRm7D,EAAM,QACNx1E,EAAO,kBACPy1E,EAAiB,MACjBvpG,EAAK,SACLgkD,EAAQ,iBACRtU,GACD31C,EAKC,OACEiC,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GACTiE,EDxCmC,WC0CnCmpG,GAAUnpG,GACTopG,GAAqBz1E,GD3C2F,WC4CjHy1E,GD5CwD,YC8C1DvpG,MAAOA,EACP7D,QAdJ,WACEuzC,EAAiBvB,EACnB,GAcInyC,EAAAA,GAAAC,cAAC+Y,EAAAA,EAAW,CACVsvB,WAAY6J,EAAS7J,WACrBhoC,KAAM+sG,IAEPrlD,GACChoD,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAAChS,UAAWmG,EAAa8L,KAAK,eAEjC,I,qCCzCV,MAAMo9F,EAAgB,EAAInwD,EAAAA,EA2E1B,GAAexgD,EAAAA,EAAAA,KAhEgCqB,IAOzC,IAP0C,SAC9Co0C,EAAQ,QACRra,EAAO,kBACPy1E,EAAiB,OACjBD,EAAM,SACNtlD,EAAQ,iBACRtU,GACD31C,EACC,MAAMyvG,GAAkBlrG,EAAAA,EAAAA,GAAU,UAAS6vC,EAASs7D,iBAAiBhwG,MAAOq6B,GAAWy1E,GACjFllG,GAAY/F,EAAAA,EAAAA,GAAU,WAAU6vC,EAASu7D,iBAAiBjwG,MAAOq6B,GAAWy1E,GAC5EI,GAAiBrrG,EAAAA,EAAAA,GAAU,WAAU6vC,EAASof,YAAY9zD,MAAO8vG,IAChEhiC,EAAmBC,IAAuBxqE,EAAAA,EAAAA,MAE1C4sG,EAAY,CAAGC,IAAqB7sG,EAAAA,EAAAA,IAAQ,IAC5CwG,EAAasmG,EAAUC,IAAc/sG,EAAAA,EAAAA,KAM5C,OACEhB,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAampG,GAAUnpG,GACjDhE,QAPJ,WACEuzC,EAAiBvB,EAASA,SAC5B,EAMI1rB,aAAcqR,IAAY81E,EAAcE,OAAWtwG,GAElD+vG,GACCvtG,EAAAA,GAAAC,cAAA,OACEjC,UFtD0O,WEuD1OkG,IAAKypG,EACL90F,IAAKs5B,EAASA,SAASzW,SACvBt3B,WAAW,KAGbmnE,IAAsBgiC,GACtBvtG,EAAAA,GAAAC,cAACgsE,EAAAA,EAAe,CACdvqD,IAAKywB,EAASs7D,iBAAiBhwG,GAC/BiF,OAAQ8qG,EACRphC,KAAMwhC,EACNx9F,QAAM,EACN9P,KAAM+sG,EACNpkC,QAAS4kC,EACTrqC,aAAW,KAGboqC,IAAgBL,GAChBvtG,EAAAA,GAAAC,cAACgsE,EAAAA,EAAe,CACdvqD,IAAKywB,EAASu7D,iBAAiBjwG,GAC/BiF,OAAQ2F,EACR+jE,KAAM5kE,EACN4I,QAAM,EACN9P,KAAM+sG,EACNhpG,OAAQmnE,EACRvC,QAAS8kC,EACTvqC,aAAW,IAGdxb,GACChoD,EAAAA,GAAAC,cAAC+P,EAAAA,EAAI,CAAChS,UAAWmG,EAAa8L,KAAK,eAEjC,IC3CJ+9F,GAAKC,EAAAA,EAAAA,GAAuB,oBAkKlC,GAAevxG,EAAAA,EAAAA,KA9JwBqB,IAiBjC,IAjBkC,sBACtC01C,EAAqB,aACrBnf,EAAY,oBACZ45E,EAAmB,iBACnBC,EAAgB,iBAChBC,EAAgB,mBAChBC,EAAkB,UAClB16D,EAAS,QACT7b,EAAO,sBACPT,EAAqB,UACrBr5B,EAAS,qBACTqsB,EAAoB,kBACpBupB,EAAiB,gBACjBrZ,EAAe,QACflY,EAAO,iBACPqxB,EAAgB,WAChBG,GACD91C,EACC,MAAM,iBAAE0wD,IAAqBrwD,EAAAA,EAAAA,MAEvB2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAC7BvC,GAAOC,EAAAA,EAAAA,KAEPgwG,EAAqB16D,IAAsBvpB,IAAyBkQ,EAEpEnG,GAAqBz1B,EAAAA,EAAAA,KAAQ,KACjC,MAAM01B,EAAYuf,EAAoBs6D,EACN,SAA3BC,GAAkBhyF,KAAkBgyF,EAAiBI,QACpD96D,GAAuBp0C,KAAK8yC,GAAaA,EAASA,WAClDq8D,EAAoBn6E,GAAWh1B,KAAK8yC,IACxC,MAAMs8D,EAAmB,eAAgBt8D,EACnCgf,EAAoB1d,GAAuBlzB,MAAM4pD,IAAM9Y,EAAAA,EAAAA,IAAe8Y,EAAEh4B,SAAUA,KACxF,IAAMs8D,GAAqBt9C,KAAsBA,GAAmBu9C,aAE/D/6D,GAAew6D,IAAqBQ,EAAAA,EAAAA,IAAgBx8D,EAAUg8D,QAI/DE,GAAsBD,GAAoBA,EAAiBhuG,QAAUiuG,IACnED,EAAiBtkF,MAAKxqB,IAAA,IAAG6yC,SAAUy8D,GAAiBtvG,EAAA,OAAK+xD,EAAAA,EAAAA,IAAelf,EAAUy8D,EAAgB,KAIxG,OAAOH,EAAmBt8D,EAAWgf,CAAiB,IACrD5xD,OAAO7B,UAAY,GAEtB,OAAOmxG,EAAAA,EAAAA,IAAcL,EAAmBl6E,EAAa,GACpD,CACDmf,EAAuB26D,EAAkBF,EAAqBC,EAAkBv6D,EAAmBD,EACnG06D,EAAoB/5E,IAGhBw6E,GAAoBnwG,EAAAA,EAAAA,KAAQ,IAEKowG,IAA9B36E,EAAmBh0B,OACtBg0B,EACAA,EAAmBh1B,MAAM,EA3DR,IA4DpB,CAACg1B,IACE46E,EAAiBF,EAAkB1uG,OAASg0B,EAAmBh0B,OAE/D6uG,GAAsBtwG,EAAAA,EAAAA,KAAQ,KAClC,MAAMuwG,EAAkBd,GAAkB7uG,QAAO1C,IAAA,IAAC,YAAEsyG,GAAatyG,EAAA,YAAqBW,IAAhB2xG,CAAyB,KAAK,GACpG,OAAO,IAAIpsG,IAAImsG,EAAgB7vG,KAAIgvC,IAAA,IAAC,SAAE8D,GAAU9D,EAAA,OAC9CygE,EAAkBM,WAAWjlC,GAAMA,IAAK9Y,EAAAA,EAAAA,IAAe,aAAc8Y,EAAIA,EAAEh4B,SAAWg4B,EAAGh4B,IAAU,IAClG,GACF,CAACi8D,EAAkBU,IAEhBO,GAAsBzrG,EAAAA,EAAAA,IAAgB,KAC1C,MAAM0rG,EAAQvqG,EAAI3D,SAASwM,yBAA2B,CAAE1B,EAAG,EAAGC,EAAG,GACjE0nC,EAAW,CACT3nC,EAAGojG,EAAMpjG,EACTC,EAAGmjG,EAAMnjG,GACT,IAGEojG,GAAyB3rG,EAAAA,EAAAA,IAAgB,KAC7Cye,MACAosC,EAAiB,CACfhkB,eAAgB,cAChB,IAGE+kE,GAAW7wG,EAAAA,EAAAA,KAAQ,KACvB,GAAIi1C,EAAmB,CACrB,IAAKvpB,EAAsB,CACzB,MACMolF,EADOpxG,EAAK,2BACCgkE,MAAM,UACzB,OACEriE,EAAAA,GAAAC,cAAA,YACGwvG,EAAM,GACPzvG,EAAAA,GAAAC,cAACqP,EAAAA,EAAI,CAACogG,WAAS,EAACvvG,QAASovG,GACtBlxG,EAAK,2BAEPoxG,EAAM,GAGb,CAEA,OAAOpxG,EAAK,yBACd,CAEA,GAAIk8B,EACF,OAAOl8B,EAAK,qBAGE,GACf,CAACgsB,EAAsBupB,EAAmBrZ,EAAiBl8B,IAE9D,GAAKywG,EAAkB1uG,OAEvB,OACEJ,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAe8tG,EAAG,KAAMhwG,GAAY+G,IAAKA,GACvD/E,EAAAA,GAAAC,cAAA,OAAKjC,UAAWgwG,EAAG,eAAgB3vG,EAAKsD,OAAS,WACjD3B,EAAAA,GAAAC,cAAA,OAAKjC,UAAWgwG,EAAG,kBACjBhuG,EAAAA,GAAAC,cAAA,OAAKjC,UAAWgwG,EAAG,aAAc3vG,EAAKsD,OAAS,WAC/C3B,EAAAA,GAAAC,cAAA,OAAKjC,UAAWgwG,EAAG,UAChBwB,GAAYxvG,EAAAA,GAAAC,cAAA,OAAKjC,UAAWgwG,EAAG,SAAUwB,GAC1CxvG,EAAAA,GAAAC,cAAA,OAAKjC,UAAWgwG,EAAG,aAActsG,IAAKrD,EAAKsD,MAAQ,WAAQnE,GACxDsxG,EAAkBzvG,KAAI,CAAC8yC,EAAU5wC,IAChC,aAAc4wC,EACZnyC,EAAAA,GAAAC,cAAC0vG,EAAwB,CACvBjuF,KAAKkuF,EAAAA,EAAAA,IAAez9D,EAASA,UAC7Bra,QAASA,EACT4b,iBAAkBA,EAClBvB,SAAUA,EACVo7D,mBAAoBl2E,EACpBi2E,OAAQ2B,EAAoB1rG,IAAIhC,GAChCymD,SAAUsmD,IAGZtuG,EAAAA,GAAAC,cAAC4vG,EAA8B,CAC7BnuF,KAAKkuF,EAAAA,EAAAA,IAAez9D,GACpBra,QAASA,EACT4b,iBAAkBA,EAClBvB,SAAUA,EACVo7D,mBAAoBl2E,EACpBi2E,OAAQ2B,EAAoB1rG,IAAIhC,GAChCymD,SAAUsmD,EACVtqG,MAAQ,uBA5IJ,IADG,EA6I2CzC,WAIvDytG,GACChvG,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLoP,MAAM,cACN5R,UAAWgwG,EAAG,aACd7tG,QAASkvG,GAETrvG,EAAAA,GAAAC,cAAA,KAAGjC,UAAU,uBAMnB,G,qLCzMV,MC6EA,GAAetB,EAAAA,EAAAA,KAvDMqB,IAUL,IAVM,OACpBkkB,EAAM,MACNzT,EAAK,SACLuuC,EAAQ,YACR7G,EAAW,WACX45D,EAAU,UACVjkE,EAAS,aACTkkE,EAAe,GAAE,QACjB1tF,EAAO,SACPuhC,GACS7lD,EACT,MAAMM,GAAOC,EAAAA,EAAAA,MAENoC,EAAMsvG,IAAWtoG,EAAAA,EAAAA,IAASqoG,GAE3BE,GAAmBrsG,EAAAA,EAAAA,IAAiB8J,IACxCsiG,EAAQtiG,EAAEuX,OAAO08B,MAAM,IAGnBuuD,GAAetsG,EAAAA,EAAAA,IAAgB,KACnCggD,EAASljD,EAAK,IAGhB,OACEV,EAAAA,GAAAC,cAACo5C,EAAAA,EAAK,CACJr7C,UAAU,SACVwQ,MAAOA,EACPyT,OAAQA,EACRI,QAASA,EACT8tF,QAAM,GAELzyG,QAAQq/C,IACP/8C,EAAAA,GAAAC,cAAA,OAAKjC,UDtDc,YCuDhB++C,GAGL/8C,EAAAA,GAAAC,cAAC0oD,EAAAA,EAAS,CACRzS,YAAaA,EACbyL,MAAOjhD,EACP4jD,SAAU2rD,EACVpkE,UAAWA,EACXukE,2BAAyB,IAE3BpwG,EAAAA,GAAAC,cAAA,OAAKjC,UAAU,uBACbgC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACxC,UAAU,wBAAwBmC,QAAS+vG,GAChDJ,GAAczxG,EAAK,SAEtB2B,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACxC,UAAU,wBAAwBu7C,QAAM,EAACp5C,QAASkiB,GACvDhkB,EAAK,YAGJ,I,oCCjDZ,MAAMgvG,EAAgB,KAAOnwD,EAAAA,EA+K7B,GAAexgD,EAAAA,EAAAA,KA1JQqB,IAeP,IAfQ,SACtBo0C,EAAQ,IACRk+D,EAAG,YACH59D,EAAW,SACX69D,EAAQ,aACR3mG,EAAY,UACZ3L,EAAS,gBACTuyG,EAAe,UACfC,EAAS,WACT/hF,EAAU,gBACVgiF,EAAe,gBACfxmC,EAAe,oBACfxwB,EAAmB,QACnBt5C,EAAO,SACPuwG,GACS3yG,EACT,MAAM,qBAAE4yG,IAAyBvyG,EAAAA,EAAAA,MAE3B2G,GAAMnE,EAAAA,EAAAA,IAA0B,MAEhCgwG,GAAUhwG,EAAAA,EAAAA,IAAuB,MAEjCvC,GAAOC,EAAAA,EAAAA,MACNuyG,EAAoBC,EAAkBC,IAAqB/vG,EAAAA,EAAAA,MAE5D,MAAEwN,EAAK,MAAE03E,GAAUmqB,GAAO,CAAC,EAC3Bz2F,EAAUlc,QAAQ8Q,GAAUgiG,GAAatqB,GAEzChlE,GAActd,EAAAA,EAAAA,IAAgB,KAClCzD,IAAUgyC,EAAS,IAGf6+D,GAAoBptG,EAAAA,EAAAA,IAAgB,KACxC8sG,IAAWv+D,EAAS,IAGhB8+D,GAAkBrtG,EAAAA,EAAAA,IAAiBstG,IACvCP,EAAqB,CACnBx+D,WACA3jC,MAAO0iG,IAETH,GAAmB,KAGf,kBACJtlF,EAAiB,oBACjBC,EAAmB,wBACnB2f,EAAuB,kBACvBxqB,EAAiB,uBACjB8K,EAAsB,sBACtBC,IACEC,EAAAA,EAAAA,GAAuB9mB,GAAM0rG,GAE3BjkF,GAAoB5oB,EAAAA,EAAAA,IAAgB,IAAMmB,EAAI3D,UAC9CqrB,GAAiB7oB,EAAAA,EAAAA,IAAgB,IAAMwO,SAASE,OAChDoa,GAAiB9oB,EAAAA,EAAAA,IAAgB,IAAMgtG,EAAQxvG,WAI/C,UACJ8gB,EAAS,UAAEsE,EAAS,iBAAEoG,GAAgB,iBAAEC,GAAkB7oB,MAAO8oB,KAC/DC,EAAAA,EAAAA,GACFrB,EACAc,EACAC,EACAC,GARgBwuE,KAAA,CAAS94E,YAAY,EAAM+uF,6BAA6B,MAY1E,IAAIX,GAAuB,IAAVtqB,EAIjB,OACElmF,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLxC,WAAWkC,EAAAA,EAAAA,GACTiE,EAAAA,EAAOuN,KACPvN,EAAAA,EAAOksG,IACP1mG,GAAgBxF,EAAAA,EAAOitG,IACvBd,GAAYnsG,EAAAA,EAAOmpG,OACnBgD,GAAYC,EACZ9hF,GAActqB,EAAAA,EAAOoiB,SACrBvoB,GAEFsC,KAAK,OACLH,QAAS+gB,EACT+1B,YAAa5L,EACbxpB,cAAehB,EACf9b,IAAKA,GAEL/E,EAAAA,GAAAC,cAACi3C,EAAAA,EAAqB,CACpBl5C,UAAWmG,EAAAA,EAAOoxE,cAClB9iC,YAAaA,EACbN,SAAUA,EACV4gB,UAjHW,EAkHXzyD,KAAM+sG,EACN5zD,oBAAqBA,EACrBwwB,gBAAiBA,IAElBrwD,GACC5Z,EAAAA,GAAAC,cAAA,QAAMjC,UAAWmG,EAAAA,EAAOktG,SACrB7iG,GAASxO,EAAAA,GAAAC,cAAA,YAAOuO,GAChBgiG,GAAaxwG,EAAAA,GAAAC,cAAA,YAAOimF,IAGzBlmF,EAAAA,GAAAC,cAAA,OACEjC,UAAWmG,EAAAA,EAAOmtG,KAClB9lG,MAAM,KACNC,OAAO,KACPwF,QAAQ,aAERjR,EAAAA,GAAAC,cAAA,QAAMjC,UAAWmG,EAAAA,EAAOotG,SAAUn8D,EAAE,8JAErCq7D,GACCzwG,EAAAA,GAAAC,cAACuxG,EAAY,CACXvvF,OAAQ4uF,EACRhlE,UAxIe,GAyIfr9B,MAAOnQ,EAAKgyG,GAAK7hG,MAAQ,oBAAsB,oBAC/CuuC,SAAU1+C,EAAK,wBACf63C,YAAa73C,EAAK,4BAClB0xG,aAAcM,GAAK7hG,MACnB6T,QAAS0uF,EACTntD,SAAUqtD,IAGbR,GAAmB/kF,GAClB1rB,EAAAA,GAAAC,cAAC+hB,EAAAA,EAAI,CACHjd,IAAK6rG,EACL3uF,OAAQwJ,EACRmB,iBAAkBA,GAClBC,iBAAkBA,GAClB3K,UAAWA,EACXsE,UAAWA,EACXxiB,MAAO8oB,GACP3K,WAAS,EACTC,YAAU,EACVC,QAASsJ,EACTrJ,oBAAqBsJ,GAErB5rB,EAAAA,GAAAC,cAACwhB,EAAAA,EAAQ,CAACrC,KAAK,aAAajf,QAAS+gB,GAClC7iB,EAAK,wBAER2B,EAAAA,GAAAC,cAACwhB,EAAAA,EAAQ,CAACrC,KAAK,WAAWjf,QAAS2wG,GAChCzyG,EAAKgyG,GAAK7hG,MAAQ,oBAAsB,qBAE3CxO,EAAAA,GAAAC,cAACwhB,EAAAA,EAAQ,CAACrC,KAAK,cAAcmD,aAAW,EAACpiB,QAAS6wG,GAC/C3yG,EAAK,uBAIL,G,wEC/LE,SAASozG,EAAmCC,EAAiBC,GAC1E,MAAMljF,OAAuBjxB,IAAVm0G,EACbxyB,GAAkBv+E,EAAAA,EAAAA,IAAO6tB,GACzBmjF,GAAahxG,EAAAA,EAAAA,MACb09D,GAAcC,EAAAA,EAAAA,KAkCpB,OAhCAhvC,EAAAA,EAAAA,IAAc,KACRd,IAIJ0wD,EAAgB/9E,SAAU,EAEtBwwG,EAAWxwG,UACb8lF,aAAa0qB,EAAWxwG,SACxBwwG,EAAWxwG,aAAU5D,GACvB,GAECk0G,IAEHlyG,EAAAA,EAAAA,KAAU,KACR,GAAIivB,GAAc0wD,EAAgB/9E,QAChC,OAGF,MAAM02F,EAAOA,KACX3Y,EAAgB/9E,SAAU,EAC1Bk9D,GAAa,EAGXqzC,EAAS,EACXC,EAAWxwG,QAAUoD,OAAOT,WAAW+zF,EAAM6Z,GAE7C7Z,GACF,GAEC4Z,GAEIvyB,EAAgB/9E,OACzB,C,8FC3CA,QAA6H,WAA7H,EAAuJ,WAAvJ,EAA+K,WCwBzKywG,EAAqC,CACzC,CACE,CAAE5hG,KAAM,YAAazB,MAAO,mCAC5B,CAAEyB,KAAM,uBAAwBzB,MAAO,6CAA8CsjG,cAAc,IAErG,CACE,CAAE7hG,KAAM,eAAgBzB,MAAO,sCAC/B,CAAEyB,KAAM,gBAAiBzB,MAAO,wCAElC,CACE,CAAEyB,KAAM,gBAAiBzB,MAAO,uCAChC,CAAEyB,KAAM,iBAAkBzB,MAAO,yCAEnC,CACE,CAAEyB,KAAM,mBAAoBzB,MAAO,0CACnC,CAAEyB,KAAM,oBAAqBzB,MAAO,6CAIlCujG,EAAmC,CACvC,CACE,CAAE9hG,KAAM,UAAWzB,MAAO,sBAC1B,CAAEyB,KAAM,WAAYzB,MAAO,wBAE7B,CACE,CAAEyB,KAAM,UAAWzB,MAAO,sBAC1B,CAAEyB,KAAM,UAAWzB,MAAO,wBAIxBwjG,EAAqC,CACzC,CACE,CAAE/hG,KAAM,aAAczB,MAAO,sBAAuByjG,SAAS,GAC7D,CAAEhiG,KAAM,iBAAkBzB,MAAO,6BAA8ByjG,SAAS,IAE1E,CACE,CAAEhiG,KAAM,iBAAkBzB,MAAO,mCAAoCyjG,SAAS,GAC9E,CACEhiG,KAAM,gBAAiBzB,MAAO,8BAA+ByjG,SAAS,EAAMC,eAAe,KAK3FC,EAAmC,CACvC,CACE,CAAEliG,KAAM,aAAczB,MAAO,+BAAgCyjG,SAAS,GACtE,CAAEhiG,KAAM,iBAAkBzB,MAAO,eAAgByjG,SAAS,IAE5D,CACE,CAAEhiG,KAAM,iBAAkBzB,MAAO,mCAAoCyjG,SAAS,GAC9E,CAAEhiG,KAAM,gBAAiBzB,MAAO,gBAAiByjG,SAAS,KAIxDG,EAAmC,CACvC,CACE,CAAEniG,KAAM,QAASzB,MAAO,qBAAsByjG,SAAS,GACvD,CACEhiG,KAAM,qBACNzB,MAAO,kCACPsjG,cAAc,EACdI,eAAe,EACfG,mBAAmB,IAGvB,CACE,CAAEpiG,KAAM,SAAUzB,MAAO,8BAA+ByjG,SAAS,GACjE,CAAEhiG,KAAM,kBAAmBzB,MAAO,+BAAgCyjG,SAAS,KAgI/E,GAAev1G,EAAAA,EAAAA,KAnH0BqB,IAKnC,IALoC,MACxCyQ,EAAK,KACL2N,EAAI,WACJm2F,EAAU,UACVt0G,GACDD,EACC,MAAMM,GAAOC,EAAAA,EAAAA,MAsBP,OAAEi0G,GAAYD,EAEdE,EAqER,SAAyBr2F,GACvB,OAAQA,GACN,IAAK,QACH,OAAO41F,EACT,IAAK,UACH,OAAOC,EACT,IAAK,QACH,OAAOI,EACT,IAAK,QACH,OAAOD,EAET,QACE,OAAON,EAEb,CAnFiBY,CAAgBt2F,GAE/B,OACEnc,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GDzIG,WCyIyBlC,IAC1CgC,EAAAA,GAAAC,cAAA,OAAKjC,UD1IgC,YC2IlCwQ,GACCxO,EAAAA,GAAAC,cAAA,OAAKjC,UD5I+C,YC6IjDwQ,GAIJ+jG,GACCvyG,EAAAA,GAAAC,cAAA,OAAKjC,UDlJoE,aCmJtE00G,EAAAA,EAAAA,IAAer0G,EAAuB,IAAjBk0G,EAAOI,SAAgB,OAAID,EAAAA,EAAAA,IAAer0G,EAAuB,IAAjBk0G,EAAOK,WAKnF5yG,EAAAA,GAAAC,cAAA,SAAOjC,UDxJyF,YCyJ7Fw0G,EAAOnzG,KAAKkoB,GACXvnB,EAAAA,GAAAC,cAAA,UACGsnB,EAAIloB,KAAKwzG,IACR,MAAMC,EAASR,EAAmBO,EAAK5iG,MAEvC,OAAI4iG,EAAKZ,QAELjyG,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,GACbnE,EAAAA,GAAAC,cAAA,KAAGjC,UAAWmG,GACV,GAAE0uG,EAAKX,cAAgB,IAAM,MAAKa,EAAAA,EAAAA,IAAcD,MAEpD9yG,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,GAAsB9F,EAAKw0G,EAAKrkG,SAKjDqkG,EAAKf,aAEL9xG,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,GACZ0uG,EAAKR,mBACJryG,EAAAA,GAAAC,cAAA,QAAMjC,UAAWmG,GACb,GAAE0uG,EAAKX,cAAgB,IAAM,MAAKa,EAAAA,EAAAA,IAAcD,EAAME,SAG5DhzG,EAAAA,GAAAC,cAAA,QAAMjC,UAAW60G,EAAKR,kBDjLsK,WCiLrHluG,GACpE2uG,EAAMG,WAAW,KAEpBjzG,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,GAAsB9F,EAAKw0G,EAAKrkG,SAMnDxO,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,GACbnE,EAAAA,GAAAC,cAAA,KAAGjC,UAAWmG,IACXsvE,EAAAA,EAAAA,IAAqBq/B,EAAM1xG,UAE7B,IA9Ee9B,KAAoD,IAAnD,OAAE4zG,EAAM,WAAED,GAAoC3zG,EAC7E,IAAK4zG,EACH,OAGF,MAAMC,EAAmBzoE,OAAOwoE,GAAU,EAE1C,OACElzG,EAAAA,GAAAC,cAAA,QAAMjC,WAAWkC,EAAAA,EAAAA,GDxH4M,WCwH/KizG,GDxHqM,aCyHhPA,EAAoB,KAAG1/B,EAAAA,EAAAA,IAAqBnpE,KAAKy3E,IAAImxB,MAAc,KAAGz/B,EAAAA,EAAAA,IAAqBy/B,KAC3FD,GACCjzG,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACG,IAAI,IACHoiG,EAAW,MAGZ,EA+DMG,CAAwBN,GACzB9yG,EAAAA,GAAAC,cAAA,MAAIjC,UAAWmG,GAAsB9F,EAAKw0G,EAAKrkG,QAC5C,QAMX,G,gOC/BV,SAAe9R,EAAAA,EAAAA,KA9If,SAA0BqB,GAAiC,IAAhC,KAAE4T,EAAI,WAAE6lE,GAAsBz5E,EACvD,MAAM,SACJ8wE,EAAQ,iBACR2P,EAAgB,gBAChBslB,EAAe,oBACfuP,IACEj1G,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEPyG,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7BkoD,EAAS,WAAYn3C,GAAQA,EAAKm3C,OAClCn0B,IAAajE,EAAAA,EAAAA,IAAS/e,EAAKlU,KAEjC61G,EAAAA,EAAAA,GAAkB3hG,EAAKlU,IAEvB,MAAM,kBACJguB,EAAiB,oBAAEC,EAAmB,wBACtC2f,EAAuB,kBAAExqB,EAAiB,uBAC1C8K,EAAsB,sBAAEC,IACtBC,EAAAA,EAAAA,GAAuB9mB,GAErBynB,GAAoB5oB,EAAAA,EAAAA,IAAgB,IAAMmB,EAAI3D,UAC9CqrB,GAAiB7oB,EAAAA,EAAAA,IAAgB,IAAMwO,SAASE,OAChDoa,GAAiB9oB,EAAAA,EAAAA,IAAgB,IAAMmB,EAAI3D,QAASurB,cAAc,sCAClEuuE,GAAYt3F,EAAAA,EAAAA,IAAgB,KAAM,CAAGwe,YAAY,EAAMmxF,SAAS,OAEhE,UACJrxF,EAAS,UAAEsE,EAAS,iBAAEoG,EAAgB,iBAAEC,EAAkB7oB,MAAO8oB,IAC/DC,EAAAA,EAAAA,GACFrB,EACAc,EACAC,EACAC,EACAwuE,GAGIh6E,GAActd,EAAAA,EAAAA,IAAgB,KAC9B6nB,GAEJq4E,EAAgB,CAAEt4D,OAAQ75B,EAAKlU,GAAI6H,OAAQysE,EAAAA,GAAkByhC,aAAc,IAGvE59C,GAAkBhyD,EAAAA,EAAAA,IAAiB8J,KACvC+lG,EAAAA,EAAAA,GAAoC/lG,GACpC29B,EAAwB39B,EAAE,IAGtBgmG,GAAqB9vG,EAAAA,EAAAA,IAAgB,KACzC46E,EAAiB,CAAE/gF,GAAIkU,EAAKlU,GAAI8sC,sBAAsB,EAAMu7C,WAAY,WAAY,IAGhF6tB,GAAwB/vG,EAAAA,EAAAA,IAAgB,KAC5C46E,EAAiB,CAAE/gF,GAAIkU,EAAKlU,GAAI8sC,sBAAsB,EAAMu7C,WAAY,kBAAmB,IAGvF8tB,GAAiBhwG,EAAAA,EAAAA,IAAgB,KACrCirE,EAAS,CAAEpxE,GAAIkU,EAAKlU,GAAI8sC,sBAAsB,GAAO,IAGjDspE,GAAoBjwG,EAAAA,EAAAA,IAAgB,KACxC46E,EAAiB,CAAE/gF,GAAIkU,EAAKlU,GAAI8sC,sBAAsB,GAAO,IAGzDupE,GAAoBlwG,EAAAA,EAAAA,IAAgB,KACxCyvG,EAAoB,CAAE7nE,OAAQ75B,EAAKlU,GAAIm3E,UAAW4C,GAAa,IAGjE,OACEx3E,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACLy/C,KAAK,SACL,eAAc7yC,EAAKlU,GACnB4mD,SAAU,EACVrmD,UAAWmG,EAAAA,EAAOwN,KAClBslC,YAAa2e,EACbz1D,QAAS+gB,EACTW,cAAehB,GAEf7gB,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACLD,KAAMA,EACN6sC,WAAS,EACTC,kBAAmBszB,EAAAA,GAAkByhC,YACrC3zD,gBAAgB,SAElB7/C,EAAAA,GAAAC,cAAA,OAAKjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAAA,EAAO8L,KAAM0B,EAAKoiG,kBAAoB5vG,EAAAA,EAAO6vG,sBACzElrD,EAASzqD,EAAK,YAAam3D,EAAAA,EAAAA,IAAen3D,EAAMsT,SAE1BnU,IAAxBkuB,GACC1rB,EAAAA,GAAAC,cAAC+hB,EAAAA,EAAI,CACHC,OAAQwJ,EACRmB,iBAAkBA,EAClBC,iBAAkBA,EAClB3K,UAAWA,EACXsE,UAAWA,EACXxiB,MAAO8oB,EACP9uB,WAAWkC,EAAAA,EAAAA,GAAe,0BAA2BiE,EAAAA,EAAO8vG,aAC5D9xF,WAAS,EACTC,YAAU,EACVC,QAASsJ,EACTrJ,oBAAqBsJ,GAEpBk9B,EACC9oD,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,KACE7Q,EAAAA,GAAAC,cAACwhB,EAAAA,EAAQ,CAACthB,QAASuzG,EAAoBt0F,KAAK,cACzC/gB,EAAK,mCAER2B,EAAAA,GAAAC,cAACwhB,EAAAA,EAAQ,CAACthB,QAASwzG,EAAuBv0F,KAAK,WAC5C/gB,EAAK,uCAIV2B,EAAAA,GAAAC,cAAAD,EAAAA,GAAA6Q,SAAA,MACI8jB,GACA30B,EAAAA,GAAAC,cAACwhB,EAAAA,EAAQ,CAACthB,QAASyzG,EAAgBx0F,KAAK,WACrC/gB,EAAK,qBAGTs2B,EACC30B,EAAAA,GAAAC,cAACwhB,EAAAA,EAAQ,CAACthB,QAAS0zG,EAAmBz0F,KAAK,WACxC/gB,EAAK,gCAGR2B,EAAAA,GAAAC,cAACwhB,EAAAA,EAAQ,CAACthB,QAAS0zG,EAAmBz0F,KAAK,QACxC/gB,EAAK,kCAGV2B,EAAAA,GAAAC,cAACwhB,EAAAA,EAAQ,CACPthB,QAAS2zG,EACT10F,KAAMo4D,EAAa,YAAc,WAEhCn5E,EAAKm5E,EAAa,8BAAgC,gCAQnE,IC5FA,GAAe96E,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAM0C,KAAiC,IAA/B,WAAEk4E,GAAYl4E,EACrB,MAAQ40G,gBAAgB,OAAEnpC,EAAM,SAAEopC,IAAev3G,EAAO66B,QAIxD,MAAO,CACLy8E,eAAgB18B,EAAa28B,EAAWppC,EACxCnsE,UALgBhC,EAAOkC,MAAMC,KAM7BC,UALgBpC,EAAOqC,MAAMF,KAM9B,GAVepC,EAhDpB,SAAoBoB,GAOM,IAPL,WACnBy5E,EAAU,UACVx5E,EAAS,eACTk2G,EAAc,UACdt1G,EAAS,UACTI,EAAS,UACTo1G,GACsBr2G,EACtB,MAAMM,GAAOC,EAAAA,EAAAA,KACPwQ,GAAgB5O,EAAAA,EAAAA,GACpBiE,EAAAA,EAAOuN,MACNwiG,EAAe9zG,QAAU+D,EAAAA,EAAOkwG,OACjCD,GAAajwG,EAAAA,EAAOmwG,QACpBt2G,EACA,gBAII+G,GAAMnE,EAAAA,EAAAA,IAAuB,MAInC,OAFAomF,EAAAA,EAAAA,GAAoBjiF,GAAK28E,EAAAA,EAAAA,OAGvB1hF,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACLtH,GAAG,cACHO,UAAW8Q,EACXpN,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzB02G,EAAe70G,KAAKmsC,IACnB,MAAM75B,EAAO/S,EAAU4sC,IAAWxsC,EAAUwsC,GAE5C,GAAK75B,EAIL,OACE3R,EAAAA,GAAAC,cAACs0G,EAAiB,CAChB7yF,IAAK8pB,EACL75B,KAAMA,EACN6lE,WAAYA,GACZ,IAKZ,I,2KC6DA,SAAe96E,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,EAAM0C,KAAiC,IAA/B,WAAEk4E,GAAYl4E,EAC9D,MAAQ40G,gBAAgB,SAAEC,EAAQ,OAAEppC,GAAQ,SAAEypC,GAAa53G,EAAO66B,SAC1D3E,aAAa,cAAE2hF,EAAa,sBAAEC,KAA4Bt3G,EAAAA,EAAAA,KAAeR,GAC3EoxE,GAAmBC,EAAAA,EAAAA,KAAuBrxE,GAC1C+lD,GAAgBknB,EAAAA,EAAAA,KAA+BjtE,EAAQ,yBAE7D,MAAO,CACLk1B,cAAel1B,EAAOk1B,cACtBoiF,eAAgB18B,EAAa28B,EAAWppC,EACxCz/C,QAASksD,GAAck9B,GAAyBD,EAChDzmC,mBACArrB,gBACA/jD,UAAWhC,EAAOkC,MAAMC,KACxBC,UAAWpC,EAAOqC,MAAMF,KACxB41G,YAAaH,EACd,GAfiB73G,EA9FpB,SAAqBoB,GAWK,IAXJ,cACpB+zB,EAAa,eACboiF,EAAc,UACdt1G,EAAS,UACTI,EAAS,QACT41G,EAAO,QACPtpF,EAAO,iBACP0iD,EAAgB,WAChBwJ,EAAU,cACV70B,EAAa,YACbgyD,GACsB52G,EACtB,MAAM,kBAAEq5E,IAAsBh5E,EAAAA,EAAAA,MAExBC,GAAOC,EAAAA,EAAAA,KAEPiC,GAAQ5B,EAAAA,EAAAA,KAAQ,IACU,IAA1Bu1G,EAAe9zG,OACV,CAACxB,EAAUs1G,EAAe,KAAOl1G,EAAUk1G,EAAe,KAG5DA,EACJ70G,KAAK5B,GAAOmB,EAAUnB,IAAOuB,EAAUvB,KACvC8B,QAAQoS,GAASA,GAAQA,EAAKlU,KAAOq0B,IACrC1yB,MAAM,EAAGy1G,EAAAA,KACTC,WACF,CAAChjF,EAAeoiF,EAAgBt1G,EAAWI,IAExC+1G,GAAep2G,EAAAA,EAAAA,KAAQ,IACtB4B,GAAOH,OACLG,EAAM2d,QAAO,CAACC,EAAKxM,KACxB,MAAM8lB,EAAUk9E,EAAYhjG,EAAKlU,IACjC,IAAKg6B,EAAS,OAAOtZ,EAErB,MAAM62F,EAAgBv9E,EAAQ42C,WAAWvkD,MAAMrsB,IAC7C,MAAM+1B,EAAQiE,EAAQ14B,KAAKtB,GAC3B,IAAK+1B,KAAW,sBAAuBA,GAAQ,OAAO,EACtD,MAAMyhF,EAASx9E,EAAQy9E,YAAc1hF,EAAM/1B,IAAMg6B,EAAQy9E,WACzD,OAAO1hF,EAAM2hF,oBAAsBF,CAAM,IAI3C,OADA92F,EAAIxM,EAAKlU,IAAMu3G,EACR72F,CAAG,GACT,CAAC,GAduB,CAAC,GAe3B,CAACw2F,EAAap0G,IAEX60G,GAAiBz2G,EAAAA,EAAAA,KAAQ,IACtBu1G,EAAe90G,MAAM,EAjDV,IAkDjB,CAAC80G,KAEJZ,EAAAA,EAAAA,GAAkB8B,GAElB,MAAM3yD,EAAYmyD,GAAWtpF,GAEvB,aAAE5rB,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAAkB6iD,OAAWjlD,OAAWA,EAAW,QAalG,IAXAgC,EAAAA,EAAAA,KAAU,KACHmjD,IAAiBqrB,IAClBvrB,IACF+8B,EAAAA,EAAAA,IAA4BwC,EAAAA,GAAqBgB,EAAAA,MACjDqyB,EAAAA,EAAAA,GAAe79B,MAEfgI,EAAAA,EAAAA,IAA4BwC,EAAAA,GAAqBgB,EAAAA,MACjDsyB,EAAAA,EAAAA,IAAe99B,IACjB,GACC,CAACA,EAAY/0B,EAAWE,EAAeqrB,IAErCtuE,EAIL,OACEM,EAAAA,GAAAC,cAAA,UACEkc,KAAK,SACL1e,GAAG,eACHO,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAAA,EAAOuN,KAAM/R,GACvC,aAAYtB,EAAK,+BACjB8B,QAASA,IAAMi3E,EAAkB,CAAE9rD,SAAS,EAAMksD,eAClD91E,IAAKrD,EAAKsD,MAAQ,WAAQnE,GAEzB+C,EAAMlB,KAAKsS,GACV3R,EAAAA,GAAAC,cAAC2R,EAAAA,EAAM,CACL8P,IAAK/P,EAAKlU,GACVkU,KAAMA,EACNrR,KAAK,OACLtC,UAAWmG,EAAAA,EAAO0N,OAClB0jG,gBAAc,EACdC,sBAAuBT,EAAapjG,EAAKlU,QAKnD,I,qIC3HO,MAAMukF,EAAqB,IAC5ByzB,EAAgB,IAAOv4D,EAAAA,EACvBw4D,EAAiB,GACjBC,EAAgB,MAASz4D,EAAAA,EACzB04D,EAAgB,KAAQ14D,EAAAA,EAExB24D,EAAqC,IAAI9yG,IAExC,SAASuyG,EAAe99B,GAC7Bs+B,IAEA,MAAM,UACJt8C,EAAS,QAAEu8C,EAAO,eAAEC,EAAc,YAAEC,EAAW,cAAEC,GAC/CC,EAAgB3+B,GAEpB,KAAKu+B,GAAYG,GAAkBD,GAAgBz8C,GAAcw8C,GAC/D,OAGF,MAAQ/0F,OAAQm1F,EAAcp1F,MAAOq1F,GAAgBL,EAAepoG,wBAC9D0oG,EAAQF,EAAeX,EAGvBc,EAAmBL,EAAc,GACjCM,EAAoBN,EAAcA,EAAc91G,OAAS,GACzDq2G,EAASC,EAAUH,GAEzBlsG,MAAMgN,KAAK4+F,GAAanB,UAAUjpG,SAAQ,CAAC8F,EAAM2xD,EAAKvlE,KAAiB,IAAf,OAAEqC,GAAQrC,EAChE,MAAMN,EAAKi5G,EAAU/kG,GACrB,IAAKlU,EAAI,OACT,MAAM6xD,EAAS7xD,IAAOg5G,EACtB,IAAIE,EAAeC,EAAeb,EAASt4G,GACvCo5G,EAASnB,EAAiBpyC,EAAQ,EAStC,GARKqzC,IAIHA,EAHerzC,IAAUljE,EAAS,EAGVo2G,EAAoBD,EAC5CM,EAASnB,IAGNiB,EAAc,OAEnB,IAEE3mE,IAAK8mE,EACLnpG,KAAMopG,EACNvrG,MAAOwrG,GACLL,EAAa/oG,wBAEjB,MACED,KAAMspG,EACNzrG,MAAO0rG,GACLvlG,EAAK/D,wBAET,GAAIqpG,EAASZ,EACX,OAGFU,GAAYpB,EACZqB,GAAa,EAAIrB,EAEjB,MAAMwB,EAAiBJ,EAAWE,EAC5BG,EAAiBN,EAAUR,EAC3Be,EAAYL,EAAYE,EAE9BJ,GAAWnB,EAEX,MAAM2B,EAAeL,EAASF,EAAW,EAAIpB,EACvC4B,EAAejB,EAAQQ,EAAUnB,EACjC6B,EAAUN,GAAWF,EAAY,EAAIrB,IAE3C7zE,EAAAA,EAAAA,KAAgB,KACd,IAAK60E,EAAc,OACnB,MAAMc,EAAQC,EAAY/lG,GAE1B,IAAIgmG,EAGAd,EAASnB,GACXiC,EAASD,EAAYf,GACjBrnD,GACFqoD,EAAOtlG,UAAUxO,IAAI+zG,EAAAA,EAAcC,YAIrCJ,EAAMplG,UAAUxO,IAAI+zG,EAAAA,EAAcE,mBAGpCC,EAAAA,EAAAA,IAAYN,EAAO,CACjBznE,IAAM,GAAEsmE,MACR3oG,KAAO,GAAEspG,MACTJ,OAAS,GAAEA,IACXr/C,QAASmgD,EAAS,IAAM,GACxBj4B,UAAY,eAAcy3B,QAAqBC,iBAA8BC,OAG3EM,IACFI,EAAAA,EAAAA,IAAYJ,EAAQ,CAClB3nE,IAAM,GAAE8mE,MACRnpG,KAAO,GAAEopG,MACTF,OAAS,GAAEA,MAIfr9C,EAAUjnD,YAAYklG,GAClBE,GACFn+C,EAAUjnD,YAAYolG,GAExBhB,EAAatkG,UAAUxO,IAAI,aAC3B8N,EAAKU,UAAUxO,IAAI,cAEnBi+B,EAAAA,EAAAA,KAAgB,MACdi2E,EAAAA,EAAAA,IAAYN,EAAO,CACjBjgD,QAAS,GACTkoB,UAAW,KAGTi4B,GACFI,EAAAA,EAAAA,IAAYJ,EAAQ,CAClBngD,QAAS,IACTkoB,UAAY,eAAc43B,QAAmBC,iBAA4BC,OAG3EC,EAAMplG,UAAUxO,IAAI+zG,EAAAA,EAAcI,iBAGpC,MAAM56F,EAAK66F,GAAsB,MAC/Bn2E,EAAAA,EAAAA,KAAgB,KACV03B,EAAU0+C,SAAST,IACrBj+C,EAAU9oB,YAAY+mE,GAEpBE,GAAUn+C,EAAU0+C,SAASP,IAC/Bn+C,EAAU9oB,YAAYinE,GAExBhB,GAActkG,UAAUoG,OAAO,aAC/B9G,EAAKU,UAAUoG,OAAO,YAAY,GAClC,GACDupE,EAAqBgB,EAAAA,KAExB6yB,EAAUhyG,IAAIuZ,EAAG,GACjB,GACF,GAEN,CAEO,SAASi4F,EAAe79B,GAC7Bs+B,IAEA,MAAM,UACJt8C,EAAS,QACTu8C,EAAO,cACPG,EAAa,YACbD,EAAW,eACXD,GACEG,EAAgB3+B,GAEpB,KAAKu+B,GAAYG,GAAkBD,GAAgBz8C,GAAcw8C,GAC/D,OAEF,MAAQh1F,MAAOq1F,GAAgBL,EAAepoG,wBAGxC2oG,EAAmBL,EAAc,GACjCM,EAAoBN,EAAcA,EAAc91G,OAAS,GACzDq2G,EAASC,EAAUH,GAEzBlsG,MAAMgN,KAAK4+F,GAAanB,UAAUjpG,SAAQ,CAAC8F,EAAM2xD,EAAKhkE,KAAiB,IAAf,OAAEc,GAAQd,EAChE,MAAM7B,EAAKi5G,EAAU/kG,GACrB,IAAKlU,EAAI,OACT,MAAM6xD,EAAS7xD,IAAOg5G,EACtB,IAAIE,EAAeC,EAAeb,EAASt4G,GACvCo5G,EAASnB,EAAiBpyC,EAAQ,EAStC,GARKqzC,IAIHA,EAHerzC,IAAUljE,EAAS,EAGVo2G,EAAoBD,EAC5CM,EAASnB,IAGNiB,EAAc,OAEnB,MACE3mE,IAAK8mE,EACLnpG,KAAMopG,EACNvrG,MAAOwrG,GACLrlG,EAAK/D,wBAET,IACED,KAAMspG,EACNzrG,MAAO0rG,EACPlnE,IAAKsmE,GACHK,EAAa/oG,wBAEjB,GAAImpG,EAAWV,EACb,OAGFY,GAAUtB,EACVuB,GAAW,EAAIvB,EAEf,MAAM2B,EAAeL,EAASF,EACxBQ,EAAejB,EAAQQ,EAAUlB,EACjC4B,EAAUN,EAAUF,EAE1BV,GAASX,EAET,MAAMwB,EAAiBJ,EAAWE,EAAS,EAAItB,EACzCyB,EAAiBN,EAAUR,EAAQX,EACnC0B,EAAYL,GAAaE,EAAU,EAAIvB,IAE7C7zE,EAAAA,EAAAA,KAAgB,KACd,MAAM21E,EAAQC,EAAY/lG,GAC1B,IAAIgmG,EAEAd,EAASnB,GACXiC,EAASD,EAAYf,GACjBrnD,GACFqoD,EAAOtlG,UAAUxO,IAAI+zG,EAAAA,EAAcC,YAGrCJ,EAAMplG,UAAUxO,IAAI+zG,EAAAA,EAAcE,iBAAkBF,EAAAA,EAAcI,kBAGpED,EAAAA,EAAAA,IAAYN,EAAO,CACjBznE,IAAM,GAAE8mE,MACRnpG,KAAO,GAAEopG,MACTvrG,MAAQ,GAAEwrG,MACVH,OAAS,GAAEA,MAGTc,IACFI,EAAAA,EAAAA,IAAYJ,EAAQ,CAClB3nE,IAAM,GAAEsmE,MACR3oG,KAAO,GAAEspG,MACTJ,OAAS,GAAEA,IACXr/C,QAAS,IACTkoB,UAAY,eAAcy3B,QAAqBC,iBAA8BC,OAIjF1lG,EAAKU,UAAUxO,IAAI,aACnB8yG,EAActkG,UAAUxO,IAAI,aAE5B21D,EAAUjnD,YAAYklG,GAClBE,GACFn+C,EAAUjnD,YAAYolG,IAGxB71E,EAAAA,EAAAA,KAAgB,MACdi2E,EAAAA,EAAAA,IAAYN,EAAO,CACjBjgD,QAASmgD,EAAS,IAAM,GACxBj4B,UAAY,eAAc43B,QAAmBC,iBAA4BC,OAGvEG,GACFI,EAAAA,EAAAA,IAAYJ,EAAS,CACnBngD,QAAS,GACTkoB,UAAW,KAGb+3B,EAAMplG,UAAUoG,OAAOm/F,EAAAA,EAAcI,iBAGvC,MAAM56F,EAAK66F,GAAsB,MAC/Bn2E,EAAAA,EAAAA,KAAgB,KACV03B,EAAU0+C,SAAST,IACrBj+C,EAAU9oB,YAAY+mE,GAEpBE,GAAUn+C,EAAU0+C,SAASP,IAC/Bn+C,EAAU9oB,YAAYinE,GAExBhmG,EAAKU,UAAUoG,OAAO,aACtBk+F,EAActkG,UAAUoG,OAAO,YAAY,GAC3C,GACDupE,EAAqBgB,EAAAA,KAExB6yB,EAAUhyG,IAAIuZ,EAAG,GACjB,GACF,GAEN,CAEA,SAAS+4F,EAAgB3+B,GACvB,IAAIhe,EAAYpnD,SAASirB,eAAe,cAIxC,GAHIm8B,GAAage,IACfhe,EAAYA,EAAU7sC,cAA2B,oBAE9C6sC,EAAW,MAAO,CAAC,EACxB,MAAMu8C,EAAUv8C,EAAU7sC,cAA2B,iBAC/CwrF,EAAS3+C,EAAU7sC,cAA2B,gBAC9CqpF,EAAiBx8C,EAAU7sC,cAA2B,gBACtDspF,EAAckC,GAAQpgG,iBAA+B,IAAGqgG,EAAAA,EAAazmG,QACrEukG,EAAgBH,GAASh+F,iBAA8B,WAE7D,MAAO,CACLyhD,YACAu8C,UACAC,iBACAC,cACAC,gBAEJ,CAEA,SAASwB,EAAYW,GACnB,MAAMZ,EAAQY,EAASxkG,WAAU,GACjC4jG,EAAMplG,UAAUxO,IAAI+zG,EAAAA,EAAcH,OAGlCA,EAAMplG,UAAUoG,OAAO,aAEvBg/F,EAAMrzG,WAAY,EAClBqzG,EAAMa,cAAgB/1D,EAAAA,EAEtB,MAAMg2D,EAAeF,EAAS1rF,cAAc,UAC5C,GAAI4rF,EAAc,CAChB,MAAMntG,EAASqsG,EAAM9qF,cAAc,UACnCvhB,GAAQO,WAAW,OAAOitD,UAAU2/C,EAAc,EAAG,EACvD,CAEA,OAAOd,CACT,CAEA,SAASf,EAAU3iG,GACjB,OAAOA,GAAIwE,aAAa,eAC1B,CAEA,SAASq+F,EAAe7iG,EAAiBtW,GACvC,OAAOsW,GAAI4Y,cAA4B,kBAAiBlvB,MAC1D,CAEA,SAASw6G,EAAsBO,EAA8BC,GAC3D,MAAMC,EAAU30G,WAAWy0G,EAAUC,GAErC,MAAO,KACLvxB,aAAawxB,GACbF,GAAU,CAEd,CAEA,SAAS1C,IACPD,EAAUhqG,SAASuR,GAAOA,MAC1By4F,EAAU8C,OACZ,C,2CCjWO,MAAMC,EAAqB,oCACrBC,EAAuB,+B,2KCgBpC,MAAMC,EAAgD,CAAC,EAMjDC,GAAaj6F,EAAAA,EAAAA,IADS,KA2H5B,EApHA,SAA2B0sB,EAA4BwtE,IACrDx5G,EAAAA,EAAAA,KAAU,KACR,QAAehC,IAAXguC,EAAsB,QA0BVnhC,MAAMwxD,QAAQrwB,GAAUA,EAAS,CAACA,IAE1C3/B,SAASpO,IACf,MAAM2yB,EAAU4oF,IAAiBn6G,EAAAA,EAAAA,MAAY44B,QAAQ+8E,SAAS/2G,IAAK4wE,aAAa,GAC3Ej+C,GA5Beha,iBACd2iG,EACNE,EAAYptG,SAAQ9N,IAAgC,IAA/B,KAAE2kE,EAAI,OAAEq6B,EAAM,SAAEmc,GAAUn7G,EACzCm7G,EAkGZ9iG,eAA6BssD,GAC3B,MAAMy2C,GAASC,EAAAA,EAAAA,IAAsBC,EAAAA,EAAAA,IAAkB32C,IACvD,IAAI42C,EAAa,EACjB,UAAW,MAAMC,KAASJ,EAExB,GADAG,GAAcC,EAAMC,WAChBF,GAvHoB,QAwHtB,KAGN,CA1GUG,CAAc/2C,GAGhBlT,EAAAA,GACEkT,EACAq6B,GAECxkC,MAAMrkD,IACAA,IAED6oF,IAAWv6F,EAAAA,GAAek3G,aAqE1C,SAA4BvqF,GAC1B,MAAMwqF,EAAOvnG,SAASunG,KAChB1yG,EAAQmL,SAASnS,cAAc,SACrCgH,EAAM2yG,QAAU,OAChB3yG,EAAM/C,IAAMirB,EACZloB,EAAMomD,OAAQ,EACdpmD,EAAM4yG,UAAW,EACjB5yG,EAAM6yG,uBAAwB,EAC9B7yG,EAAMjD,MAAM02E,QAAU,OACtBi/B,EAAKpnG,YAAYtL,GACjBA,EAAMgrF,OACNluF,YAAW,MACTg2G,EAAAA,EAAAA,GAAY9yG,GACZ0yG,EAAKjpE,YAAYzpC,EAAM,GA9GU,IAgHrC,CAnFc+yG,CAAmB9lG,GAEjB6oF,IAAWv6F,EAAAA,GAAeC,UAC5B61D,EAAAA,EAAAA,IAAapkD,GACf,GACA,GACJ,EAQF+lG,CAYN,SAA+BzuE,EAAgBpb,GAC7C,MAAMukF,GAAcuF,EAAAA,EAAAA,MAAkBr7G,EAAAA,EAAAA,MAAa2sC,GACnD,IAAKmpE,IAAgBA,EAAYtmC,YAAYjuE,OAC3C,MAAO,GAGT,MAAM+5G,EAbR,SAAmC5xE,EAAU6xE,EAAcC,GACzD,MAAM9qD,EAAehnB,EAAIpzB,QAAQilG,GAC3Bp1G,EAAQsF,KAAK2B,IAAIsjD,EAWoD+qD,EAXvB,GAC9Cr1G,EAAMqF,KAAKC,IAAIglD,EAUsD+qD,EAVzB/xE,EAAInoC,QACtD,OAAOmoC,EAAInpC,MAAM4F,EAAOC,EAC1B,CAQqBs1G,CAAuB5F,EAAYtmC,WAAYj+C,GAE5D6oF,EAAgC,GA+BtC,OA9BAkB,EAAWtuG,SAAS2uG,IAClB,GAAI1B,EAAiBttE,IAASjoC,IAAIi3G,GAChC,OAGF,MAAMhnF,EAAQmhF,EAAY51G,KAAKy7G,GAC/B,IAAKhnF,KAAW,YAAaA,GAC3B,OAGF,MAAM24B,EAAUzuD,QAAQ81B,EAAM3sB,QAAQI,OAGtCgyG,EAAYz3G,KAAK,CACfkhE,MAAMwhC,EAAAA,EAAAA,IAAkB1wE,EAAO,QAC/BupE,OAAQ5wC,EAAU3pD,EAAAA,GAAek3G,YAAcl3G,EAAAA,GAAeC,QAC9Dy2G,SAAU/sD,IAAWsuD,EAAAA,EAAAA,GAA0B7B,EAAAA,KAGjDK,EAAYz3G,KAAK,CAAEkhE,MAAMwhC,EAAAA,EAAAA,IAAkB1wE,GAAQupE,OAAQv6F,EAAAA,GAAeC,UACtE+wB,EAAM3sB,QAAQ6zG,UAChBzB,EAAYz3G,KAAK,CACfkhE,MAAMwhC,EAAAA,EAAAA,IAAkB1wE,EAAO,QAAQ,GACvCupE,OAAQv6F,EAAAA,GAAek3G,cAI3BZ,EAAiBttE,IAAWstE,EAAiBttE,IAAW,IAAIzoC,KAAOc,IAAI22G,EAAe,IAGjFvB,CACT,CApDoB0B,CAAsBl9G,EAAI2yB,GAAS,GACjD,GACD,CAAC4oF,EAAextE,GACrB,C,sLChEA,QAAiD,WC4GjD,GAAe9uC,EAAAA,EAAAA,KA7EoBqB,IAOnB,IAPoB,MAClCy1B,EAAK,UACLonF,EAAS,MACTt3C,EAAK,UACLtlE,EAAS,MACTgG,EAAK,UACLokE,GACSrqE,EACT,MAAM,kBAAEu7B,IAAsBl7B,EAAAA,EAAAA,MAGxB2G,GAAMnE,EAAAA,EAAAA,IAAuB,OAC5Bi6G,EAAiBC,IAAsBpzG,EAAAA,EAAAA,IAAS,IAAMw1C,EAAAA,IAEvD,OAAE1R,EAAM,GAAE/tC,EAAE,MAAEs9G,GAAUvnF,GACxB,UAAEa,GAAc0mF,GAAS,CAAC,GAC1B,SAAE5oE,EAAQ,OAAE6oE,EAAM,UAAEC,GAAcL,EAElCjmF,IAAajE,EAAAA,EAAAA,IAAS8a,GACtBiH,EAAe,IAAEC,EAAAA,EAAAA,IAAYlH,EAAQ/tC,MAAO6lE,KAAS8E,EAAY,UAAY,WAE7E8yC,GAAgBv8G,EAAAA,EAAAA,KAAQ,IAC5B01B,GAAW9T,MAAM4pD,IAAM9Y,EAAAA,EAAAA,IAAe8Y,EAAEh4B,SAAUA,MAAY+zC,OAC7D,CAAC/zC,EAAU9d,IACR8mF,GAAsB/yC,GAAa1qE,QAAQw9G,IAAkBvmF,EAE7DymF,GAAwBx3G,EAAAA,EAAAA,IAAgB,KAC5C,IAAKmB,EAAI3D,QAAS,OAClB,MAAMqK,EAAS1G,EAAI3D,QAAQi6G,aAC3BP,EAAmBxwG,KAAK7J,MAhCK,GAgCCgL,GAAmC,KAGnE69B,EAAAA,EAAAA,IAAsBhqC,IAAyB,IAAvBg8G,GAAkBh8G,EACpC5B,QAAQw9G,KAAmBx9G,QAAQ49G,IACrCF,GACF,GACC,CAACF,KAEJ3wD,EAAAA,EAAAA,GAAkBxlD,EAAKq2G,GAEvB,MAAMl6F,GAActd,EAAAA,EAAAA,IAAgB,KAClC01B,EAAkB,CAChBkS,SACApb,QAAS3yB,EACTg1C,cACAN,YACA,IAGJ,OACEnyC,EAAAA,GAAAC,cAAA,OACE8E,IAAKA,EACL/G,WAAWkC,EAAAA,EAAAA,GDnF0H,WCmFjF86G,GDnFmG,WCmF5Eh9G,GAC3EgG,OAAOC,EAAAA,EAAAA,GAAWD,EAAQ,wBAAuB62G,OACjD16G,QAAS+gB,GAETlhB,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GDxFkK,WCwFhI+6G,GDxFqJ,cC0FnMv9G,QAAQm9G,IACP76G,EAAAA,GAAAC,cAACi3C,EAAAA,EAAqB,CACpBl5C,WAAWkC,EAAAA,EAAAA,GD5F2M,WC4F3Ki7G,GD5FkM,YC6F7OhpE,SAAUA,EACVM,YAAaA,EACbnyC,KAAMu6G,EACN9wC,WAnEqB,EAmET8wC,EACZ7wC,YAAa5B,EACb3E,YAAa2E,IAGhB+yC,GACCn7G,EAAAA,GAAAC,cAAA,QAAMjC,UDtGoQ,YCsGlOk9G,GAEtC,ICnFJK,EAAqB,EAAI,GAiG/B,SAASC,EAAaZ,GACpB,MAAM,EACJ1uG,EAAC,EAAEC,EAAC,MAAEX,EAAK,OAAEC,EAAM,SAAEgwG,GACnBb,EAAUc,YAEd,OAAOz3G,EAAAA,EAAAA,GACJ,SAAQiI,KACR,QAAOC,KACP,UAASX,KACT,WAAUC,KACV,qBAAoBgwG,8BAEzB,CAEA,SAAe/+G,EAAAA,EAAAA,KA7GUqB,IAET,IAFU,MACxBy1B,EAAK,SAAEr2B,EAAQ,UAAEa,GACRD,EACT,MAAM,aAAE0nE,EAAY,aAAE76C,EAAY,iBAAE+wF,IAAqBv9G,EAAAA,EAAAA,MAGnD2G,GAAMnE,EAAAA,EAAAA,IAAuB,MAE7Bw5B,GAAawhF,EAAAA,EAAAA,MAEnBp8G,EAAAA,EAAAA,KAAU,KACR,IAAKuF,EAAI3D,UAAYjE,EAAU,OAC/B,MAAM8yC,EAAUlrC,EAAI3D,QAEpB,GAAIg5B,EAAW5uB,MAAQqwG,EAAAA,IAKrB,YAJA/5E,EAAAA,EAAAA,KAAgB,KACdmO,EAAQjsC,MAAM83G,eAAe,iBAC7B7rE,EAAQjsC,MAAM83G,eAAe,iBAAiB,IAKlD,MAAMC,EAAoB3hF,EAAW5uB,MAAQ4uB,EAAW3uB,OAElDD,EAAQuwG,EAAoBR,EAC9BtrE,EAAQorE,aAAeE,EAAqBtrE,EAAQ+rE,YAClDvwG,EAASswG,EAAoBR,EAC/BtrE,EAAQorE,aAAeprE,EAAQ+rE,YAAcT,GAEjDz5E,EAAAA,EAAAA,KAAgB,KACdmO,EAAQjsC,MAAM2yF,YAAY,gBAAkB,GAAEnrF,OAC9CykC,EAAQjsC,MAAM2yF,YAAY,iBAAmB,GAAElrF,MAAW,GAC1D,GACD,CAACtO,EAAUi9B,IAEd,MAkBM6hF,EAAazoF,EAAMyoF,WAEzB,OACEj8G,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GFhFS,YEgFuB/C,GFhFqB,YEgFOa,GACvE+G,IAAKA,GAEJk3G,GAAY58G,KAAI,CAACu7G,EAAWr5G,KAC3B,OAAQq5G,EAAUz+F,MAChB,IAAK,WACL,IAAK,QACL,IAAK,cAAe,CAClB,MAAM+/F,EAAU/+G,IAAgC,aAAnBy9G,EAAUz+F,MAA0C,UAAnBy+F,EAAUz+F,MACxE,OACEnc,EAAAA,GAAAC,cAAA,OACEjC,WAAWkC,EAAAA,EAAAA,GAAeiE,EAAkB+3G,GF3F8B,YE4F1El4G,MAAOw3G,EAAaZ,GACpBz6G,QAASA,IAnCOy6G,KAC5B,OAAQA,EAAUz+F,MAChB,IAAK,WACL,IAAK,QACHspD,EAAa,CAAEyB,SAAU0zC,EAAUv0C,MACnC,MAEF,IAAK,cACHz7C,EAAa,CACX9tB,OAAQ89G,EAAUuB,UAClB7tG,UAAWssG,EAAUtsG,YAEvBqtG,IAGJ,EAoB2BS,CAAqBxB,IAG1C,CACA,IAAK,oBACH,OACE56G,EAAAA,GAAAC,cAACo8G,EACC,CACA36F,IAAM,GAAEk5F,EAAUz+F,QAAQ5a,IAC1BiyB,MAAOA,EACPonF,UAAWA,EACXt3C,MAAO/hE,EACP6mE,WAAYjrE,EACZa,UAAWmG,EACXH,MAAOw3G,EAAaZ,KAG1B,QACE,OACJ,IAEE,G,gFC1GH,SAAS0B,EACd1/G,EAAW2/G,GAEX,GAA0B,SAAtBA,EAAapgG,MAAyC,UAAtBogG,EAAapgG,KAAkB,OAAOogG,EAE1E,GAA0B,YAAtBA,EAAapgG,KAAoB,CACnC,MAAMpf,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQ2/G,EAAaz/G,QAC7C,IAAKC,EACH,OAEF,MAAO,CACLof,KAAM,UACNpf,OACAuR,UAAWiuG,EAAajuG,UAE5B,CAEA,GAA0B,aAAtBiuG,EAAapgG,KAAqB,CACpC,MAAM,QACJyZ,EAAO,eAAE4mF,EAAc,OAAEC,EAAM,SAAEC,EAAQ,OAAEC,GACzCJ,EAIJ,MAAO,CACLpgG,KAAM,WACNwgG,SACAC,QAAS,CACPzgG,KAAM,WACNsgG,SACAC,WACA59G,MAVU82B,EAAQv2B,KAAK5B,IAAOu0B,EAAAA,EAAAA,KAAWp1B,EAAQa,KAAK8B,OAAO7B,SAW7Dm/G,aAViBL,GAAiBx/G,EAAAA,EAAAA,KAAWJ,EAAQ4/G,QAAkBh/G,GAa7E,CAEA,GAA0B,aAAtB++G,EAAapgG,KAAqB,CACpC,MAAM,OACJrf,EAAM,qBAAEggH,EAAoB,OAAEL,EAAM,SAAEC,EAAQ,OAAEC,EAAM,UAAEI,EAAS,kBAAEC,EAAiB,UAAEC,EAAS,wBAC/FC,EAAuB,iBAAEC,GACvBZ,EACEx/G,GAAOC,EAAAA,EAAAA,KAAWJ,EAAQE,GAChC,IAAKC,EACH,OAEF,MAAMqgH,EAAqBN,GAAsBz9G,KAAK5B,IAAOT,EAAAA,EAAAA,KAAWJ,EAAQa,KAAK8B,OAAO7B,SAE5F,MAAO,CACLye,KAAM,WACNwgG,SACAC,QAAS,CACPzgG,KAAM,WACNsgG,SACAC,WACA3/G,OACAqgH,qBACAL,YACAC,oBACAC,YACAC,0BACAC,oBAGN,CAGF,CAEO,SAASE,EACd1rG,GAEA,MAAkB,aAAdA,EAAKwK,KACA,CACLmhG,WAAY,OACZC,cAAc,EACdp0D,SAAU,2CACViC,YAAa,8CACboyD,YAAa,GAIC,eAAd7rG,EAAKwK,KACA,CACLmhG,WAAY,OACZC,cAAc,EACdp0D,SAAU,4CACViC,YAAa,+CACboyD,YAAa,GAIC,aAAd7rG,EAAKwK,KACA,CACLmhG,WAAY,OACZC,cAAc,EACdp0D,SAAU,8CACViC,YAAa,iDACboyD,aAAc,GAIA,eAAd7rG,EAAKwK,KACA,CACLmhG,WAAY,OACZC,cAAc,EACdp0D,SAAU,gDACViC,YAAa,mDACboyD,YAAa,EACbC,qBAAqB,GAIlB,CACLH,WAAY,OACZC,cAAc,EACdp0D,SAAU,4CACViC,YAAa,4CACboyD,YAAa,EAEjB,CAEO,SAASE,EAA6BjB,GAC3C,OAAIA,EAAS,EACH,MAAI1J,EAAAA,EAAAA,IAAczoG,KAAKy3E,IAAI06B,MAG7B,MAAI1J,EAAAA,EAAAA,IAAc0J,IAC5B,C,8FClIA,MAAMkB,EAAwB,IAEf,SAASrV,EACtBvjG,EAAwC64G,EAAqCnvF,GAE7E,MAAM,iBAAEzY,IAAqB5X,EAAAA,EAAAA,MACvBC,GAAOC,EAAAA,EAAAA,MACN+pG,EAAewV,IAAoBn2G,EAAAA,EAAAA,KAAS,GAE7Co2G,GAAoBl6G,EAAAA,EAAAA,IAAgB,KACxCi6G,GAAiB,GACbD,GAEJ5nG,EAAiB,CACf7Q,QAAS44G,EAAAA,GAAY1/G,EAAK,4BAA8BA,EAAK,6BAC7D+K,SAAUu0G,GACV,IAGEK,GAAUp6G,EAAAA,EAAAA,IAAiBugD,IAC/B,MAAMl/B,EAASk/B,EAAMpjC,eACf,MAAElJ,GAAUoN,EACbpN,IAGc,IAAfA,EAAMiqD,MAA6B,IAAfjqD,EAAMiqD,MAC5Bg8C,IACF,IAGIG,GAAYr6G,EAAAA,EAAAA,IAAiBugD,IACjC,MAAMl/B,EAASk/B,EAAMpjC,cAEhBkE,EAAOo3E,aAAgBp3E,EAAOm3E,YACjC0hB,GACF,IAoBF,OAjBAt+G,EAAAA,EAAAA,KAAU,KACR,GAAIivB,EAAY,OAEhB,MAAM,QAAErtB,GAAY2D,EACpB,OAAK3D,GAILA,EAAQ6U,iBAAiB,QAAS+nG,GAClC58G,EAAQ6U,iBAAiB,UAAWgoG,GAE7B,KACL78G,EAAQ+U,oBAAoB,QAAS6nG,GACrC58G,EAAQ+U,oBAAoB,UAAW8nG,EAAU,QATnD,CAUC,GACA,CAACxvF,EAAY1pB,IAETsjG,CACT,C,8FCtDA,MAAM6V,EAAmB,KACnBC,EAAyB,IAAIzpB,IACnC,IAAI0pB,EAAgB,IAAIr7G,IACxB,MAGMs7G,GAAgBvR,EAAAA,EAAAA,KAAS,KAC7B,MAAMwR,EAAQj0G,MAAMgN,KAAK+mG,GACnBG,EAAcD,EAAMl/G,MAAM,EALR,KAMlBo/G,EAAaF,EAAMl/G,MAAMq/G,MAE/BrgH,EAAAA,EAAAA,MAAasgH,kBAAkB,CAC7BC,QAASJ,IAGXA,EAAY1yG,SAASpO,GAAO0gH,EAAuB3nB,IAAI/4F,EAAImf,KAAKC,SAEhEuhG,EAAgB,IAAIr7G,IAAIy7G,GAGpBJ,EAAc99G,MAChB+9G,GACF,GAlBuB,KAqBV,SAAStmC,EAAsBxvC,GAC5C,MAAMhoC,GAAQ5B,EAAAA,EAAAA,KAAQ,KACpB,MAAM/B,GAASiC,EAAAA,EAAAA,MACf,OAAO0pC,GAAKlpC,KAAK5B,IAAO6rB,EAAAA,EAAAA,KAAW1sB,EAAQa,KAAK8B,OAAO7B,QAAQ,GAC9D,CAAC6qC,IAEEq2E,GAAkBjgH,EAAAA,EAAAA,KAAQ,KAC9B,MAAM/B,GAASiC,EAAAA,EAAAA,MACf,OAAO0B,GAAOhB,QAAQoS,IACpB,MAAMktG,EAAkBV,EAAuB9jF,IAAI1oB,EAAKlU,KAAO,EAC/D,GAAImf,KAAKC,MAAQgiG,EAAkBX,EACjC,OAAO,EAGT,IAAIxtF,EAAAA,EAAAA,IAAS/e,EAAKlU,IAAK,CACrB,MAAMw1B,EAAOthB,EACPssC,GAAS2M,EAAAA,EAAAA,KAAiBhuD,EAAQq2B,EAAKx1B,IACvCqhH,EAAoB7gE,GAA0B,oBAAhBA,EAAO9hC,KAC3C,OAAQ8W,EAAK8rF,YAAc9rF,EAAK61B,UAAWhR,EAAAA,EAAAA,IAAU7kB,KAAUthB,EAAKomC,WAAa+mE,CACnF,CAAO,CACL,MAAM/hH,EAAO4U,EACb,OAAOijB,EAAAA,EAAAA,IAAc73B,KAAUA,EAAKmiD,YACtC,KACC7/C,KAAK4zB,GAASA,EAAKx1B,IAAG,GACxB,CAAC8C,KAEJf,EAAAA,EAAAA,KAAU,KACJo/G,GAAiBx+G,SACnBw+G,EAAgB/yG,SAASpO,GAAO2gH,EAAcv6G,IAAIpG,KAClD4gH,IACF,GACC,CAACO,GACN,C,yFClDO,MAAMI,EAAwC,CACnD,CAAE5/F,KAAM,OAAQ5Q,MAAO,iBAAkBkT,IAAK,YAC9C,CAAEtC,KAAM,eAAgB5Q,MAAO,oBAAqBkT,IAAK,eACzD,CAAEtC,KAAM,QAAS5Q,MAAO,eAAgBkT,IAAK,UAC7C,CAAEtC,KAAM,UAAW5Q,MAAO,iBAAkBkT,IAAK,YACjD,CAAEtC,KAAM,OAAQ5Q,MAAO,aAAckT,IAAK,SAG/Bu9F,EAAwC,CACnD,CAAE7/F,KAAM,OAAQ5Q,MAAO,cAAekT,IAAK,gBAC3C,CAAEtC,KAAM,UAAW5Q,MAAO,iBAAkBkT,IAAK,mBACjD,CAAEtC,KAAM,YAAa5Q,MAAO,aAAckT,IAAK,gBAG3Cw9F,EAA2D,CAC/D,kBAAmB,OAAQ,WAAY,SAAU,WAAY,eAEzDC,EAA2D,CAC/D,kBAAmB,kBAAmB,eAAgB,eAGjD,SAASC,EAAkBC,EAAqBC,EAA+BC,GACpF,IAAIC,EAA4B,GAC5BC,EAA6C,GAEjD,GAAa,aAATH,EAAqB,CACvB,MAAM,gBACJI,KACGC,GACDJ,EACAF,EAAMM,gBAAkB,CAAC,GACzBC,EAAAA,EAAAA,IACAP,EAAMQ,OACNX,GAGJM,EAAkBE,GAAmB,GACrCD,EAAqBvgH,OAAO8qB,KAAK21F,GAC9BpgH,QAAQmiB,GAAQhkB,QAAQiiH,EAAej+F,KAC5C,KAAO,CACL,MAAM,gBACJo+F,KACGC,GACDR,EACAF,EAAMU,gBAAkB,CAAC,GACzBH,EAAAA,EAAAA,IACAP,EAAMQ,OACNV,GAGJK,EAAkBM,GAAmB,GACrCL,EAAqBvgH,OAAO8qB,KAAK+1F,GAC9BxgH,QAAQmiB,GAAQhkB,QAAQqiH,EAAer+F,KAC5C,CAEA,MAAO,CACL89F,kBACAC,oBAEJ,CAEA,SAASO,EAAuBL,GAC9B,GAAIA,EAAgB,CAClB,MAAM,gBACJD,KACGO,GACDN,EAEJ,GACEzgH,OAAOC,OAAO8gH,GAAS1gH,OAAO7B,SAAS0C,OAAS,GAC5Cs/G,GAAiBt/G,OAErB,MAAO,GAGT,GAAI6/G,EAAQj6F,KACV,MAAO,OACF,GAAIi6F,EAAQC,OACjB,MAAO,SACF,GAAID,EAAQE,SACjB,MAAO,WACF,GAAIF,EAAQG,SACjB,MAAO,WACF,GAAIH,EAAQI,YACjB,MAAO,cAEX,CAEA,MAAO,EACT,CAyBA,MAAMC,EAA8B,CAClChB,KAAM,SACNiB,WAAY,GACZV,OAAQ,CACNrxG,MAAO,GACPkxG,gBAAiB,GACjBI,gBAAiB,KAIfU,EAA6DA,CACjEnB,EACAl0F,KAEA,OAAQA,EAAOhP,MACb,IAAK,WACH,MAAO,IACFkjG,EACHQ,OAAQ,IACHR,EAAMQ,OACTrxG,MAAO2c,EAAOmf,SAEhBlC,WAAW,GAEf,IAAK,cACH,MAAO,IACFi3E,EACH5wC,SAAUtjD,EAAOmf,QACjBg1E,KAAM,QAEV,IAAK,qBACH,MAAO,IACFD,EACHM,gBAAgBC,EAAAA,EAAAA,IACdP,EAAMQ,OACNX,IAGN,IAAK,qBACH,MAAO,IACFG,EACHU,gBAAgBH,EAAAA,EAAAA,IACdP,EAAMQ,OACNV,IAGN,IAAK,oBACH,MAAO,IACFE,EACHM,eAAgBx0F,EAAOmf,QACvBi2E,WAAY,IAEhB,IAAK,oBACH,MAAO,IACFlB,EACHU,eAAgB50F,EAAOmf,QACvBi2E,WAAY,IAEhB,IAAK,cACH,OAAIlB,EAAMM,eACD,IACFN,EACHQ,OAAQ,KACHY,EAAAA,EAAAA,IAAKpB,EAAMQ,OAAQX,GACtB1wG,MAAO6wG,EAAMQ,OAAOrxG,MAAQ6wG,EAAMQ,OAAOrxG,MAAQwxG,EAAuBX,EAAMM,mBAC3EN,EAAMM,gBAEXA,oBAAgBniH,EAChB+iH,WAAY,GACZn4E,WAAW,GAEJi3E,EAAMU,eACR,IACFV,EACHQ,OAAQ,KACHY,EAAAA,EAAAA,IAAKpB,EAAMQ,OAAQV,MACnBE,EAAMU,gBAEXA,oBAAgBviH,EAChB+iH,WAAY,GACZn4E,WAAW,GAGNi3E,EAEX,IAAK,aAAc,CACjB,MAAQ5hH,GAAIgxE,EAAQ,YAAExrB,KAAgB48D,GAAW10F,EAAOmf,QAExD,MAAO,CACLg1E,KAAM,OACN7wC,WACAoxC,SACAU,WAAY,GAEhB,CACA,IAAK,gBACH,MAAO,IACFlB,EACHkB,WAAYp1F,EAAOmf,SAGvB,IAAK,eACH,MAAO,IACF+0E,EACHj3E,UAAWjd,EAAOmf,SAGtB,IAAK,eACH,MAAO,IACF+0E,EACHlpF,UAAWhL,EAAOmf,SAGtB,IAAK,WACH,MAAO,IACF+0E,EACHlpF,WAAW,EACXte,MAAOsT,EAAOmf,SAGlB,IAAK,gBACH,MAAO,IACF+0E,EACHQ,OAAQ,IACHR,EAAMQ,OACTa,WAAYv1F,EAAOmf,UAGzB,IAAK,QACH,OAAOg2E,EACT,QACE,OAAOjB,EACX,EAOF,EAJ0BsB,KACjBC,EAAAA,EAAAA,GAAWJ,EAAgBF,E,6DCzPpC,QAbA,SAAoB9H,EAA8B7G,GAChD,MAAMkP,GAAgBj9G,EAAAA,EAAAA,GAAgB40G,IAEtCh5G,EAAAA,EAAAA,KAAU,KACR,GAAqB,iBAAVmyG,EACT,OAGF,MAAMl0G,EAAKsG,YAAW,IAAM88G,KAAiBlP,GAC7C,MAAO,IAAMzqB,aAAazpF,EAAG,GAC5B,CAACk0G,GACN,C,kGCRO,SAASjsE,EACdo7E,EACAC,EACAC,GAEA,IADAC,EAAOn3G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAEP,OAAOgtF,EAAAA,EAAAA,IAAsBoqB,IAC3BA,EAASJ,IAAW,GAEnBC,EAAMC,EAAiBC,EAC5B,CAEO,SAASra,EACdua,EACA1I,GAGA,MAAM2I,EAAoB17E,GAAqB,IAAMy7E,KAAY,CAACA,GAAW1I,EAFtE3uG,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,IAIP,OAAOulB,EAAAA,EAAAA,GACL+xF,EAAmB,CAACA,EAAmBD,IAAW,EAEtD,CAEO,SAASpyF,EACd+xF,EACAC,EACAtI,GAGA,IAFAwI,EAAOn3G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACPu3G,EAAMv3G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAEN,OAAO8vE,EAAAA,EAAAA,IAAsBsnC,IAC3BA,EAASJ,IAAW,GAEnBC,EAAMtI,EAAIwI,EAASI,EACxB,CAEO,SAASC,EACdH,EACA1I,GAIA,MAAM8I,EAAoBxyF,GAAqB,IAAMoyF,KAAY,CAACA,GAAW1I,EAHtE3uG,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACDA,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,IAIN,OAAOulB,EAAAA,EAAAA,GACLkyF,EAAmB,CAACA,EAAmBJ,IAAW,EAEtD,C,qJC6NA,QA7PuB,SACrBK,EACAC,EACAr5G,EACAlE,EACAw9G,EACA/kB,EACAglB,GASG,IARH5a,EAAUj9F,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACV83G,EAAgC93G,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAChCqkH,EAAkC/3G,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAClCskH,EAAUh4G,UAAA1J,OAAA,SAAA5C,IAAAsM,UAAA,KAAAA,UAAA,IACVi4G,EAAiBj4G,UAAA1J,OAAA,SAAA5C,IAAAsM,UAAA,KAAAA,UAAA,IACjBzD,EAA4ByD,UAAA1J,OAAA,GAAA0J,UAAA,SAAAtM,EAC5BwL,EAAOc,UAAA1J,OAAA,SAAA5C,IAAAsM,UAAA,KAAAA,UAAA,IACPk4G,EAAcl4G,UAAA1J,OAAA,SAAA5C,IAAAsM,UAAA,KAAAA,UAAA,IAGd,MAAMm4G,GAAgBrhH,EAAAA,EAAAA,IAAoC,OAEnDqI,EAAWi5G,IAAgBx6G,EAAAA,EAAAA,KAAS,GAC3C,IAAIy6G,EAAgBl5G,EAEpB,MAAOrE,EAAc4jG,IAAmB9gG,EAAAA,EAAAA,IAAiB,GAEnDiB,GAAoB/E,EAAAA,EAAAA,IAAgB,KACxCs+G,GAAa,GACTL,GAAeA,GAAe,KAGpCtyF,EAAAA,EAAAA,IAAc,KACZ,IAAKiyF,EACH,OAEFS,EAAc7gH,SAAUghH,EAAAA,EAAAA,IAASZ,EAASp5G,GAAW,CAACi6G,EAAW30G,KAC/D,IAAIs0G,EAAJ,CAGA,OAAQK,GACN,IAAK,SAAU,CACb,MAAM,UACJC,EAAS,gBAAEC,EAAe,YAAEC,EAAW,MAAEC,GACvCR,EAAc7gH,QAClB8gH,GAAa,GACK,iBAAd95G,IACFs6G,EAAAA,EAAAA,IAAqB/lB,EAiKjC,SAA2BslB,GACzB,IAAIU,EAAsC,CAAC,EAC3C,GAAIV,GAAiBA,EAAc7gH,QAAS,CAC1C,MAAM,KACJgrE,EAAI,MAAEttD,EAAK,eAAE3V,EAAc,MAAEs5G,EAAK,iBAAEG,EAAgB,qBAAEC,EAAoB,QAAExzD,EAAO,OAAEC,GACnF2yD,EAAc7gH,QAClBuhH,EAAgB,CACdv2C,KAAMA,KACJA,EAAKq2C,EAAMv+G,IAAI,EAEjB4a,MAAOA,KACLA,GAAO,EAETR,KAAMA,KACJQ,IACA3V,EAAe,IACf/K,EAAAA,EAAAA,MAAa0kH,kBAAkB,EAEjCC,aAAe5+D,IACb,MAAM6+D,EAAW7+D,EAAM8+D,YAnOL,GAoOlB95G,EAAemB,KAAK2B,IAAIw2G,EAAMx1D,YAAc+1D,EAAU,GAAG,EAE3DE,YAAc/+D,IACZ,MAAM6+D,EAAW7+D,EAAM8+D,YAvOL,GAwOlB95G,EAAemB,KAAKC,IAAIk4G,EAAMx1D,YAAc+1D,EAAUP,EAAMr5G,UAAU,EAExE+5G,OAASh/D,IACHA,EAAMi/D,UACRj6G,EAAeg7C,EAAMi/D,SACvB,GAIC9zD,MACHqzD,EAAcU,UAAY,KACxBT,GAAkB,GAGjBvzD,MACHszD,EAAcW,cAAgB,KAC5BT,GAAsB,EAG5B,CACA,OAAOF,CACT,CA9M2CY,CAAkBtB,KAEnDuB,EAAAA,EAAAA,IAAiB,WACjB,MAAM,YAAEC,IAAgBrmH,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OACvCyjH,EAAUmB,EAAYxlG,QACtBukG,EAAY9kH,QAAQ+lH,EAAYt/C,UAChC,MAAM/6D,EAAWq5G,EAAMr5G,UAAYshC,OAAO+9D,SAASga,EAAMr5G,UAAYq5G,EAAMr5G,SAAWq4G,GACpE,UAAdr5G,GAAyBgB,EAAWs6G,EAAAA,MACtCnB,EAAgBkB,EAAYE,eAE9BC,EAAAA,EAAAA,IAAiB,CACfx6G,SAAUq5G,EAAMr5G,UAAY,EAC5Bu6G,aAAclB,EAAMkB,aACpBl4E,SAAUg3E,EAAMx1D,cAElB,KACF,CACA,IAAK,eAAgB,CACnB,MAAM,MAAEw1D,GAAUR,EAAc7gH,SAChCwiH,EAAAA,EAAAA,IAAiB,CACfx6G,SAAUq5G,EAAMr5G,UAAY,EAC5Bu6G,aAAclB,EAAMkB,aACpBl4E,SAAUg3E,EAAMx1D,cAElB,KACF,CACA,IAAK,UACHi1D,GAAa,IACbsB,EAAAA,EAAAA,IAAiB,UACjBn9G,MACA,MACF,IAAK,eAAgB,CACnB,MAAM,MAAEo8G,GAAUR,EAAc7gH,QAChC,GAAI4H,GAAiC,IAAtBy5G,EAAMx1D,YACnB,MAEF,MAAM7jD,EAAWq5G,EAAMr5G,UAAYshC,OAAO+9D,SAASga,EAAMr5G,UAAYq5G,EAAMr5G,SAAWq4G,EACjFM,GAAmBvZ,EAAgBia,EAAMx1D,YAAc7jD,GAC5D,KACF,CACA,IAAK,WACHo6G,EAAAA,EAAAA,IAAiB,UAIrB9B,IAAWW,KAAa30G,EArDxB,CAqD0B,GACzBk0G,EAAaj5G,GAEhB,MAAM,MAAE85G,GAAUR,EAAc7gH,QAE3B6H,GAAcw5G,EAAMtwB,SACvB+vB,GAAa,GAGbC,GAAgB,GAGdR,IAAWK,GACbL,EAAOc,EACT,GACC,CAACjB,KAEJhiH,EAAAA,EAAAA,KAAU,KACJyJ,GAAa0zF,IAAUknB,EAAAA,EAAAA,IAAelnB,EAAS,GAClD,CAACA,EAAU1zF,IAEd,MAAM,KACJmjE,EAAI,MACJttD,EAAK,eACL3V,EAAc,MACds5G,EAAK,QACLpwB,EAAO,UACPiwB,EAAS,KACThkG,EAAI,QACJ+wC,EAAO,OACPC,EAAM,iBACNszD,EAAgB,qBAChBC,EAAoB,gBACpBN,EAAe,YACfC,GACEP,EAAc7gH,SAAW,CAAC,EAExBgI,GAAWzK,EAAAA,EAAAA,KAAQ,IAChB8jH,GAAOr5G,UAAYshC,OAAO+9D,SAASga,EAAMr5G,UAAYq5G,EAAMr5G,SAAWq4G,GAC5E,CAACgB,GAAOr5G,SAAUq4G,KAGrBjiH,EAAAA,EAAAA,KAAU,KACHijH,IAGDz5G,GAAiC,IAAtBy5G,EAAMx1D,cAGjB7jD,IAAa06G,EAAAA,EAAAA,GAAwBrB,IAAWV,GAClDvZ,EAAgBia,EAAMx1D,YAAc7jD,GACtC,GACC,CAACA,EAAUxE,EAAc69G,EAAOV,EAAmB/4G,KAGtDxJ,EAAAA,EAAAA,KAAU,IAAM,KACd6yF,IAAUyvB,EAAW,GACpB,CAACzvB,EAASyvB,KAGbx4E,EAAAA,EAAAA,IAAsBvrC,IAA+B,IAA7BgmH,EAAgBC,GAAQjmH,EAC1CgmH,IAAmBhd,GAAc7iG,IAAQ8/G,GAKzCvB,GAAOv+G,KAAOu+G,GAAOtwB,QAIrB4U,GAAc7iG,IAAQ+E,GACxBmjE,IAAOloE,EACT,GACC,CAAC6iG,EAAY7iG,EAAK+E,EAAWmjE,EAAMq2C,GAAOv+G,IAAKu+G,GAAOtwB,OAAQ/pF,IAEjE,MAAM67G,GAAgBrgH,EAAAA,EAAAA,IAAgB,KAChCM,GACFkoE,IAAOloE,EACT,IAGIgF,GAAYtF,EAAAA,EAAAA,IAAgB,KAC5BqF,EACF6V,MAEAmlG,GACF,IAGIC,GAAUtgH,EAAAA,EAAAA,IAAiBugH,IAC/Bh7G,IAAiBg7G,GACb/6G,GAAYq5G,GACdja,EAAgBia,EAAMx1D,YAAc7jD,EACtC,IAGF,MAAO,CACLH,UAAWk5G,EACXv9G,eACAsE,YACA4V,QACAstD,KAAM63C,EACN3lG,OACAnV,eAAgB+6G,EAChB5B,YACA8B,WAAY3B,EACZr5G,WACAw5G,mBACAC,uBACAxzD,UACAC,SACAizD,kBACAC,cAEJ,C,8FC5NA,MAAM6B,EAAS,EACTC,EAAa,EAEJ,SAAS5nE,EACtBv6C,GAMA,IALAssB,EAAU3kB,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACVy6G,EAAiBz6G,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EACjB4O,EAAMtC,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGu6G,EACTG,EAAuB16G,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EACvBinH,EAAwB36G,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAGxB,MAAMwM,GAAYpJ,EAAAA,EAAAA,IAA0B,MACtC8jH,GAAY9jH,EAAAA,EAAAA,MAqDlB,OAnDA2uB,EAAAA,EAAAA,IAAc,KACPd,IACHi2F,EAAUtjH,SAAU,EACtB,GACC,CAACe,EAASssB,KAEbjvB,EAAAA,EAAAA,KAAU,KACR,MAAM4L,EAASpB,EAAU5I,QAEzB,IAAKe,IAAYiJ,GAAUqjB,GAAci2F,EAAUtjH,QACjD,OAGFsjH,EAAUtjH,SAAU,EAEpB,MAAMw6F,EAAM,IAAI4O,MAEVma,EAAcA,KAClB,MAAMn5G,EAAQg5G,GAAkB5oB,EAAIpwF,MAC9BC,EAASg5G,GAAmB7oB,EAAInwF,OAChCC,EAAMN,EAAOO,WAAW,KAAM,CAAEi5G,OAAO,KAE7C9iF,EAAAA,EAAAA,KAAgB,KACd12B,EAAOI,MAAQA,EACfJ,EAAOK,OAASA,EAEZkxC,EAAAA,KACFjxC,EAAInM,OAAU,QAAO6M,QAGvBV,EAAIktD,UAAUgjC,EAAe,GAATxvF,EAAsB,GAATA,EAAYZ,EAAiB,EAATY,EAAYX,EAAkB,EAATW,GAE1EhB,EAAOiH,UAAUoG,OAAO,qBAEnBkkC,EAAAA,KACHkoE,EAAAA,EAAAA,GAASn5G,EAAK,EAAG,EAAGF,EAAOC,EAAQW,EAAQk4G,EAC7C,GACA,EAGJ1oB,EAAI8O,OAAS,KACP6Z,GACFnmG,EAAAA,EAAAA,IAAeumG,GAEfA,GACF,EAGF/oB,EAAI13F,IAAM/B,CAAO,GAChB,CAACA,EAASssB,EAAYg2F,EAAiBD,EAAgBp4G,EAAQm4G,IAE3Dv6G,CACT,C,oHC3DA,MA2KA,EA3K8B,SAAAjM,GA4BJ,IA5BK,KAC7BhB,EAAI,KACJk2B,EAAI,SACJw7C,EAAQ,SACRC,EAAQ,QACRvK,EAAO,gBACPgK,EAAe,cACfz2B,EAAa,cACb5lB,EAAa,UACbs2C,EAAS,aACT6I,EAAY,WACZC,EAAU,uBACVC,EAAsB,aACtB9e,GAeDt0D,EAAE+mH,EAAUh7G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACX,MAAMzL,GAAOC,EAAAA,EAAAA,MAEP,OAAEwqD,GAAW71B,GAAQ,CAAC,EACtB8xF,EAAyB9xF,GAAMx1B,KAAOunH,EAAAA,IAEtCC,GAActmH,EAAAA,EAAAA,KAAQ,KAC1B,GAAK5B,EAEL,OAAI26C,EACKr5C,EAAK,WAGVqyB,EAAAA,EAAAA,IAAS3zB,EAAKU,IACTY,EAAK,mBAGV6mH,EAAAA,EAAAA,IAAiBnoH,GACZsB,EAAK,eAGVu2B,EAAAA,EAAAA,IAAc73B,GACTsB,EAAK,gBAGPA,EAAK,mBAAmB,GAC9B,CAACtB,EAAM26C,EAAer5C,IAEzB,OAAOM,EAAAA,EAAAA,KAAQ,KACb,IAAK5B,GAAQqrE,EACX,OAGF,MAAM,iBACJ+8C,EAAgB,wBAChBC,EAAuB,qBACvB//C,EAAoB,mBACpBggD,EAAkB,iBAClBC,EAAgB,iBAChB7nC,IACEr/E,EAAAA,EAAAA,MAEEy/E,EAAqBnM,EAAAA,IAAgC,CACzDljE,MAAO+2G,EAAAA,GAAc,qBAAuB,kBAC5CnmG,KAAM,kBACNq1D,QAASA,KAELgJ,EADE/lC,EACe,CAAE56C,OAAQg1B,EAAgB/R,SAAUhjB,EAAKU,IAEzC,CAAEX,OAAQC,EAAKU,IAClC,GAIE+nH,EAAeA,KACf9tE,EACF0tE,EAAwB,CAAE3nH,GAAIV,EAAKU,KAEnC0nH,EAAiB,CAAE1nH,GAAIV,EAAKU,GAAIgxE,SAAUA,GAC5C,EAGIsP,EAAYrP,EACd,CACAlgE,MAAOnQ,EAAK,gBACZ+gB,KAAM,QACNq1D,QAAS+wC,GAET,CACAh3G,MAAOnQ,EAAK,YACZ+gB,KAAM,MACNq1D,QAAS+wC,GAGPtnC,EAAe,CACnB1vE,MAAOy2G,EACP7lG,KAAM,SACNmD,aAAa,EACbkyD,QAASxD,GAGX,GAAIv5B,EACF,OAAOm9B,EAAAA,EAAAA,IAAQ,CAACgJ,EAAoBE,EAAWG,IAGjD,MAAMunC,EAAoBt3C,EAAkB,CAC1C3/D,MAAOnQ,EAAK,+BACZ+gB,KAAM,SACNq1D,QAAStD,QACP3zE,EAEEwgF,EAAa7Z,EACf,CACA31D,MAAOnQ,EAAK,mBACZ+gB,KAAM,SACNq1D,QAASA,IAAMpP,EAAqB,CAAEvoE,OAAQC,EAAKU,GAAI0mE,SAAS,KAEhE,CACA31D,MAAQ,GAAEnQ,EAAK,sBACf+gB,KAAM,OACNq1D,QAASvD,GAGb,GAAI4zC,EACF,OAAOjwC,EAAAA,EAAAA,IAAQ,CAACgJ,EAAoBE,EAAW0nC,EAAmBznC,IAGpE,MAAM0nC,EAAoB3oH,EAAK81E,aAAe91E,EAAKi2E,cAC/C,CAAExkE,MAAOnQ,EAAK,cAAe+gB,KAAM,YAAaq1D,QAASA,IAAM6wC,EAAiB,CAAE7nH,GAAIV,EAAKU,WAC3FD,EACEmoH,EAAuB5oH,EAAK81E,aAAe91E,EAAKi2E,eAAmBj2E,EAAK+2B,aAE1Et2B,EADA,CAAEgR,MAAOnQ,EAAK,gBAAiB+gB,KAAM,SAAUq1D,QAASA,IAAM6wC,EAAiB,CAAE7nH,GAAIV,EAAKU,MAGxFmoH,GAAgBC,EAAAA,EAAAA,IAAe9oH,GACjC,CAAEyR,MAAOnQ,EAAK,aAAc+gB,KAAM,YAAaq1D,QAASA,IAAM4wC,EAAmB,CAAE5nH,GAAIV,EAAKU,MAC5F,CAAE+Q,MAAOnQ,EAAK,WAAY+gB,KAAM,UAAWq1D,QAASA,IAAM4wC,EAAmB,CAAE5nH,GAAIV,EAAKU,MAGtFqoH,EADYzzD,KAAiBz9B,EAAAA,EAAAA,IAAc73B,KAASk6D,EAAAA,EAAAA,IAAYl6D,IAAUk2B,IAASA,EAAK61B,QAE1F,CAAEt6C,MAAOnQ,EAAK,qBAAsB+gB,KAAM,OAAQq1D,QAASpiB,QAC3D70D,EAEEuoH,OAA0BvoH,IAAbixE,EAEnB,OAAOoG,EAAAA,EAAAA,IAAQ,CACbgJ,EACA4nC,EACAC,EACAC,EACA5nC,GACCj1B,GAAUk1B,GACVl1B,IAAWi8D,IAA2BgB,GAAcH,EACrDE,EACA5nC,GACA,GACD,CACDnhF,EAAMk2B,EAAMk7C,EAAiB9vE,EAAM8yE,EAAwBzC,EAAUo2C,EAAY3gD,EAASryC,EAC1Fm/C,EAAcC,EAAY7e,EAAcoc,EAAU3lB,EAAQi8D,EAAwBrtE,EAAeutE,EACjG78C,GAEJ,C,kFC7IA,QAzBA,SAA6B49C,EAAuCtU,GAAgD,IAAjBuU,EAAOn8G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACxG,MAAMg3G,EAAWpP,EAAesU,EAAsC,IAAOA,EAC7EtU,IAAAA,EAAiB,CAACsU,IAElB,MAAO7E,EAAUD,IAAYvnF,EAAAA,EAAAA,MACvBusF,GAAc9jF,EAAAA,EAAAA,GAAY0+E,GAEhC,SAASqF,IACP,MAAMC,EAAkBF,EAAY9kH,QAChC6kH,EACDG,EAAqClF,GAEtCA,EAAUkF,IAEd,CAQA,OALA72F,EAAAA,EAAAA,GAAc42F,EAAoBzU,IAGlC2U,EAAAA,EAAAA,GAAgBF,EAAoBzU,GAE7ByP,CACT,C,6DCpCe,SAAS1wC,EACtB3zE,EACAwR,EACAnJ,EACAmhH,EACA73F,GAEA,MAAM,YAAE83F,IAAgBnoH,EAAAA,EAAAA,OAExBoB,EAAAA,EAAAA,KAAU,KACJivB,GACAngB,IAAcnJ,GAChBohH,EAAY,CAAEzpH,SAAQwR,UAAWA,EAAYg4G,iBAAkBA,GACjE,GACC,CAAC73F,EAAY3xB,EAAQqI,EAASmJ,EAAWg4G,GAC9C,C,wECWA,QAtBA,SACE96E,EACApb,EACAoD,GAEA,MAAM,qBAAEuwE,IAAyB3lG,EAAAA,EAAAA,MAE3BooH,GAAqB7nH,EAAAA,EAAAA,KAAQ,KACjC,MAAM8nH,GAAY3Z,EAAAA,EAAAA,IAAS/I,EAVD,KAU8C,GACxE,MAAO,KACL0iB,EAAU,CAAEj7E,OAAQA,EAAS44D,SAAU,CAACh0E,IAAY,CACrD,GACA,CAACA,EAASob,KAEbhsC,EAAAA,EAAAA,KAAU,KAEJgsC,GAAUpb,KADWoD,KAAW,YAAaA,MAAS,cAAeA,KAEvEgzF,GACF,GACC,CAACA,EAAoBhzF,EAAOpD,EAASob,GAC1C,C,2FCjBO,SAASuoC,EAA8BtF,GAC5C,MAAMnQ,GAAcC,EAAAA,EAAAA,KAIpB,OAFA/+D,EAAAA,EAAAA,KAAU,KAAMknH,EAAAA,EAAAA,IAAsBj4C,EAAUnQ,IAAc,CAACmQ,EAAUnQ,KAElEqoD,EAAAA,EAAAA,IAAcl4C,EACvB,CAEO,SAASyF,IACd,MAAM5V,GAAcC,EAAAA,EAAAA,KAIpB,OAFA/+D,EAAAA,EAAAA,KAAU,KAAMonH,EAAAA,EAAAA,IAA0BtoD,IAAc,CAACA,KAElDuoD,EAAAA,EAAAA,KACT,CAEO,SAASC,IACd,MAAMxoD,GAAcC,EAAAA,EAAAA,KAIpB,OAFA/+D,EAAAA,EAAAA,KAAU,KAAMunH,EAAAA,EAAAA,IAAsBzoD,IAAc,CAACA,KAE9C0oD,EAAAA,EAAAA,KACT,C,mFC5Be,SAASC,IAA8C,IAA1Bj5C,EAAgBlkE,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAC1D,MAAMo9G,GAA4BtmH,EAAAA,EAAAA,IAAOotE,GACnCm5C,GAAwBvmH,EAAAA,EAAAA,KAAO,GAC/B09D,GAAcC,EAAAA,EAAAA,MAEpBhvC,EAAAA,EAAAA,IAAc,KACRy+C,IACFk5C,EAA0B9lH,SAAU,EACtC,GACC,CAAC4sE,IAEJ,MAAMo5C,GAA+BxjH,EAAAA,EAAAA,IAAgB,KACnDsjH,EAA0B9lH,SAAU,EACpC+lH,EAAsB/lH,SAAU,EAChCk9D,GAAa,IAGT+oD,GAAiCzjH,EAAAA,EAAAA,IAAgB,KACrDujH,EAAsB/lH,SAAU,EAChCk9D,GAAa,IAGf,MAAO,CACLgpD,uBAAwBJ,EAA0B9lH,QAClDmmH,mBAAoBJ,EAAsB/lH,QAC1CgmH,+BACAC,iCAEJ,C,kDChCe,SAASttF,EAAqBytF,GAC3C,MAAOC,EAAUC,IAAY/tF,EAAAA,EAAAA,MA+B7B,OA7BAn6B,EAAAA,EAAAA,KAAU,KACR,SAASmoH,IACP,MAAMzqF,EAAY14B,OAAO24B,eACzB,IAAKD,GAAWI,WAAY,OAE5B,MAAM8S,EAAQlT,EAAUM,WAAW,GACnC,IAAK4S,EACH,OAIF,IADgBh+B,SAASua,cAAc66F,GAErC,OAGF,MAAM,wBAAElpB,GAA4BluD,GACpBkuD,aAAmCspB,QAC/CtpB,EACAA,EAAwBG,eAChBhH,QAAQ+vB,IAClBE,EAASt3E,EAEb,CAIA,OAFAh+B,SAAS6D,iBAAiB,kBAAmB0xG,GAEtC,IAAMv1G,SAAS+D,oBAAoB,kBAAmBwxG,EAAkB,GAC9E,CAACH,EAAeE,IAEZD,CACT,C,kDCjCA,MA4BA,EA5B4B,SAC1B/vD,EACAjpC,GAEG,IADHo5F,EAAoB/9G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,IAEpBtK,EAAAA,EAAAA,KAAU,KACR,GAAIivB,EACF,OAGF,MAAM+qC,EAAY9B,EAAat2D,QAE/B,SAAS05E,EAAaptE,GAEfA,EAAEo6G,SACLtuD,EAAWuuD,YAAcr6G,EAAE6tE,OAAS,EAChCssC,GAAsBn6G,EAAE4L,iBAEhC,CAIA,OAFAkgD,EAAUvjD,iBAAiB,QAAS6kE,EAAc,CAAEU,SAAUqsC,IAEvD,KACLruD,EAAUrjD,oBAAoB,QAAS2kE,EAAa,CACrD,GACA,CAACpjB,EAAcjpC,EAAYo5F,GAChC,C,4DCvBA,MAAMG,EAAc,IAAIjlH,IAAI,CAAC,QAAS,WAAY,WAE5C2+G,GAAWuG,EAAAA,EAAAA,KAGV,SAASrvC,EAAWsvC,IACzB1oH,EAAAA,EAAAA,KAAU,KACR,IAAK0oH,EACH,OAGF,MAAMtqB,EAAU1+F,OAAO0+F,QAAQsqB,GAc/B,OAAOxG,EAASyG,aAZhB,SAAuBz6G,IAgB3B,SAAyBA,GACvB,QAAIA,EAAEuX,kBAAkBhN,eACd+vG,EAAYzkH,IAAImK,EAAEuX,OAAO9M,QAIrC,EArBWiwG,CAAgB16G,IAIrBkwF,EAAQ/xF,SAAQ9N,IAAuB,IAArBsqH,EAAQ5zC,GAAQ12E,GCmDjC,SAA0BsqH,GAC/B,OAAQlkE,GAlCV,SAAuBkkE,EAAgBlkE,GACrC,MAAM,IACJtrC,EAAG,KAAEyvG,EAAI,KAAEC,EAAI,IAAEC,EAAG,MAAEnrD,EAAK,IAAE37C,GAC3B2mG,GACE,OACJzuB,EAAM,QAAE1gB,EAAO,QAAED,EAAO,SAAE+V,EAAUttE,IAAK+mG,GACvCtkE,EAEJ,GAAItrC,IAAQ+gF,EACV,OAAO,EAGT,GAAI4uB,GACF,IAAKtvC,IAAYD,EACf,OAAO,MAEJ,CACL,GAAIqvC,IAASpvC,EACX,OAAO,EAET,GAAIqvC,IAAStvC,EACX,OAAO,CAEX,CACA,OAAI5b,IAAU2xB,GAIPtxF,QAAQgkB,IACT+mG,EAAWhtG,gBAAkBiG,EAAIjG,eAChC0oC,EAAM2d,KAAKtqD,QAAQ,MAAO,IAAIiE,gBAAkBiG,EAAIjG,eAC7D,CAGoBitG,CA1Db,SAAqBL,GAC1B,MAAMr+F,EAAOq+F,EACV5sG,cACA4mD,MAAM,KACNhjE,KAAK2zG,GAASA,EAAKpsE,SAEhB+hF,EAA+B,CACnC9vG,IAAKmR,EAAKrT,SAAS,OACnB2xG,KAAMt+F,EAAKrT,SAAS,QACpB4xG,KAAMv+F,EAAKrT,SAAS,QACpB6xG,IAAKx+F,EAAKrT,SAAS,OACnB0mD,MAAOrzC,EAAKrT,SAAS,UAGjBiyG,EAAe,CAAC,MAAO,OAAQ,OAAQ,QAAS,OAItD,MAAO,IACFD,EACHjnG,IAJcsI,EAAKzJ,MAAMmB,IAASknG,EAAajyG,SAAS+K,KAM5D,CAoCkCmnG,CAAYR,GAASlkE,EACvD,EDpDY2kE,CAAiBT,EAAjBS,CAAyBp7G,IAC3B+mE,EAAQ/mE,EACV,GAEJ,GAE0C,GACzC,CAACw6G,GACN,CAxBA91G,SAASuH,gBAAgB1D,iBAAiB,UAAWyrG,EAASqH,a,wEED9D,MAAMC,EAAiB,IACjBC,EAAsB,IAEb,SAASC,EACtB1vF,EACAvX,EACAI,GAEA,MAAM,SAAE/a,IAAaC,EAAAA,EAAAA,OAErB/H,EAAAA,EAAAA,KAAU,KACJyiB,EACG3a,GACHvD,YAAW,MACT+9B,EAAAA,EAAAA,KAAgB,KACVtI,EAASp4B,SAASyiG,aACpBrqE,EAASp4B,QAAQ8Q,OACnB,GACA,GACD82G,IAGDxvF,EAASp4B,SAASyiG,aACpBrqE,EAASp4B,QAAQwrC,OAGfvqB,GACFte,WAAWse,EAAS4mG,GAExB,GACC,CAACzvF,EAAUlyB,EAAU2a,EAAQI,GAClC,C,0ICxBA,MAAM8mG,EAAqB,IACrBC,EAAoB,KACpBC,EAAoB,IAEX,SAAS5gH,EACtB6gH,GAKA,IAJAxnH,EAAMgI,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACNy/G,EAAWz/G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGtH,EAAAA,GAAeC,QAC7BkvG,EAAsB7nG,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EACtBgsH,EAAa1/G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAEb,MAAMzB,EAAYihH,EAAY95D,EAAAA,GAA0B85D,QAAa9rH,EAC/DisH,EAAcC,EAAAA,IAA4BH,IAAgB/mH,EAAAA,GAAek3G,YACzEp7C,GAAcC,EAAAA,EAAAA,KACd7T,GAAWi/D,EAAAA,EAAAA,GAAYC,EAAAA,KACvBnsH,GAAKosH,EAAAA,EAAAA,MACJthH,EAAcuhH,IAAmBpiH,EAAAA,EAAAA,IAASW,IAAcohH,EAAc,EAAI,GAC3EM,GAAenpH,EAAAA,EAAAA,MAEfopH,GAAiBrrH,EAAAA,EAAAA,KAAQ,KACtBmuG,EAAAA,EAAAA,KAAUzhG,IACX0+G,EAAa3oH,WAAauwG,GAAU/0F,KAAKC,MAAQktG,EAAa3oH,QAAUuwG,IAC1EmY,EAAgBz+G,EAClB,GACCg+G,GAAmB,IACrB,CAAC1X,IAiDJ,OA/CAnyG,EAAAA,EAAAA,KAAU,MACHsC,GAAUwnH,IACRjhH,EAmBMohH,GACT1lH,YAAW,KACT+lH,EAAgBX,EAAmB,GAClCC,IArBHU,EAAgB,GAEZC,EAAa3oH,SACfouD,EAAAA,GAA2Bw6D,GAG7BD,EAAa3oH,QAAUwb,KAAKC,MAE5B2yC,EAAAA,GAAkB85D,EAAWC,EAAaC,EAAeQ,EAAgBvsH,GAAI86D,MAAK,KAChF,MAAM0xD,EAAYrtG,KAAKC,MAAQktG,EAAa3oH,QAC5C2oH,EAAa3oH,aAAU5D,GAElBm0G,GAASsY,GAAatY,EACzBrzC,IAEAv6D,WAAWu6D,EAAaqzC,EAAQsY,EAClC,KAON,GACC,CACDnoH,EAAQwnH,EAAWjhH,EAAWkhH,EAAaE,EAAa9X,EAAOqY,EAAgBR,EAAe/rH,EAAIitD,KAGpGlrD,EAAAA,EAAAA,KAAU,KACJsC,GAAUioH,EAAa3oH,UACzBouD,EAAAA,GAA2Bw6D,GAC3BF,EAAgB,GAChBC,EAAa3oH,aAAU5D,EACzB,GACC,CAACwsH,EAAgBloH,KAEpBtC,EAAAA,EAAAA,KAAU,IACD,KACD8pH,GACF95D,EAAAA,GAA2B85D,EAAW7rH,EACxC,GAED,CAACA,EAAI6rH,IAED,CAAEjhH,YAAWE,eACtB,C,wECpFA,MAAM2hH,EAAqB,IAC3B,IAAIC,EAEW,SAASpmG,EACtB9B,EAAiBI,GACjB,IAD8C+nG,EAAgBtgH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGogH,EAAoBz7F,EAAU3kB,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAE/F,MAAMugH,GAAgBzpH,EAAAA,EAAAA,KAAO,GAEvBkjB,GAAkBlgB,EAAAA,EAAAA,IAAgB,KACtCymH,EAAcjpH,SAAU,CAAI,IAqC9B,OAlCA5B,EAAAA,EAAAA,KAAU,KACJ2qH,IACFjjC,aAAaijC,GACbA,OAAe3sH,IAGbykB,GAAWyE,EAAAA,IAAiB+H,IAC9B07F,EAAe3lH,OAAOT,YAAW,KAC1BsmH,EAAcjpH,SACjBihB,GACF,GACoB,EAAnB+nG,GACL,GACC,CAAC37F,EAAYxM,EAAQmoG,EAAkB/nG,IAqBnC,EAnBkBze,EAAAA,EAAAA,IAAgB,KACvCymH,EAAcjpH,SAAU,CAAI,KAGLwC,EAAAA,EAAAA,IAAgB,KACvCymH,EAAcjpH,SAAU,EAEpB+oH,IACFjjC,aAAaijC,GACbA,OAAe3sH,GAGjB2sH,EAAe3lH,OAAOT,YAAW,KAC1BsmH,EAAcjpH,SACjBihB,GACF,GACC+nG,EAAiB,IAGsBtmG,EAC9C,C,mFC9Ce,SAASwmG,EAA0BlpH,EAAYgI,GAC5D,MAAMmhH,GAAOrwF,EAAAA,EAAAA,GAAY94B,GAAS,GAC5BwwG,GAAahxG,EAAAA,EAAAA,MACb09D,GAAcC,EAAAA,EAAAA,KAEdisD,EAAmBppH,QAEnBqpH,EAAgBF,QAiBtB,OAfIC,GAAoB5Y,EAAWxwG,UACjC8lF,aAAa0qB,EAAWxwG,SACxBwwG,EAAWxwG,aAAU5D,IAGvB+xB,EAAAA,EAAAA,IAAc,KAERnmB,IAAaohH,GAAoBC,IAAkB7Y,EAAWxwG,UAChEwwG,EAAWxwG,QAAUoD,OAAOT,YAAW,KACrC6tG,EAAWxwG,aAAU5D,EACrB8gE,GAAa,GACZl1D,GACL,GACC,CAACA,EAAUk1D,EAAaksD,EAAkBC,IAEpC7Y,EAAWxwG,SAAYgI,IAAYohH,EAA6BD,EAAVnpH,CACjE,C,6DCvBe,SAASw/G,EACtB8J,EACAC,GAEA,MAAMrsD,GAAcC,EAAAA,EAAAA,KACdqsD,GAAahqH,EAAAA,EAAAA,IAAO8pH,GACpBrL,GAAQz+G,EAAAA,EAAAA,IAAO+pH,GAEfE,GAAWrsH,EAAAA,EAAAA,KAAa2sB,IAC5Bk0F,EAAMj+G,QAAUwpH,EAAWxpH,QAAQi+G,EAAMj+G,QAAS+pB,GAClDmzC,IACO+gD,EAAMj+G,UACZ,IAEH,MAAO,CACLi+G,EAAMj+G,QACNypH,EAEJ,C,kDCxBe,SAAS9iF,EAAgB0wE,EAAYwI,EAAmBI,GAAkC,IAAhBN,EAASj3G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,GACnG,OAAO8vE,EAAAA,EAAAA,IAAsBx8D,IAC3BA,GAAI,GAEH2jG,EAAMtI,EAAIwI,EAASI,EACxB,C,+HCEA,MAQA,EAR0Cz/G,IACxC,MAAM,OAAEqgB,GAAWrgB,EACbkpH,GAAgB9rG,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,iBAAkB+C,GAGvE,OAAO6oG,EAAgB9qH,EAAAA,GAAAC,cAAC6qH,EAAkBlpH,QAAYpE,CAAS,ECmDjE,EArDoBw+B,CAClBvH,EACAs2F,EACAC,KAEA,MAAM3sH,GAAOC,EAAAA,EAAAA,MACN2sH,EAAaC,IAAkBxjH,EAAAA,EAAAA,MAEhCumC,GAAwBrqC,EAAAA,EAAAA,IAAgB,SAAC2B,GAAqC,IAAzB4lH,EAAYrhH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAErE,MAAMsjC,EAAc9iC,KAAK7J,MAAM6J,KAAK2B,IAAI1G,EAAK23D,UAAWtgD,KAAKC,MAAQ,KAAa,MAC7EsuG,EAAe,GAAIC,EAAAA,EAAAA,OACxBH,IAAc79E,GACd89E,OAAe1tH,EACjB,IAEM6tH,GAAmCznH,EAAAA,EAAAA,IAAgB,KACvDqqC,EAAsB,IAAIrxB,KAA6B,IAAxBk2B,EAAAA,MAA+B,EAAK,IAG/Dw4E,GAAsB1nH,EAAAA,EAAAA,IAAgB,KAC1CsnH,OAAe1tH,GACfutH,KAAY,IAGRjvF,GAAkBl4B,EAAAA,EAAAA,IAAiB2nH,IACvCL,GAAe,IAAMK,GAAc,IAG/B55E,EAAuBq5E,EAAS,IAAIpuG,KAAc,IAATouG,GAAiB,IAAIpuG,KACpE+0B,EAAqBC,WAAW,GAChCD,EAAqBE,gBAAgB,GAErC,MAAMC,EAAmB,IAAIl1B,KAiB7B,OAhBAk1B,EAAiBC,YAAYD,EAAiBE,cAAgB,GAgBvD,CAAClW,EAbN97B,EAAAA,GAAAC,cAAC6qH,EAAa,CACZ7oG,OAAQvkB,QAAQutH,GAChBO,gBAAc,EACdC,WAAY95E,EAAqBurB,UACjCwuD,OAAOC,EAAAA,EAAAA,IAAc75E,GACrB85E,cAAY,EACZC,kBAAmBp3F,EAAyBp2B,EAAK,gCAA6Bb,EAC9E6kB,QAASipG,EACT1nE,SAAU3V,EACV69E,oBAAqBr3F,EAAyB42F,OAAmC7tH,IAInD,C,mFCrDpC,MASA,EAT6Bq9B,CAAC/9B,EAAiBijB,KACtCphB,EAAAA,EAAAA,KAAQ,KACNmuG,EAAAA,EAAAA,KAAU3hF,IACVruB,GAAWijB,IAChB3hB,EAAAA,EAAAA,MAAaw8B,kBAAkB,CAAE99B,SAAQijB,WAAUoL,UAAS,GAC3D+W,EAAAA,MACF,CAACplC,EAAQijB,G,4HCLd,MAAMgsG,EAAqB,IAEpB,SAASC,EAAargE,EAAuCx8B,EAAcusB,GA+EhF,OA9EAl8C,EAAAA,EAAAA,KAAU,KACR,IAAK2vB,IAAQw8B,EAASvqD,QAAS,OAC/B,MAAM6qH,EAAmBC,IACnBjlH,EAAQ0kD,EAASvqD,QAEvB,IAAKsgC,EAAAA,KAAcga,IAAauwE,GAAkBE,gBAAgBzwE,GAChE,OAEF,MAAM0wE,EAAc,IAAIH,EAaxB,SAASI,IACP,IAAKl9F,IAAQusB,EAAU,OAEvB,MAAM4wE,EAAeF,EAAYG,gBAAgB7wE,GAC3Cy9D,GAASC,EAAAA,EAAAA,GAAsBjqF,GAiBrCm9F,EAAar2G,iBAAiB,aAf9B,WACEkjG,EAAOqT,OACJj0D,MAAKx6D,IAGA,IAHC,MACL4jD,EAAK,KACL8qE,GACD1uH,EACgC,SAA3BquH,EAAYM,aACZD,EACFE,EAAYP,GAGdQ,EAAaN,EAAc3qE,GAAM,GAEvC,IAIAw3D,EAAOqT,OACJj0D,MAAKj5D,IAGA,IAHC,MACLqiD,EAAK,KACL8qE,GACDntH,EACKmtH,GAAmC,SAA3BL,EAAYM,cAtC5B5qF,EAAAA,EAAAA,KAAgB,KACd76B,EAAMjD,MAAM02E,QAAU,QACtB32E,YAAW,MACT+9B,EAAAA,EAAAA,KAAgB,MACdi2E,EAAAA,EAAAA,IAAY9wG,EAAO,CAAEuwD,QAAS,KAAM,GACpC,GACDu0D,EAAmB,IAkCpBa,EAAaN,EAAc3qE,GAAM,GAEvC,CAYA,OAVAyqE,EAAYn2G,iBAAiB,aAAco2G,EAAc,CAAExyB,MAAM,KAEjE/3D,EAAAA,EAAAA,KAAgB,MACdi2E,EAAAA,EAAAA,IAAY9wG,EAAO,CACjByzE,QAAS,OACTljB,QAAS,MAEXvwD,EAAM/C,IAAM8X,IAAIy/E,gBAAgB2wB,EAAY,IAGvC,MACLtqF,EAAAA,EAAAA,KAAgB,KACd,MAAM59B,EAAM+C,EAAM/C,KAClB61G,EAAAA,EAAAA,GAAY9yG,GACZmlH,EAAYj2G,oBAAoB,aAAck2G,GACf,SAA3BD,EAAYM,YACdC,EAAYP,GAEdpwG,IAAImgF,gBAAgBj4F,EAAI,GACxB,CACH,GACA,CAACw3C,EAAUvsB,EAAKw8B,IAEZ8uD,EAA0B/+D,EACnC,CAEO,SAAS++D,EAA0B/+D,GACxC,SAAKha,EAAAA,KAAcga,IACZh+C,QAAQwuH,KAAkBC,gBAAgBzwE,GACnD,CAEA,SAASkxE,EAAaN,EAA4BO,GAChD,IACEP,EAAaM,aAAaC,EAC5B,CAAE,MAAOh1G,GACHF,EAAAA,KAEFC,QAAQk1G,KAAK,mCAAoCj1G,EAErD,CACF,CAEA,SAAS80G,EAAYP,GACnB,IACEA,EAAYO,aACd,CAAE,MAAO90G,GACHF,EAAAA,KAEFC,QAAQk1G,KAAK,gCAAiCj1G,EAElD,CACF,CAEA,SAASq0G,IACP,MAAI,uBAAwB1nH,OAEnBuoH,mBAEL,gBAAiBvoH,OACZwoH,iBADT,CAIF,C,wEC7He,SAASnkF,EAAgB2vE,GACtC,MAAMyU,GAAerpH,EAAAA,EAAAA,GAAgB40G,IAErCh5G,EAAAA,EAAAA,KAAU,KAAM0tH,EAAAA,EAAAA,IAAeD,IAAe,CAACA,GACjD,C,ubC0EA,MAAME,EAKJt7B,WAAAA,CACS5sE,EACCuxB,EACA4uC,GACR,KAHOngE,OAAAA,EAAc,KACbuxB,SAAAA,EAAsC,KACtC4uC,QAAAA,EAAgB2M,EAAA,qBAPF,IAAI2C,KAA4B3C,EAAA,+BAEtB,IAAI2C,IAOtC,CAGOrC,OAAAA,GACP,CAEA91E,IAAAA,GAAqB,QAAA6wG,EAAAtjH,UAAA1J,OAAb8tC,EAAI,IAAA7jC,MAAA+iH,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJn/E,EAAIm/E,GAAAvjH,UAAAujH,GACVr7B,KAAKs7B,YAAY,CACfnxG,KAAM,OACN+xB,QAEJ,CAEAq/E,OAAAA,CAAQC,GACN,MAAM,cAAEC,EAAa,wBAAEC,GAA4B17B,KAE7C1jF,GAAYq/G,EAAAA,EAAAA,KACZrjF,EAA0B,CAC9BnuB,KAAM,aACN7N,eACGk/G,GAGCI,EAAe,CAAEt/G,aAGjBu/G,EAAwB,IAAI9zG,SAAQ,CAACwE,EAASC,KAClDtf,OAAO4uH,OAAOF,EAAc,CAAErvG,UAASC,UAAS,IAGlD,GAAqD,mBAA1C8rB,EAAQ4D,KAAK5D,EAAQ4D,KAAK9tC,OAAS,GAAmB,CAC/DkqC,EAAQyjF,cAAe,EAEvB,MAAMvV,EAAWluE,EAAQ4D,KAAK8/E,MAC9BJ,EAAapV,SAAWA,EACxBkV,EAAwBl3B,IAAIgiB,EAAUoV,EACxC,CAeA,OAbAH,EAAcj3B,IAAIloF,EAAWs/G,GAC7BC,EACGI,OAAM,KAAe,IACrBC,SAAQ,KACPT,EAAc54B,OAAOvmF,GAEjBs/G,EAAapV,UACfkV,EAAwB74B,OAAO+4B,EAAapV,SAC9C,IAGJxmB,KAAKs7B,YAAYhjF,GAEVujF,CACT,CAEAM,cAAAA,CAAeC,GACbA,EAAiBC,YAAa,EAE9B,MAAM,UAAE//G,GAAc0jF,KAAK07B,wBAAwBrzF,IAAI+zF,IAAqB,CAAC,EACxE9/G,GAIL0jF,KAAKs7B,YAAY,CACfnxG,KAAM,iBACN7N,aAEJ,CAEAggH,SAAAA,CAAUrkH,GACR,MAAM,cAAEwjH,EAAa,QAAEroC,GAAY4M,KACnC,GAAI/nF,EAAKm7E,UAAYA,EAOrB,GAHkB,WAAdn7E,EAAKkS,MAAqB61E,KAAKx7C,UACjCw7C,KAAKx7C,SAASvsC,EAAK2/B,QAEH,mBAAd3/B,EAAKkS,KAA2B,CAClC,MAAMyxG,EAAeH,EAAcpzF,IAAIpwB,EAAKqE,WACxCs/G,IACE3jH,EAAK4N,MACP+1G,EAAapvG,OAAOvU,EAAK4N,OAEzB+1G,EAAarvG,QAAQtU,EAAKskH,UAGhC,MAAO,GAAkB,mBAAdtkH,EAAKkS,KAA2B,CACzC,MAAMyxG,EAAeH,EAAcpzF,IAAIpwB,EAAKqE,WAC5Cs/G,GAAcpV,cAAcvuG,EAAKukH,aACnC,MAAO,GAAkB,mBAAdvkH,EAAKkS,KACd,MAAM,IAAIk6E,MAAMpsF,EAAK4N,OAAO1S,QAEhC,CAEQmoH,WAAAA,CAAYrjH,GAClBA,EAAKm7E,QAAU4M,KAAK5M,QAEpB4M,KAAK/sE,OAAOqoG,YAAYrjH,EAC1B,EAGK,SAASwkH,EACdC,EACAl4E,EACA4uC,GAEA,MAAMupC,EAAY,IAAIxB,EAAkBuB,EAAQl4E,EAAU4uC,GAE1D,SAASwpC,EAAa7wH,GAA+B,IAA9B,KAAEkM,GAA0BlM,EACjD4wH,EAAUL,UAAUrkH,EACtB,CAQA,OANAykH,EAAOz4G,iBAAiB,UAAW24G,GAEnCD,EAAUt8B,QAAU,KAClBq8B,EAAOv4G,oBAAoB,UAAWy4G,EAAc,EAG/CD,CACT,C,mFC9MA,MAAME,EAAmB,IAEnBC,EAAsC,IAAIp6B,IAEjC,SAASq6B,EAAwBv1D,EAAwB7rD,GAA2C,IAA7BvE,EAAQU,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG+kH,GAC1F3tH,EAAAA,EAAAA,MAA0BrC,EAAAA,EAAAA,SAC7BuK,EAAW,GAGb,MAAMzH,EAA0C,QAAlC63D,EAAUjhD,aAAa,QAC/B,WACJwvG,EAAY/9D,YAAaglE,EAAc,YAAEC,EAAa52G,SAAS,SAAE62G,IAC/D11D,EAEJ,IAAI75C,EAAOhS,EAAOo6G,EAElB,GAAIpoG,EAAO,EAAG,CACZ,MAAMwvG,GAAiBpH,GAAcpmH,GAAS,EAAI,GAClDge,EAAOrV,KAAK2B,IAAI0T,EAAMwvG,EACxB,MAAO,GAAIxvG,EAAO,EAAG,CACnB,MAAMwvG,EAAgBF,GAAelH,EAAaiH,GAClDrvG,EAAOrV,KAAKC,IAAIoV,EAAMwvG,EACxB,CAEA,GAAa,IAATxvG,EACF,OAAO5F,QAAQwE,UAGb2wG,GAAYJ,EAASvrH,IAAI2rH,IAC3BJ,EAASz0F,IAAI60F,EAAbJ,GAGF,MAAM7pG,EAAS8iG,EAAapoG,EAE5B,OAAO,IAAI5F,SAAewE,KACxBujB,EAAAA,EAAAA,KAAgB,KACd,GAAiB,IAAb14B,EAGF,OAFAowD,EAAUuuD,WAAa9iG,OACvB1G,IAIF,IAAI6wG,GAAY,EAChB,MAAM3xH,EAAK6M,KAAKm4D,SAASz2B,WACzBwtB,EAAUnhD,QAAQ62G,SAAWzxH,EAC7BqxH,EAASt4B,IAAI/4F,GAAI,KACf2xH,GAAY,CAAI,IAGlB51D,EAAUx1D,MAAMqrH,eAAiB,OAEjC,MAAMC,EAAU1yG,KAAKC,OAErB0yG,EAAAA,EAAAA,KAAQ,KACN,GAAIH,EAAW,OAAO,EAEtB,MAAMI,EAAIllH,KAAKC,KAAKqS,KAAKC,MAAQyyG,GAAWlmH,EAAU,GAEhDqmH,EAAc9vG,GAAQ,EAgBpC,SAAoB6vG,GAClB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAlBwCE,CAAWF,IAU3C,OATAh2D,EAAUuuD,WAAaz9G,KAAK7J,MAAMwkB,EAASwqG,GAEvCD,GAAK,IACPh2D,EAAUx1D,MAAMqrH,eAAiB,UAC1B71D,EAAUnhD,QAAQ62G,SACzBJ,EAASj6B,OAAOp3F,GAChB8gB,KAGKixG,EAAI,CAAC,GACX1tF,EAAAA,GAAgB,GACnB,GAEN,C,kJC3DA,IACI6tF,EADA9uH,GAAc,EAGH,SAASqrG,IAAsD,QAAAkhB,EAAAtjH,UAAA1J,OAArC8tC,EAAI,IAAA7jC,MAAA+iH,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJn/E,EAAIm/E,GAAAvjH,UAAAujH,GAC3CsC,EAAczhF,EAAK9uC,MAAM,EAAG,GAE5B,MAAMwwH,EAASC,KAAwBF,GAGvC,GAD+BzhF,EAAK,GAElC,OAAO0hF,GAGT9tF,EAAAA,EAAAA,IAAgB8tF,EAElB,CAEO,SAASE,IACTjvH,KAILkvH,EAAAA,EAAAA,OAEA3xG,EAAAA,EAAAA,KAAe,MACb0jB,EAAAA,EAAAA,IAAgB+tF,KAAwBF,GAAc,IAE1D,CAEA,SAASE,EACPr2D,EACAvpB,EACAxE,GAMA,IALAukF,EAAMlmH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,EACTmmH,EAAWnmH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGomH,EAAAA,IACdC,EAA+BrmH,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAC/B4yH,EAAsBtmH,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EACtB6yH,EAAoCvmH,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAGlC2yH,IAAmBG,EAAAA,GAAeC,SAC9BrvH,EAAAA,EAAAA,MAA0BrC,EAAAA,EAAAA,SAE9BuxH,EAAgB,GAGlB,MAAQzhD,UAAW6hD,EAAYzwD,aAAc0wD,GAAkBxgF,GACvD0qC,UAAW+1C,EAAkB3wD,aAAc4wD,EAAe,aAAEr1C,GAAiB9hB,EAC/Eo3D,EAAwBP,GAA8B72D,EAAUnhD,QAAQw4G,aAC1EnmF,OAAO8uB,EAAUnhD,QAAQw4G,cACzBF,EAEJ,IAAIG,EACJ,OAAQrlF,GACN,IAAK,QACHqlF,EAAYN,EAAaR,GAAW97B,EAAAA,GAAa,EAAI,GACrD,MACF,IAAK,MACH48B,EAAYN,EAAaC,EAAgBT,EAAUY,EACnD,MAEF,IAAK,UACL,IAAK,SACL,IAAK,cACHE,EAAWL,EAAgBG,EACtBJ,EAAaC,EAAgB,EAAIG,EAAwB,EACzDJ,EAAaR,EAItB,MAAMe,EA8DR,SACEv3D,EACAs3D,GAGA,IAFAb,EAAWnmH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGomH,EAAAA,IACdC,EAA+BrmH,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAE/B,MAAM,UAAEm9E,GAAcnhB,EAEtB,QAAuBh8D,IAAnB2yH,EAA8B,CAChC,MAAMpqF,EAAS+qF,EAAWn2C,EAE1B,GAAI50C,GAAUkqF,EACZ,OAAOt1C,GAAa50C,EAASkqF,GACxB,GAAIlqF,EAASkqF,EAClB,OAAOt1C,GAAa50C,EAASkqF,EAEjC,KAAO,IAAIE,IAAmBG,EAAAA,GAAeU,GAC3C,OAAOF,EAAWb,EACb,GAAIE,IAAmBG,EAAAA,GAAeW,KAC3C,OAAO3mH,KAAK2B,IAAI,EAAG6kH,EAAWb,EAChC,CAEA,OAAOt1C,CACT,CArFqBu2C,CAAoB13D,EAAWs3D,EAAUb,EAAaE,GAEzE,IAAIxwG,EAAOmxG,EAAWC,EACtB,GAAIpxG,EAAO,EAAG,CACZ,MAAMwvG,GAAiB4B,EACvBpxG,EAAOrV,KAAK2B,IAAI0T,EAAMwvG,EACxB,MAAO,GAAIxvG,EAAO,EAAG,CACnB,MAAMwvG,EAAgB7zC,GAAgBy1C,EAAaH,GACnDjxG,EAAOrV,KAAKC,IAAIoV,EAAMwvG,EACxB,CAEA,MAAMgC,EAAU7mH,KAAKy3E,IAAIpiE,GAEzB,MAAO,KACL,GAAIwxG,EAAU,EAKZ,YAJIT,IAAqBK,IACvBv3D,EAAUmhB,UAAYo2C,IAM1B,MAAM9rG,EAAS8rG,EAAapxG,EAE5B,GAAsB,IAAlBywG,EAEF,YADA52D,EAAUmhB,UAAY11D,GAIxBpkB,GAAc,EAEd,MAAM6uH,EAAayB,GAAWC,EAAAA,IAA4CC,EAAkBC,EACtFloH,EAAWgnH,GACfmB,EAAAA,IACGJ,EAAUjB,EAAAA,KAA6BsB,EAAAA,IAA2BD,EAAAA,KAEjEjC,EAAU1yG,KAAKC,MACf40G,GAAuBjyC,EAAAA,EAAAA,OAE7BkyC,EAAAA,EAAAA,KAAc,KACZ,MAAMlC,EAAIllH,KAAKC,KAAKqS,KAAKC,MAAQyyG,GAAWlmH,EAAU,GAChDqmH,EAAc9vG,GAAQ,EAAI+vG,EAAWF,IACrCz0C,EAAezwE,KAAK7J,MAAMwkB,EAASwqG,GAWzC,OATAj2D,EAAUmhB,UAAYI,EAEtBl6E,EAAc2uH,EAAI,GAAKz0C,IAAiB91D,EAEnCpkB,IACH8uH,OAAcnyH,EACdi0H,KAGK5wH,CAAW,GACjBihC,EAAAA,GAAgB,CAEvB,CAEO,SAAS6vF,IACd,OAAO9wH,CACT,CA2BA,SAASwwH,EAAgB7B,GACvB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAEA,SAAS8B,EAAe9B,GACtB,OAAO,GAAM,EAAIA,IAAM,GACzB,C,kJC7JA,MAAMoC,EAAS,IAAIl9B,IAEnB,IAGIm9B,EAHAC,EAAwB,GACxBC,EAAwB,GA0D5B,SAASC,EAASxQ,EAAkByQ,GAClC,MAAMC,EAAeL,GAAkBD,EAAOv3F,IAAIw3F,GAC9CK,IACFA,EAAaprH,MAAMgY,QACnBozG,EAAaprH,MAAMmmD,YAAc,EAC7BilE,EAAarQ,eAAeqQ,EAAarQ,iBAG/C,MAEMsQ,EAAcC,EAAgB5Q,GAFrBpkH,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAa4kH,YAAYn+G,QAAU4C,EAAAA,GAAY6G,OAExBkjH,GACrD,IAAKE,EACH,OAGF,IAAKP,EAAOruH,IAAI4uH,GAId,YAFA/zH,EAAAA,EAAAA,MAAai0H,iBAAgBC,EAAAA,EAAAA,IAAgBC,EAAaJ,GAAah3D,aAKzE,MAAMq3D,EAAYZ,EAAOv3F,IAAI83F,GAEzBK,EAAU5Q,aACZ4Q,EAAU5Q,cAGZiQ,EAAiBM,EAEbK,EAAU1rH,MAAM5C,MAClBkuF,EAAAA,EAAAA,GAASogC,EAAU1rH,MAEvB,CAEO,SAASqgG,IACd,MAAM+qB,EAAeL,GAAkBD,EAAOv3F,IAAIw3F,GAC9CK,GACFA,EAAaprH,MAAMgY,OAEvB,CAEO,SAASsjG,EACdZ,EACAp5G,EACAqsE,EACAmtC,EACAC,GAEA,IAAK+P,EAAOruH,IAAIi+G,GAAU,CACxB,MAAMiR,EAxGV,SACEjR,EACArlG,EACAylG,EACAC,GAEA,MAAM/6G,EAAQ,IAAIijG,MAElB,SAAS2oB,EAAYrQ,GACnB,OAAQ30G,IACDkkH,EAAOruH,IAAIi+G,MAIZsC,EAAAA,EAAAA,GAAwBh9G,IAI5B8qH,EAAOv3F,IAAImnF,GAAUE,SAAS71G,SAAS4oE,IACrCA,EAAQ4tC,EAAW30G,EAAE,IACrB,CAEN,CAoBA,OAlBA5G,EAAMmP,iBAAiB,aAAcy8G,EAAY,iBACjD5rH,EAAMmP,iBAAiB,OAAQy8G,EAAY,WAC3C5rH,EAAMmP,iBAAiB,QAASy8G,EAAY,YAC5C5rH,EAAMmP,iBAAiB,YAAay8G,EAAY,gBAChD5rH,EAAMmP,iBAAiB,aAAcy8G,EAAY,iBACjD5rH,EAAMmP,iBAAiB,UAAWy8G,EAAY,cAC9C5rH,EAAMmP,iBAAiB,SAAS,KACzB27G,EAAOruH,IAAIi+G,MAIZsC,EAAAA,EAAAA,GAAwBh9G,IAI5BkrH,EAASxQ,GAAQ,IAGZ,CACL16G,QACAqV,OACAsmG,MAAO,IAAIkQ,MAAM7rH,EAAO,CACtBuzB,IAAKA,CAACpV,EAAQvD,IAAgCuD,EAAOvD,KAEvDggG,SAAU,GACVE,cACAC,gBAEJ,CAoDkB+Q,CAAYpR,EAASp5G,EAAWw5G,EAAaC,GAC3D+P,EAAOp7B,IAAIgrB,EAASiR,GAwIxB,SAAyBA,EAAcjR,GAClB,UAAfiR,EAAMt2G,MAAqB41G,EAAWp7G,SAAS6qG,KACjDuQ,EAAWvwH,KAAKggH,GAChBuQ,EAAWt0D,KAAKo1D,IAGC,UAAfJ,EAAMt2G,MAAqB21G,EAAWn7G,SAAS6qG,KACjDsQ,EAAWtwH,KAAKggH,GAChBsQ,EAAWr0D,KAAKo1D,GAEpB,CAjJIC,CAAgBL,EAAOjR,EACzB,CACA,MAAM,MAAE16G,EAAK,MAAE27G,EAAK,SAAEf,GAAakQ,EAAOv3F,IAAImnF,GAI9C,OAFAE,EAASlgH,KAAKizE,GAEP,CACLrI,IAAAA,CAAKloE,GACH,IAAK4C,EAAMqrF,OAAQ,OACnB,MAAM+/B,EAAeL,GAAkBD,EAAOv3F,IAAIw3F,GAC9CK,GAAgBL,IAAmBrQ,IACrC0Q,EAAaprH,MAAMgY,QACnBozG,EAAaprH,MAAMmmD,YAAc,GAC7B62D,EAAAA,EAAAA,GAAwBoO,EAAaprH,SACvCorH,EAAaprH,MAAMuR,QAAQ06G,sBAAwB,QAEjDb,EAAarQ,eAAeqQ,EAAarQ,iBAG/CgQ,EAAiBrQ,EAEZ16G,EAAM5C,MACT4C,EAAM5C,IAAMA,EACZ4C,EAAM8yG,QAAU,OAEZ11G,EAAIyS,SAAS,kBAAoB+qB,EAAAA,YAC5B56B,EAAMuR,QAAQ06G,uBACrBC,EAAAA,EAAAA,GAA4BlsH,MAIhCsrF,EAAAA,EAAAA,GAAStrF,GA+Hf,SAAsBqV,EAAqBqlG,GACzC,IAAIpkH,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAao0H,aAAaC,iBAAmBC,EAAAA,GAAoBC,MAAO,OAC3F,MAAM,OAAEt2H,IAAWw1H,EAAAA,EAAAA,IAAgBC,EAAa/Q,GAASrmD,YACnDk4D,GAAersG,EAAAA,EAAAA,MAAyBnoB,EAAAA,EAAAA,QAAc/B,OACtDw2H,EAAe71H,GACnBA,EAAGkoC,WAAY,MAAK7oC,MAAcu2H,GAAgB51H,EAAGkoC,WAAY,MAAK0tF,KAG3D,UAATl3G,IACF41G,EAAaA,EAAWxyH,OAAO+zH,IAGpB,UAATn3G,IACF21G,EAAaA,EAAWvyH,OAAO+zH,GAEnC,CA7IMC,CAAanrH,EAAWo5G,EAC1B,EAEA1iG,KAAAA,GACM+yG,IAAmBrQ,GACrB16G,EAAMgY,OAEV,EAEAR,IAAAA,GACE,GAAIuzG,IAAmBrQ,EAAS,CAE9B,MAAMwC,EAAUl9G,EAAM5C,IACtB4C,EAAMgY,SAENgf,EAAAA,EAAAA,KAAoB,KAClBh3B,EAAM5C,IAAM,GACZ4C,EAAM5C,IAAM8/G,CAAO,GAEvB,CACF,EAEA76G,cAAAA,CAAeg7G,GACT0N,IAAmBrQ,IACjB16G,EAAM0sH,SACR1sH,EAAM0sH,SAASrP,GAEfr9G,EAAMmmD,YAAck3D,EAG1B,EAEA7B,SAAAA,CAAUrkG,GACJ4zG,IAAmBrQ,IACrB16G,EAAMmX,OAASA,EACfnX,EAAMumD,OAAQ,EAElB,EAEAk1D,eAAAA,CAAgBkR,GACV5B,IAAmBrQ,IACrB16G,EAAM68G,aAAe8P,EAEzB,EAEAjR,WAAAA,CAAYn1D,GAERvmD,EAAMumD,WADM7vD,IAAV6vD,GACavmD,EAAMumD,MAEPA,CAElB,EAEAo1D,QAEAG,gBAAAA,GACEoP,EAASxQ,EACX,EAEAlyD,OAAMA,KACI8iE,EAAgB5Q,GAASpkH,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAa4kH,YAAYn+G,QAG3E+pD,QAAOA,KACG+iE,EAAgB5Q,GAASpkH,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAa4kH,YAAYn+G,QAAQ,GAGnFu9G,oBAAAA,GACEmP,EAASxQ,GAAS,EACpB,EAEAnvB,OAAAA,GAAuC,IAA/BqhC,EAAqB5pH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAC3B,MAAM2oH,EAAQb,EAAOv3F,IAAImnF,GACpBiR,IAILA,EAAM/Q,SAAW+Q,EAAM/Q,SAASniH,QAAQo0H,GAAMA,IAAMl/C,IAE/Cg+C,EAAM/Q,SAASthH,SAClBqyH,EAAM3rH,MAAMgY,QACZ8yG,EAAO/8B,OAAO2sB,GAEVkS,GAgCZ,SAAyBjB,EAAcjR,GACrC,MAAMoS,EAAiB7/G,GAAgBA,IAAOytG,EAC3B,UAAfiR,EAAMt2G,OACR41G,EAAaA,EAAWxyH,OAAOq0H,IAGd,UAAfnB,EAAMt2G,OACR21G,EAAaA,EAAWvyH,OAAOq0H,GAEnC,CAxCUC,CAAgBpB,EAAOjR,GAGrBA,IAAYqQ,IACdA,OAAiBr0H,IAGvB,EAEJ,CAkDA,SAAS40H,EAAgBhY,GAA2E,IAAvD90G,EAAMwE,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG5B,EAAAA,GAAY6G,OAAQkjH,EAAwBnoH,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAChG,MACM8gH,EAlDR,SAAuBmU,GACrB,OAAQA,EAAMt2G,MACZ,IAAK,QAAS,OAAO41G,EACrB,IAAK,QAAS,OAAOD,EACrB,QAAS,OAEb,CA4CgBgC,CADAlC,EAAOv3F,IAAI+/E,IAEzB,IAAKkE,EAAO,OAEZ,GAAIh5G,IAAW4C,EAAAA,GAAY8G,OAAQ,CACjC,MAAMs0D,EAAQg7C,EAAMnpG,QAAQilG,GAC5B,GAAI92C,EAAQ,EAAG,OAEf,OAAOg7C,EAAMh7C,GADK2uD,GAAkB,EAAI,GAE1C,CAEA,MAAM,OAAEn1H,IAAWw1H,EAAAA,EAAAA,IAAgBC,EAAanY,GAAWj/C,YACrD44D,EAAYzV,EAAM/+G,QAAQ9B,GAAOA,EAAGkoC,WAAY,MAAK7oC,OACrDwmE,EAAQywD,EAAU5+G,QAAQilG,GAChC,GAAI92C,EAAQ,EAAG,OACf,IAAIlT,EAAY9qD,IAAW4C,EAAAA,GAAY6G,QAAU,EAAI,EAErD,OADIkjH,IAAgB7hE,IAAc,GAC3B2jE,EAAUzwD,EAAQlT,EAC3B,CAEO,SAAS9mD,EAAYnE,GAC1B,MAAMuc,GAAMsyG,EAAAA,EAAAA,IAAoB7uH,GAChC,GAAKuc,EAGL,MAAQ,GAAEA,KAAOvc,EAAQI,MAC3B,CAEA,SAASgtH,EAAa/Q,GAGpB,MAAO,CACLrmD,WAHiBqmD,EAAQrqG,MAAM,qBAAsB,GAIrD5R,KAHWmlC,OAAO82E,EAAQn/C,MAAM,KAAK2rD,OAKzC,CAGA,SAAS6E,EAAkBoB,EAAeC,GACxC,IAAKD,IAAQC,EAAK,OAAO,EACzB,MAAQ3uH,KAAM4uH,EAASh5D,WAAYi5D,GAAW7B,EAAa0B,IACnD1uH,KAAM8uH,EAASl5D,WAAYm5D,GAAW/B,EAAa2B,GACrDn3D,EAAOs3D,EAAUF,EACvB,OAAgB,IAATp3D,EAAau3D,EAAOC,cAAcH,GAAUr3D,CACrD,C,yGCxVO,SAASy3D,EAAQC,GACtB,MAAO,CACLC,SAASD,EAAM39G,UAAU,EAAG,GAAI,IAChC49G,SAASD,EAAM39G,UAAU,EAAG,GAAI,IAChC49G,SAASD,EAAM39G,UAAU,EAAG,GAAI,IAEpC,CAOO,SAAS4uE,EAAQ+uC,GACtB,MAAME,EAAKF,EAAM,GAAGzoF,SAAS,IACvB4oF,EAAKH,EAAM,GAAGzoF,SAAS,IACvB6oF,EAAKJ,EAAM,GAAGzoF,SAAS,IAC7B,OAAqB,GAAb2oF,EAAGv0H,OAAc,IAAMu0H,EAAKA,IAAoB,GAAbC,EAAGx0H,OAAc,IAAMw0H,EAAKA,IAAoB,GAAbC,EAAGz0H,OAAc,IAAMy0H,EAAKA,EAC5G,CAaO,SAASC,EAAO/2H,GAAgE,IAA9DosE,EAAG8rB,EAAGt4B,GAA4B5/D,EACzDosE,GAAK,IACL8rB,GAAK,IACLt4B,GAAK,IAEL,IACIg2D,EAAY7qD,EADZ78D,EAAM3B,KAAK2B,IAAIk+D,EAAG8rB,EAAGt4B,GAAIpzD,EAAMD,KAAKC,IAAI4/D,EAAG8rB,EAAGt4B,GACvBo3D,EAAY9oH,EAEnCmpC,EAAInpC,EAAM1B,EAGd,GAFAu+D,EAAW,GAAP78D,EAAW,EAAImpC,EAAInpC,EAEnBA,GAAO1B,EACTopH,EAAI,MACC,CACL,OAAQ1nH,GACN,KAAKk+D,EACHwpD,GAAK19B,EAAIt4B,GAAKvoB,GAAK6gD,EAAIt4B,EAAI,EAAI,GAC/B,MACF,KAAKs4B,EACH09B,GAAKh2D,EAAIwM,GAAK/0B,EAAI,EAClB,MACF,KAAKuoB,EACHg2D,GAAKxpD,EAAI8rB,GAAK7gD,EAAI,EAItBu+E,GAAK,CACP,CAEA,MAAO,CAACA,EAAG7qD,EAAGisD,EAChB,CAaO,SAASC,EAAO11H,GAAgE,IACjF6qE,EAAY8rB,EAAYt4B,GADLg2D,EAAG7qD,EAAGisD,GAA4Bz1H,EAGrDiC,EAAI+I,KAAKgiC,MAAU,EAAJqnF,GACfsB,EAAQ,EAAJtB,EAAQpyH,EACZ2zH,EAAIH,GAAK,EAAIjsD,GACbqsD,EAAIJ,GAAK,EAAIE,EAAInsD,GACjB0mD,EAAIuF,GAAK,GAAK,EAAIE,GAAKnsD,GAE3B,OAAQvnE,EAAI,GACV,KAAK,EACH4oE,EAAI4qD,EACJ9+B,EAAIu5B,EACJ7xD,EAAIu3D,EACJ,MACF,KAAK,EACH/qD,EAAIgrD,EACJl/B,EAAI8+B,EACJp3D,EAAIu3D,EACJ,MACF,KAAK,EACH/qD,EAAI+qD,EACJj/B,EAAI8+B,EACJp3D,EAAI6xD,EACJ,MACF,KAAK,EACHrlD,EAAI+qD,EACJj/B,EAAIk/B,EACJx3D,EAAIo3D,EACJ,MACF,KAAK,EACH5qD,EAAIqlD,EACJv5B,EAAIi/B,EACJv3D,EAAIo3D,EACJ,MACF,KAAK,EACH5qD,EAAI4qD,EACJ9+B,EAAIi/B,EACJv3D,EAAIw3D,EAIR,MAAO,CACL7qH,KAAK7J,MAAU,IAAJ0pE,GACX7/D,KAAK7J,MAAU,IAAJw1F,GACX3rF,KAAK7J,MAAU,IAAJk9D,GAEf,CAEOvnD,eAAeqvE,EAAgBt2D,GAEpC,MACMimG,EAAuC,CAAC,EAAG,EAAG,GACpD,IAAInrH,EACAuB,EACAC,EAEArL,EADAmB,GAAK,EAEL8zH,EAAgC,CAAC,EAAG,EAAG,GACvCnvC,EAAQ,EAEZ,MAAM96E,EAASgH,SAASnS,cAAc,UAChCsd,EAAUnS,EAAOO,YAAcP,EAAOO,WAAW,MACvD,IAAK4R,EACH,OAAO63G,EAGT,MAAME,QAAch9D,EAAAA,EAAAA,IAAanpC,GACjC1jB,EAAS6pH,EAAMC,eAAiBD,EAAMv1D,cAAgBu1D,EAAM7pH,OAC5DD,EAAQ8pH,EAAME,cAAgBF,EAAMtrE,aAAesrE,EAAM9pH,MACzDJ,EAAOK,OAASA,EAChBL,EAAOI,MAAQA,EAEf+R,EAAQq7C,UAAU08D,EAAO,EAAG,GAE5B,IACErrH,EAAOsT,EAAQotF,aAAa,EAAG,EAAGn/F,EAAOC,EAC3C,CAAE,MAAOiC,GACP,OAAO0nH,CACT,CAKA,IAHAh1H,EAAS6J,EAAKA,KAAK7J,QAGXmB,GAAK80E,IAAiBj2E,GACH,IAArB6J,EAAKA,KAAK1I,EAAI,OAChB2kF,EACFmvC,EAAI,IAAMprH,EAAKA,KAAK1I,GACpB8zH,EAAI,IAAMprH,EAAKA,KAAK1I,EAAI,GACxB8zH,EAAI,IAAMprH,EAAKA,KAAK1I,EAAI,IAO1B,OAJA8zH,EAAI,GAAK/qH,KAAKgiC,MAAM+oF,EAAI,GAAKnvC,GAC7BmvC,EAAI,GAAK/qH,KAAKgiC,MAAM+oF,EAAI,GAAKnvC,GAC7BmvC,EAAI,GAAK/qH,KAAKgiC,MAAM+oF,EAAI,GAAKnvC,GAEtBmvC,CACT,CAEO,SAASI,EAAaC,GAC3B,MAAOvrD,EAAG8rB,EAAGt4B,GAAK+3D,EAElB,MADa,MAASvrD,EAAI,MAAS8rB,EAAI,MAASt4B,CAElD,CAGO,SAASg4D,EAAgBD,GAC9B,IAAKE,EAAKC,EAAYl0E,GAASmzE,EAAQY,GAOvC,OALAG,EAAavrH,KAAKC,IAAI,EAAGsrH,EAAa,IAAO,IAAO,EAAIA,IACxDl0E,EAAQA,EAAQ,GACZr3C,KAAK2B,IAAI,EAAW,IAAR01C,GACZr3C,KAAK2B,IAAI,EAAG3B,KAAKC,IAAI,EAAG,EAAY,IAARo3C,IAExB,QAAa,IAANi0E,MAA2B,IAAbC,OAA8B,IAARl0E,SACrD,C,kBC3Me,SAASm0E,EAAc11H,EAAgBkjE,GACpD,OAAOA,EAAQh5D,KAAKgiC,MAAMg3B,EAAQljE,GAAUA,CAC9C,C,kECMA,MAAM21H,EAAkB,GAClBC,EAAiB,IAEvB,IAAIC,EAAsC,GACtCC,GAAU,EAEC,SAASC,EAAShnG,EAAaqsE,GAC5Cy6B,EAAiBz0H,KAAK,CAAE2tB,MAAKqsE,aACxB06B,IACHA,GAAU,EACVnyH,YAAWqS,gBAOfA,iBACE,IAAI8vE,EAAQ,EACZ,IAAK,MAAMkwC,KAAmBH,EAC5BI,EAAYD,GACZlwC,IACIA,IAAU6vC,UACNj3G,EAAAA,EAAAA,IAAMk3G,GACZ9vC,EAAQ,GAGZ+vC,EAAmB,EACrB,CAjBYK,GACNJ,GAAU,CAAK,GACdF,GAEP,CAeA,SAASK,EAAWt4H,GAAqC,IAApC,IAAEoxB,EAAG,SAAEqsE,GAA2Bz9F,EACrD,MAAMuxB,EAAOld,SAASnS,cAAc,KACpCqvB,EAAK3b,KAAOwb,EACZG,EAAK6mG,SAAW36B,EAChB,IACElsE,EAAKinG,OACP,CAAE,MAAO7+G,GAEPE,QAAQC,MAAMH,EAChB,CACF,C,6DC7CA,MAEM8+G,EAAgB,IAAI76G,OAAQ,OAAM+nB,EAAAA,EAAa7nB,YAAa,IAyClE,EAvC8Bnb,IAC5B,MACM+1H,GADmBC,EAAAA,EAAAA,GAAoBh2H,GACd2hE,MAAM,MAC/Bs0D,EAAsBF,EAAMhxG,KAAK,IACvC,GAAIkxG,EAAoBv2H,OAPPw2H,IAQf,OAAO,EAIT,IADoBl5H,QAAQi5H,EAAoBx/G,MAAMq/G,IAEpD,OAAO,EAET,MAAMK,EAAeJ,EAAMp3H,KAAKy3H,IAC9B,IAAIC,EAAa,EACjB,KAAOrzF,EAAAA,EAAao0D,KAAKg/B,IAGvB,GAFAC,IAEIA,EArBW,IAuBb,OADArzF,EAAAA,EAAaszF,UAAY,GACjB,EAIZ,OAAOD,CAAU,IAGnB,IAAI9qH,EAAMwqH,EAAMr2H,OAChB,IAAK,IAAImB,EAAI,EAAGA,EAAIs1H,EAAaz2H,OAAQmB,IAAK,CAC5C,IAAyB,IAArBs1H,EAAat1H,GACf,OAAO,EAELs1H,EAAat1H,GAAK0K,IACpBA,EAAM4qH,EAAat1H,GAEvB,CAEA,OAAO0K,CAAG,C,kDCzCG,SAAS8xB,EAAqBkS,EAAsB8gC,EAAiBkmD,GAClF,IAAKlmD,GAAS9gC,IAAY79B,SAASmE,cACjC,OAGF,MAAM2mB,EAAY14B,OAAO24B,eACnBiT,EAAQh+B,SAASi+B,cACjBH,EAAYD,EAAQC,WAAaD,EAElCvpB,EAAAA,IAAiBuwG,GAA0B/mF,GAAcA,EAAUgnF,WAKxE9mF,EAAM+mF,mBAAmBF,EAAuBhnF,EAAUC,GAE1DE,EAAM8tB,UAAS,GACfhhC,EAAUsT,kBACVtT,EAAUuT,SAASL,IARjBH,EAAQ/9B,OASZ,C,kDCnBA,MAAMklH,EAAe,EAEN,SAASC,IACtB,MAAMn6F,EAAY14B,OAAO24B,eACzB,IAAIm6F,EAAoBp6F,GAAWI,WAAaJ,EAAUM,WAAW,GAAG+5F,qBAAkB/5H,EAE1F,MAAMg6H,EAA2Bt6F,GAAWu6F,WAAav6F,EAAUw6F,YAAc,GAC5EC,EAAuBz6F,EAAUu6F,UAAWG,EAAAA,KACjD,IAAKN,GAA6D,IAAxCA,EAAkBO,kBAC1C,OAGF,MAAM5vG,EAAa5d,MAAMgN,KAAKigH,EAAkBQ,UAC7C55G,QAAO,CAAChK,EAAQR,IACXA,EAAK6B,WAAa6hH,GAAgB1jH,EAAKrB,UAAU6lG,SAAS,sBACrD7tG,MAAMgN,KAAK3D,EAAKqE,iBAAiB,aACrCmG,QAAO,CAACC,EAAK45G,IAAc55G,EAAIzD,OAAOgwB,OAAQqtF,EAA0B1/G,QAAQ/J,aAAa4F,GACvFR,EAAK6B,WAAa6hH,GAAgB1jH,EAAKrB,UAAU6lG,SAAS,WAC5DhkG,EAAOwG,OAAOgwB,OAAQh3B,EAAqB2E,QAAQ/J,YAGrD4F,GACN,IAGL,KAAOojH,EAAkBU,YACvBV,EAAkB5mF,YAAY4mF,EAAkBU,YAQlD,OANAV,OAAoB95H,EAEfg6H,GACHvvG,EAAW+lG,MAGN/lG,CACT,CAEA,SAAS0vG,EAAuB1nF,EAAejyC,GAC7C,QAAIiyC,EAAQ16B,WAAa6hH,IAAiBnnF,EAAwB59B,UAAU6lG,SAASl6G,OAI9EiyC,EAAQsuD,YAAao5B,EAAuB1nF,EAAQsuD,WAAYvgG,EACzE,C,0DC3CA,MAAMi6H,EAAiB,IAEhB,SAAS/7B,EAAWo5B,EAAsB4C,GAAkE,IAAnDC,EAAkBruH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,YACnF,MAAMqlB,EAAMmmG,aAAiB32G,KAAO3C,IAAIy/E,gBAAgB65B,GAASA,EAC3D15B,EAAM,IAAI4O,MAChB,OAAO,IAAIzwF,SAASwE,IAClBq9E,EAAI8O,OAAS,KACX9+F,EAAMgwF,EAAKA,EAAIpwF,MAAQ0sH,EAAOt8B,EAAInwF,OAASysH,EAAOC,GAC/C5/D,MAAM75C,IACL,IAAKA,EAAM,MAAM,IAAI23E,MAAM,wBAC3B,OAAOr6E,IAAIy/E,gBAAgB/8E,EAAK,IAEjC65C,KAAKh6C,GACL2vG,SAAQ,KACHoH,aAAiB32G,MACnB3C,IAAImgF,gBAAgBhtE,EACtB,GACA,EAENysE,EAAI13F,IAAMirB,CAAG,GAEjB,CAEO,SAASipG,EACd9C,EAAsB9pH,EAAeC,GACpB,IADoC0sH,EAAkBruH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,YAE1E,MAAMqlB,EAAMmmG,aAAiB32G,KAAO3C,IAAIy/E,gBAAgB65B,GAASA,EAC3D15B,EAAM,IAAI4O,MAChB,OAAO,IAAIzwF,SAASwE,IAClBq9E,EAAI8O,OAAS,KACX9+F,EAAMgwF,EAAKpwF,EAAOC,EAAQ0sH,GACvB5/D,MAAM75C,IACL,IAAKA,EAAM,MAAM,IAAI23E,MAAM,wBAC3B,OAAOr6E,IAAIy/E,gBAAgB/8E,EAAK,IAEjC65C,KAAKh6C,GACL2vG,SAAQ,KACHoH,aAAiB32G,MACnB3C,IAAImgF,gBAAgBhtE,EACtB,GACA,EAENysE,EAAI13F,IAAMirB,CAAG,GAEjB,CAEA/Y,eAAexK,EACbgwF,EAAuBpwF,EAAeC,GAChB,IADgC0sH,EAAkBruH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,YAG3E,KAAI,sBAAuBtF,QA6BzB,OAAO6zH,EAAaz8B,EAAKpwF,EAAOC,OAAQjO,EAAW26H,GA5BnD,IACE,MAAMG,QAAe9zH,OAAO+zH,kBAAkB38B,EAC5C,CAAE48B,YAAahtH,EAAOitH,aAAchtH,EAAQitH,cAAe,SAC7D,GAAIJ,EAAO7sH,SAAWA,GAAU6sH,EAAO9sH,QAAUA,EAC/C,MAAM,IAAI6qF,MAAM,sCAElB,MAAM7Q,QAAqBC,EAAAA,EAAAA,IAAgBmW,EAAI13F,KACzCy0H,GAAYlD,EAAAA,EAAAA,IAAajwC,GAAgByyC,EAAiB,OAAS,OACzE,aAAa,IAAIl+G,SAAS6+G,IACxB,MAAMxtH,EAASgH,SAASnS,cAAc,UACtCmL,EAAOI,MAAQ8sH,EAAO9sH,MACtBJ,EAAOK,OAAS6sH,EAAO7sH,OACvB,MAAMotH,EAAQztH,EAAOO,WAAW,MAChCktH,EAAMvtH,UAAYqtH,EAClBE,EAAM5/D,SAAS,EAAG,EAAG7tD,EAAOI,MAAOJ,EAAOK,QAC1C,MAAMC,EAAMN,EAAOO,WAAW,kBAC1BD,EACFA,EAAIotH,wBAAwBR,GAE5BO,EAAMjgE,UAAU0/D,EAAQ,EAAG,GAE7BltH,EAAO2tH,OAAOH,EAAKT,EAAW,GAElC,CAAE,MAAOzqH,GAEP,OAAO2qH,EAAaz8B,EAAKpwF,EAAOC,OAAQjO,EAAW26H,EACrD,CAIJ,CAEA/hH,eAAeiiH,EACbz8B,EAAuBpwF,EAAeC,GAChB,IADgCutH,EAAYlvH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,GAAKquH,EAAkBruH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,YAE/F,MAAMsB,EAASgH,SAASnS,cAAc,UAChCyL,EAAMN,EAAOO,WAAW,MACxBstH,EAAK7mH,SAASnS,cAAc,UAC5Bi5H,EAAOD,EAAGttH,WAAW,MAK3B,GAHAP,EAAOI,MAAQA,EACfJ,EAAOK,OAASA,EAEZmwF,EAAIpwF,MAAQwtH,EAAOxtH,EAAO,CAC5B,MAAM2tH,EAAM,EAAIH,EAChB,IAAII,EAAM,CACR5tH,MAAOlB,KAAKgiC,MAAMsvD,EAAIpwF,MAAQwtH,GAC9BvtH,OAAQnB,KAAKgiC,MAAMsvD,EAAInwF,OAASutH,IAQlC,IALAC,EAAGztH,MAAQ4tH,EAAI5tH,MACfytH,EAAGxtH,OAAS2tH,EAAI3tH,OAEhBytH,EAAKtgE,UAAUgjC,EAAK,EAAG,EAAGw9B,EAAI5tH,MAAO4tH,EAAI3tH,QAElC2tH,EAAI5tH,MAAQwtH,EAAOxtH,GACxB4tH,EAAM,CACJ5tH,MAAOlB,KAAKgiC,MAAM8sF,EAAI5tH,MAAQwtH,GAC9BvtH,OAAQnB,KAAKgiC,MAAM8sF,EAAI3tH,OAASutH,IAElCE,EAAKtgE,UAAUqgE,EAAI,EAAG,EAAGG,EAAI5tH,MAAQ2tH,EAAKC,EAAI3tH,OAAS0tH,EAAK,EAAG,EAAGC,EAAI5tH,MAAO4tH,EAAI3tH,QAGnFC,EAAIktD,UAAUqgE,EAAI,EAAG,EAAGG,EAAI5tH,MAAO4tH,EAAI3tH,OAAQ,EAAG,EAAGL,EAAOI,MAAOJ,EAAOK,OAC5E,MACEC,EAAIktD,UAAUgjC,EAAK,EAAG,EAAGxwF,EAAOI,MAAOJ,EAAOK,QAGhD,MAAM+5E,QAAqBC,EAAAA,EAAAA,IAAgBmW,EAAI13F,KACzCy0H,GAAYlD,EAAAA,EAAAA,IAAajwC,GAAgByyC,EAAiB,OAAS,OAIzE,OAHAvsH,EAAIJ,UAAYqtH,EAChBjtH,EAAIstD,yBAA2B,mBAC/BttD,EAAIutD,SAAS,EAAG,EAAG7tD,EAAOI,MAAOJ,EAAOK,QACjC,IAAIsO,SAASwE,IAClBnT,EAAO2tH,OAAOx6G,EAAS45G,EAAW,GAEtC,C,iDC/HO,SAASkB,EAAoBtlH,GAClC,GAAyB,SAArBA,EAAG/P,MAAM02E,QACX,OAAO,EAGT,MAAM55D,EAAO/M,EAAGnG,yBACRnC,OAAQ6tH,GAAiBl/F,EAAAA,EAAWC,MAE5C,OAAQvZ,EAAKkvB,KAAOspF,GAAmBx4G,EAAKkvB,IAAMlvB,EAAKrV,QAAW,CACpE,C,+DCTA,MAAM8tH,EAAY,CAChBC,OAAQ,+BACRC,KAAM,qCACNC,IAAK,gCACLC,MAAO,0BAIHC,EAAe,IAAIllC,IAAIx1F,OAAO0+F,QAAQ,CAC1C,mBAAoB,UACpB,eAAgB,UAChB,sBAAuB,UACvB,yBAA0B,UAC1B,eAAgB,UAChB,gBAAiB,UACjB,gBAAiB,UACjB,mBAAoB,UACpBi8B,mBAAoB,UACpBC,SAAU,UACVC,UAAW,UACX51E,MAAO,UACP61E,KAAM,UACNC,KAAM,UACNC,UAAW,UACXC,eAAgB,UAChBC,MAAO,UACPC,OAAQ,UACRC,KAAM,aAGFC,EAAgB,CACpB,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAGnF,SAASC,EAAcC,EAAkCC,GAAmD,IAAX72D,EAAI/5D,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,GAC7G,MAAM,IAAE6wH,EAAG,KAAEC,GAASF,EAChBG,EAActB,EAAUkB,GAC9B,OAAQA,GACN,IAAK,SACH,MAAQ,GAAEI,WAAqBF,KAAOC,MAASD,KAAOC,KAAQ/2D,KAChE,IAAK,OACH,MAAQ,GAAEg3D,QAAkBF,KAAOC,SAAY/2D,cAAiB82D,KAAOC,IACzE,IAAK,QACH,MAAQ,GAAEC,OAAiBF,KAAOC,IAEpC,QACE,MAAQ,GAAEC,WAAqBF,UAAYC,UAAa/2D,IAE9D,CAEO,SAASi3D,EAAkBH,EAAa92D,GAE7C,OAAQ,aAAev5D,KAAKywH,IAAIJ,GAAOrwH,KAAK27F,GAAK,MAAS,GAAKpiC,CACjE,CAEO,SAASm3D,EAAgB7+G,GAC9B,OAAKA,EACG,0CAAyCA,WAD/B,EAEpB,CAGO,SAAS8+G,EAAc9+G,GAC5B,OAAKA,EACEy9G,EAAav/F,IAAIle,IACnBy9G,EAAav/F,IAAIle,EAAKkmD,MAAM,KAAK,KACjCk4D,GAGiBW,EAHY/+G,EAI3B++G,EAAI74D,MAAM,IAAInkD,QAAO,CAACi9G,EAAUC,KAElCD,GAAY,GAAKA,EAAYC,EAAQC,WAAW,GAAM,GAAI,GANrBd,EAAcn6H,SAHtC,UAMpB,IAAwB86H,CAFxB,C,iFC5CA,MAAMI,EAAmB,CACvBlvD,UAAM5uE,EACNshB,WAAOthB,EACPulH,kBAAcvlH,EACd0lH,iBAAa1lH,EACb8lH,mBAAe9lH,EACf6lH,eAAW7lH,EACX8gB,UAAM9gB,EACN2lH,YAAQ3lH,GAGH,SAASklH,EAAqB/lB,EAA0B+kB,GAC7D,MAAM,aAAE6Z,GAAiB/2H,OAAOg3H,UAC5BD,GACE5+B,GAAUknB,EAAelnB,GACzB+kB,GAAU+Z,EAAwB/Z,IAGtC9pG,QAAQk1G,KAAK,iDAEjB,CAEO,SAASjJ,EAAelnB,GAC7B,MAAM,aAAE4+B,GAAiB/2H,OAAOg3H,UAC5BD,IAEFA,EAAa5+B,SAAWA,GAAY,KAExC,CAEO,SAAS8+B,EAAwB/Z,GACtC,MAAM,aAAE6Z,GAAiB/2H,OAAOg3H,UAC5BD,GACFr8H,OAAO0+F,QAAQ,IAAK09B,KAAqB5Z,IAAY71G,SAAQ9N,IAAoB,IAAlB2jB,EAAK+yD,GAAQ12E,EAC1E,IAEEw9H,EAAaG,iBAAiBh6G,EAAK+yD,EACrC,CAAE,MAAO/8D,GACP,IAIR,CAEO,SAASikH,IACd,MAAM,aAAEJ,GAAiB/2H,OAAOg3H,UAC5BD,IAEFA,EAAa5+B,SAAW,KACxB8+B,EAAwBH,GACpBC,EAAaK,gBAAeL,EAAaK,cAAgB,QAC7DL,EAAa3X,qBAEjB,CAEO,SAASJ,IAAgE,IAA/CnE,EAAoCv1G,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,OACtE,MAAM,aAAEyxH,GAAiB/2H,OAAOg3H,UAC5BD,GAAgBA,EAAaK,gBAC/BL,EAAaK,cAAgBvc,EAEjC,CAEO,SAASuE,EAAiBvE,GAC/B,IAAKA,QAA4B7hH,IAAnB6hH,EAAM5zE,eAA6CjuC,IAAnB6hH,EAAMj2G,SAAwB,OAC5Ei2G,EAAM5zE,SAAWnhC,KAAKC,IAAI80G,EAAM5zE,SAAU4zE,EAAMj2G,UAEhD,MAAM,aAAEmyH,GAAiB/2H,OAAOg3H,UAChCD,GAAc3X,mBAAmBvE,EACnC,CAEO,SAASwc,EAAkBv8H,GAEN,IAFO,MACjCkP,EAAK,OAAEquF,EAAM,MAAEi/B,EAAK,QAAEC,GACEz8H,EACxB,GAAI,kBAAmBkF,OACrB,OAAO,IAAIA,OAAOw3H,cAAc,CAC9BxtH,QACAquF,SACAi/B,QACAC,WAIN,C,kDCxGA,MAAME,EAAQ,IAAIC,QAKH,SAAS1gH,EAAgC2gH,GACtD,OAAO,WACL,MAAMC,EAASH,EAAM5hG,IAAI8hG,GAAI,QAAA/O,EAAAtjH,UAAA1J,OADpB8tC,EAAI,IAAA7jC,MAAA+iH,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJn/E,EAAIm/E,GAAAvjH,UAAAujH,GAEb,GAAI+O,IAAUC,EAAAA,EAAAA,GAAqBD,EAAOE,SAAUpuF,GAClD,OAAOkuF,EAAOG,WAGhB,MAAMroH,EAASioH,KAAMjuF,GAErB,OADA+tF,EAAMzlC,IAAI2lC,EAAI,CAAEG,SAAUpuF,EAAMquF,WAAYroH,IACrCA,CACT,CACF,C,2CChBO,MAAMsoH,EAAwC,CACnDjf,cAAc,EACdphG,KAAM,UACNgtC,SAAU,iBACViC,YAAa,qBACbkyD,WAAY,OACZl0D,gBAAgB,EAChBq0D,qBAAqB,GAGVgf,EAAkD,CAC7Dlf,cAAc,EACdphG,KAAM,kBACNgtC,SAAU,0BACVm0D,WAAY,OACZG,qBAAqB,E,2FCXhB,MAAM/kG,EAAmE,CAC9EgkH,EAAG5jH,EAAAA,GAAsB6jH,KACzBC,OAAQ9jH,EAAAA,GAAsB6jH,KAC9BE,EAAG/jH,EAAAA,GAAsBgkH,OACzBC,GAAIjkH,EAAAA,GAAsBgkH,OAC1BE,IAAKlkH,EAAAA,GAAsBmkH,UAC3BC,EAAGpkH,EAAAA,GAAsBmkH,UACzBE,EAAGrkH,EAAAA,GAAsBskH,OACzBC,OAAQvkH,EAAAA,GAAsBskH,OAC9BE,IAAKxkH,EAAAA,GAAsBskH,OAC3BG,KAAMzkH,EAAAA,GAAsB0kH,KAC5BC,IAAK3kH,EAAAA,GAAsB4kH,IAC3BvqH,WAAY2F,EAAAA,GAAsB6kH,YAG9BC,EAAmB,EAEV,SAAS5mH,EACtB1D,GACkB,IADJuqH,EAAiB/zH,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAAUg0H,EAAYh0H,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GAErD,MAAMmN,EAAW7E,SAASnS,cAAc,OACxCgX,EAASQ,UAAYqmH,EAAexqH,EAmDtC,SAAuBA,GACrB,IAAIyqH,EAAazqH,EAAKlU,MAAM,GAsD5B,OAnDA2+H,EAAaA,EAAWvmH,QAAQ,UAAW,KAG3CumH,EAAaA,EAAWvmH,QAAQ,4BAA6B,MAE7DumH,EAAaA,EAAWvmH,QAAQ,gBAAiB,MAGjDumH,EAAaA,EAAWvmH,QAAQ,qBAAsB,MACtDumH,EAAaA,EAAWvmH,QAAQ,SAAU,MAC1CumH,EAAaA,EAAWvmH,QAAQ,WAAY,IAG5CumH,EAAaA,EAAWvmH,QAAQ,sCAAuC,oCACvEumH,EAAaA,EAAWvmH,QAAQ,kCAAmC,iBACnEumH,EAAaA,EAAWvmH,QAAQ,uBAAwB,iBAGxDumH,EAAaA,EAAWvmH,QACtB,wEACA,mBAIGisB,EAAAA,KAEHs6F,EAAaA,EAAWvmH,QAAQ,oCAAqC,SAEvEumH,EAAaA,EAAWvmH,QACtB,0FACA,wCAIFumH,EAAaA,EAAWvmH,QACtB,wEACA,aAEFumH,EAAaA,EAAWvmH,QACtB,wEACA,aAEFumH,EAAaA,EAAWvmH,QACtB,wEACA,aAEFumH,EAAaA,EAAWvmH,QACtB,wEACC,2BAA0BsB,EAAAA,GAAsByiD,sBAG5CwiE,CACT,CA1G0BC,CAApBH,EA4GN,SAA4BvqH,GAC1B,OAAOA,EAAKkE,QAAQ,IAAImE,OAAQ,qBAAoBwS,EAAAA,YAA0B,MAAM,CAACuiC,EAAGhwD,EAAM4uB,IAEpF,YADIA,EAAK3Y,SAAS,OAAS2Y,EAAOA,EAAK3Y,SAAS,KAAQ,UAAS2Y,IAAU,WAAUA,QAClE5uB,SAE/B,CAjHwCu9H,CAAmB3qH,GAAuBA,GAChF4qH,EAAgBjnH,GAChB,MAAMvW,EAAOuW,EAAS2B,UAAUguB,OAAOpvB,QAAQ,WAAY,IAE3D,IAAI2mH,GADclnH,EAAS2B,UAAUzD,QAAQzU,EAAK,IAE9C09H,EAAoB,EACxB,MAAM3kH,EAA+B,GAErC,SAAS4kH,EAAU3qH,GACjB,GAAIA,EAAK6B,WAAa+oH,KAAKC,aAAc,OACzC,MAAM,MAAEj7D,EAAK,OAAEp0C,GAyGnB,SACExb,EACA8qH,EACAL,GAEA,MAAMhiH,EAyER,SAA+BzI,GAC7B,GAAIA,aAAgBuE,aAAevE,EAAK2E,QAAQC,WAC9C,OAAO5E,EAAK2E,QAAQC,WAGtB,GAAII,EAA0BhF,EAAKmB,UACjC,OAAO6D,EAA0BhF,EAAKmB,UAGxC,GAAsB,MAAlBnB,EAAKmB,SAAkB,CACzB,MAAMjB,EAASF,EACf,OAAIE,EAAOyE,QAAQC,aAAeQ,EAAAA,GAAsBC,YAC/CD,EAAAA,GAAsBC,YAE3BnF,EAAOyE,QAAQC,aAAeQ,EAAAA,GAAsBgC,IAC/ChC,EAAAA,GAAsBgC,IAE3BlH,EAAOD,KAAKgyB,WAAW,WAClB7sB,EAAAA,GAAsB2lH,MAE3B7qH,EAAOD,KAAKgyB,WAAW,QAClB7sB,EAAAA,GAAsB4lH,MAE3B9qH,EAAOD,OAASC,EAAOe,YAClBmE,EAAAA,GAAsB+B,QAGxB/B,EAAAA,GAAsBgC,GAC/B,CAEA,MAAsB,SAAlBpH,EAAKmB,SACCnB,EAAqB2E,QAAQC,WAGjB,QAAlB5E,EAAKmB,UACFnB,EAA0B2E,QAAQiwB,WAC9BxvB,EAAAA,GAAsBE,iBAFjC,CAOF,CAlHe2lH,CAAsBjrH,GAEnC,IAAKyI,IAASzI,EAAKiB,YACjB,MAAO,CACL2uD,MAAO66D,EACPjvG,YAAQ1xB,GAIZ,MAAMohI,EAAWJ,EAAQrpH,QAAQzB,EAAKiB,YAAawpH,GAG7C76D,EAAQs7D,GAAY,EAAIA,EAAWT,EACnCp4F,EAASy4F,EAAQ1nH,UAAU,EAAGwsD,GAAOljE,QACrC,OAAEA,GAAWo+H,EAAQ1nH,UAAUwsD,EAAOA,EAAQ5vD,EAAKiB,YAAYvU,QAErE,OAAI+b,IAASrD,EAAAA,GAAsB+B,QAC1B,CACLyoD,QACAp0C,OAAQ,CACN/S,OACA4pB,SACA3lC,SACA+uB,IAAMzb,EAA2BC,OAInCwI,IAASrD,EAAAA,GAAsBC,YAC1B,CACLuqD,QACAp0C,OAAQ,CACN/S,OACA4pB,SACA3lC,SACA64C,OAASvlC,EAA2B2E,QAAQ4gC,SAK9C98B,IAASrD,EAAAA,GAAsB4kH,IAC1B,CACLp6D,QACAp0C,OAAQ,CACN/S,OACA4pB,SACA3lC,SACA+wB,SAAWzd,EAAwB2E,QAAQ8Y,WAK7ChV,IAASrD,EAAAA,GAAsBE,YAC1B,CACLsqD,QACAp0C,OAAQ,CACN/S,OACA4pB,SACA3lC,SACAkoC,WAAa50B,EAA0B2E,QAAQiwB,aAK9C,CACLg7B,QACAp0C,OAAQ,CACN/S,OACA4pB,SACA3lC,UAGN,CArL8By+H,CAAsBnrH,EAAMhT,EAAMy9H,GAE5D,GAAIjvG,EACFivG,EAAY76D,EACZ7pD,EAASjY,KAAK0tB,QACT,GAAIxb,EAAKiB,YAAa,CAE3B,GAAc,IAAV2uD,GAA2C,KAA5B5vD,EAAKiB,YAAYiyB,OAClC,OAEFu3F,GAAazqH,EAAKiB,YAAYvU,MAChC,CAEIsT,EAAKorH,iBAAmBV,GAAqBR,IAC/CQ,GAAqB,EACrB/zH,MAAMgN,KAAK3D,EAAKoB,YAAYjJ,QAAQwyH,GAExC,CAOA,OALAh0H,MAAMgN,KAAKJ,EAASnC,YAAYjJ,SAAS6H,IACvC0qH,EAAoB,EACpBC,EAAU3qH,EAAK,IAGV,CACLhT,OACA+Y,SAAUA,EAASrZ,OAASqZ,OAAWjc,EAE3C,CAEO,SAAS0gI,EAAgBjnH,GAC9BA,EAASc,iBAAiB,OAAOlM,SAAS6H,IACpCA,EAAK2E,QAAQiwB,WACf50B,EAAKiB,YAAejB,EAA0BmF,KAAO,GAErDnF,EAAK0E,YAAY1E,EAAKmF,KAAO,GAC/B,GAEJ,C,4DCxEA,MACMkmH,EAAoB,OACpBC,EAAmB,QAEnBC,EAAc,IAAIvqC,IAClBwqC,EAAY,IAAIxqC,IAChByqC,EAAkB,IAAIzqC,IAErB,SAAgB0kB,EACrBjqF,GAAW,QACXnqB,EAAK8E,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,EACRs1H,EAASt1H,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAGi1H,EAAiB,yBAE7B,MAAM5nH,EAAQgY,EAAIhY,MAAM,kBACxB,IAAIkoH,EAOJ,IALEA,EADEloH,EACSA,GAASuzB,OAAOvzB,EAAM,IAEtB+nH,EAAU7kG,IAAIlL,KAGd,CACX,GAAIkwG,GAAYr6H,GAASq6H,EAAU,OAEnC,IAAIp6H,EAAMD,EAAQo6H,EAAY,EAC1BC,GAAYp6H,EAAMo6H,IACpBp6H,EAAMo6H,EAAW,GAInB,MAAMC,EAAY,GAAEnwG,KAAOnqB,KAASC,IACpC,IAAIs6H,EAAcN,EAAY5kG,IAAIilG,GAElC,IAAKC,EAAa,CAChB,IAAIhS,EAAU4R,EAAgB9kG,IAAIilG,GAC7B/R,IACHA,GAAUiS,EAAAA,EAAAA,IAAQ,gBAAiB,CACjCjW,YAAa/mH,EAAAA,GAAek3G,YAC5BvqF,MACAnqB,QACAC,QAGFk6H,EAAgB3oC,IAAI8oC,EAAU/R,IAGhC,MAAMr5G,QAAeq5G,EAAQW,SAAQ,KACnCiR,EAAgBtqC,OAAOyqC,EAAS,IAGlC,IAAKprH,GAAQqrH,YAAa,OAGtBrrH,EAAOurH,WAAaJ,IACtBA,EAAWnrH,EAAOurH,SAClBP,EAAU1oC,IAAIrnE,EAAKjb,EAAOurH,WAI5BF,EAAcrrH,EAAOqrH,YAGjBt6H,GAAO+5H,GACTC,EAAYzoC,IAAI8oC,EAAUprH,EAAOqrH,YAErC,OAGMA,EAENv6H,EAAQC,EAAM,CAChB,CACF,CA7D+B,EA6D9B,OAAAyI,GAAA,OAAAqM,QAAAyE,OAAA9Q,EAAA,E,wEC5ED,MAAMgyH,EAActtH,SAASnS,cAAc,OAEpC,SAASy9B,EAAsBpqB,GACpC,MAAM4pB,EAAY14B,OAAO24B,eAEzB,GAAID,GAAWM,YAAcN,EAAUI,WAAY,CACjD,MAAM8S,EAAQlT,EAAUM,WAAW,GACnC4S,EAAMuvF,iBAEN,MAAM1oH,EAAWm5B,EAAMwvF,yBAAyBtsH,GAC1CusH,EAAmB5oH,EAASi5B,UAClCE,EAAM0vF,WAAW7oH,GACb4oH,GACFzvF,EAAM2vF,cAAcF,GACpBzvF,EAAM4vF,YAAYH,IAElBzvF,EAAM8tB,UAAS,GAEjBhhC,EAAUsT,kBACVtT,EAAUuT,SAASL,EACrB,CACF,CAEO,SAAS8uD,EAAuB1lC,EAAyBymE,GAC9D,IAAKzmE,EACH,MAAO,GAGT,MAAM0mE,EAAM17H,OAAO24B,eACnB,IAAK+iG,IAAQA,EAAI5iG,WACf,OAAOk8B,EAAU/hD,UAGnB,MAAM24B,EAAQ8vF,EAAI1iG,WAAW,GAAG2iG,aAChC,OAAK/vF,EAAMgwF,eAAe5mE,GAIrBymE,GAAsBzmE,EAAU0+C,SAAS9nE,EAAMkuD,0BAIpDluD,EAAM8tB,UAAS,GACf9tB,EAAME,SAASkpB,EAAW,GAE1BkmE,EAAYjoH,UAAY,GACxBioH,EAAYntH,YAAY69B,EAAMmnF,iBAEvBmI,EAAYjoH,WATV,GAJA+hD,EAAU/hD,SAcrB,CAGO,SAASisF,EAAiBzzD,GAC/B,IAAIwzD,EAAgB,EACpB,MAAMvmE,EAAY14B,OAAO24B,eACzB,IAAKD,GAAsC,IAAzBA,EAAUI,WAC1B,OAAOmmE,EAGT,MAAMrzD,EAAQlT,EAAUM,WAAW,GAC7B6iG,EAAajwF,EAAM+vF,aAKzB,OAJAE,EAAWlJ,mBAAmBlnF,GAC9BowF,EAAW9vF,OAAOH,EAAMkwF,aAAclwF,EAAMmwF,WAC5C98B,EAAgB48B,EAAWr0F,WAAW5rC,OAE/BqjG,CACT,CAGO,SAASG,EAAiB3zD,EAAexE,GAC9C,IAAK,MAAM/3B,KAAQu8B,EAAQn7B,WACzB,GAAIpB,EAAK6B,WAAa+oH,KAAKkC,UAAW,CACpC,GAAK9sH,EAActT,QAAUqrC,EAAU,CACrC,MAAM2E,EAAQh+B,SAASi+B,cACjBnT,EAAY14B,OAAO24B,eAMzB,OALAiT,EAAME,SAAS58B,EAAM+3B,GACrB2E,EAAM8tB,UAAS,GACfhhC,EAAUsT,kBACVtT,EAAUuT,SAASL,IAEX,CACV,CACE3E,GAAY,WAAY/3B,EAAOA,EAAKtT,OAAmB,CAE3D,MAEE,IAAkB,KADlBqrC,EAAWm4D,EAAiBlwF,EAAM+3B,IAEhC,OAAQ,EAKd,OAAOA,CACT,CAEO,SAASg1F,IACd,MAAMvjG,EAAY14B,OAAO24B,eACzBD,GAAWsT,iBACb,C,kBClGA,IAAIkwF,EAEG,SAASr7G,IAAsF,IAAhEs7G,EAAM72H,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,GAAAA,UAAA,GAAG,IAAK0uG,EAA4B1uG,UAAA1J,OAAA,EAAA0J,UAAA,QAAAtM,EAAEojI,EAAU92H,UAAA1J,OAAA,QAAA5C,IAAAsM,UAAA,IAAAA,UAAA,GACrF42H,IACHA,EAAetuH,SAASnS,cAAc,SACtCygI,EAAa/nH,aAAa,OAAQ,SAGpC+nH,EAAa/nH,aAAa,SAAUgoH,GAEhCC,EACFF,EAAaxoH,gBAAgB,YAE7BwoH,EAAa/nH,aAAa,WAAY,YAIxC+nH,EAAaG,SAAW,KACxBH,EAAa/+E,MAAQ,GACrB++E,EAAaG,SAAWroB,EAExBkoB,EAAanK,OACf,C,kCCnBO,SAASvrH,EAAe81H,GAC7B,MAAMC,EAAiC,EAArBD,EAAY1gI,OACxB4gI,EAAc12H,KAAKgiC,MAAMy0F,EAAY,GAC3C,IAAKC,EACH,MAAO,GAWT,MAAM9sH,EAAS7J,MAAM22H,GACfC,EAAWH,EACjB,IAAK,IAAIv/H,EAAI,EAAGqjF,EAAIo8C,EAAc,EAAGz/H,IAAMqjF,IAAKrjF,EAAG,CACjD,MAAM2/H,EAAY52H,KAAKgiC,MAAW,EAAJ/qC,EAAS,GACjC4/H,EAAW72H,KAAKgiC,MAAW,EAAJ/qC,EAAS,GAChCogD,EAAQs/E,EAASC,IAAcD,EAASC,EAAY,IAAM,GAChEhtH,EAAO3S,GAAOogD,GAASw/E,EAAY,EACrC,CACA,MAAMC,EAAgB92H,KAAKgiC,MAA2B,GAAnB00F,EAAc,GAAU,GACrDK,EAAe/2H,KAAKgiC,MAA2B,GAAnB00F,EAAc,GAAU,GACpDM,EAAYL,EAASG,IAAkBH,EAASG,EAAgB,IAAM,GAG5E,OAFAltH,EAAO8sH,EAAc,GAAMM,GAAaD,EAAgB,GAEjDntH,CACT,CAEO,SAAShJ,EAAiBjB,EAAgBs3H,GAC/C,IAAIp3H,EAAO,EACX,MAAMq3H,EAAU,IAAIn3H,MAAMk3H,GACpBE,EAAex3H,EAAK7J,OAASmhI,EAC7BG,EAAaz3H,EAAK,GAClB03H,EAAc13H,EAAKA,EAAK7J,OAAS,GACvC,IAAK,IAAImB,EAAI,EAAGA,EAAIggI,EAAUhgI,IAAK,CACjC,MAAMwnE,EAAMz+D,KAAKgiC,MAAM/qC,EAAIkgI,GACrBG,IAAQ33H,EAAK8+D,EAAM,IAAM24D,IAAez3H,EAAK8+D,IAAQ24D,IAAez3H,EAAK8+D,EAAM,IAAM44D,IAAgB,EAC3GH,EAAQjgI,GAAKqgI,EACTz3H,EAAOy3H,IACTz3H,EAAOy3H,EAEX,CACA,MAAO,CAAE33H,KAAMu3H,EAASr3H,OAC1B,C,2DChDA,SAAgB,KAAO,WAAW,OAAS,WAAW,iBAAiB,WAAW,cAAgB,WAAW,IAAM,WAAW,KAAO,WAAW,YAAY,WAAW,SAAW,WAAW,YAAY,WAAW,SAAW,WAAW,WAAW,WAAW,QAAU,WAAW,QAAU,WAAW,SAAW,W,kCCArT,SAAgB,KAAO,WAAW,OAAS,WAAW,QAAU,WAAW,KAAO,WAAW,KAAO,WAAW,oBAAsB,WAAW,mBAAqB,WAAW,OAAS,WAAW,YAAc,W,mCCAlN,SAAgB,KAAO,WAAW,KAAO,WAAW,OAAS,WAAW,aAAe,WAAW,MAAQ,WAAW,iBAAmB,WAAW,gBAAkB,WAAW,UAAY,W","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useOldLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from \"../../../lib/teact/teact\";\nimport React, { memo, useEffect, useMemo } from \"../../../lib/teact/teact\";\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from \"../../../api/types\";\nimport type { GlobalState } from \"../../../global/types\";\nimport type { ISettings, ThreadId } from \"../../../types\";\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW,\n  DEBUG_LOG_FILENAME,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from \"../../../config\";\nimport {\n  getMessageAudio,\n  getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo,\n  getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from \"../../../global/helpers\";\nimport { getDebugLogs } from \"../../../util/debugConsole\";\nimport { validateFiles } from \"../../../util/files\";\nimport { openSystemFilesDialog } from \"../../../util/systemFilesDialog\";\nimport { IS_TOUCH_ENV } from \"../../../util/windowEnvironment\";\n\nimport useFlag from \"../../../hooks/useFlag\";\nimport useLastCallback from \"../../../hooks/useLastCallback\";\nimport useMouseInside from \"../../../hooks/useMouseInside\";\nimport useOldLang from \"../../../hooks/useOldLang\";\n\nimport Icon from \"../../common/icons/Icon\";\nimport Menu from \"../../ui/Menu\";\nimport MenuItem from \"../../ui/MenuItem\";\nimport ResponsiveHoverButton from \"../../ui/ResponsiveHoverButton\";\nimport AttachBotItem from \"./AttachBotItem\";\n\nimport \"./AttachMenu.scss\";\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState[\"attachMenu\"][\"bots\"];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings[\"theme\"];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(\n    isAttachMenuOpen,\n    closeAttachMenu\n  );\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [\n    isAttachmentBotMenuOpen,\n    markAttachmentBotMenuOpen,\n    unmarkAttachmentBotMenuOpen,\n  ] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo =\n    editingMessage &&\n    editingMessage?.groupedId &&\n    Boolean(\n      getMessagePhoto(editingMessage) ||\n        getMessageWebPagePhoto(editingMessage) ||\n        Boolean(\n          getMessageVideo(editingMessage) ||\n            getMessageWebPageVideo(editingMessage)\n        )\n    );\n  const isFile =\n    editingMessage &&\n    editingMessage?.groupedId &&\n    Boolean(\n      getMessageAudio(editingMessage) ||\n        getMessageVoice(editingMessage) ||\n        getMessageDocument(editingMessage)\n    );\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback(\n    (e: Event, shouldSuggestCompression?: boolean) => {\n      const { files } = e.target as HTMLInputElement;\n      const validatedFiles = validateFiles(files);\n\n      if (validatedFiles?.length) {\n        onFileSelect(validatedFiles, shouldSuggestCompression);\n      }\n    }\n  );\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(\n        canSendVideoAndPhoto\n          ? CONTENT_TYPES_WITH_PREVIEW\n          : canSendPhotos\n          ? SUPPORTED_IMAGE_CONTENT_TYPES\n          : SUPPORTED_VIDEO_CONTENT_TYPES\n      ).join(\",\"),\n      (e) => handleFileSelect(e, true)\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      !canSendDocuments && canSendAudios\n        ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(\",\")\n        : \"*\",\n      (e) => handleFileSelect(e, false)\n    );\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, {\n      type: \"text/plain\",\n    });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n          if (!peerType || !bot.isForAttachMenu) return false;\n          if (\n            peerType === \"bots\" &&\n            bot.id === chatId &&\n            bot.attachMenuPeerTypes.includes(\"self\")\n          ) {\n            return true;\n          }\n          return bot.attachMenuPeerTypes!.includes(peerType);\n        })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {editingMessage && hasReplaceableMedia ? (\n        <ResponsiveHoverButton\n          id=\"replace-menu-button\"\n          className={\n            isAttachMenuOpen\n              ? \"AttachMenu--button activated\"\n              : \"AttachMenu--button\"\n          }\n          round\n          color=\"translucent\"\n          onActivate={handleToggleAttachMenu}\n          ariaLabel=\"Replace an attachment\"\n          ariaControls=\"replace-menu-controls\"\n          hasPopup\n        >\n          <Icon name=\"replace\" />\n        </ResponsiveHoverButton>\n      ) : (\n        <ResponsiveHoverButton\n          id=\"attach-menu-button\"\n          disabled={Boolean(editingMessage)}\n          className={\n            isAttachMenuOpen\n              ? \"AttachMenu--button activated\"\n              : \"AttachMenu--button\"\n          }\n          round\n          color=\"translucent\"\n          onActivate={handleToggleAttachMenu}\n          ariaLabel=\"Add an attachment\"\n          ariaControls=\"attach-menu-controls\"\n          hasPopup\n        >\n          <Icon name=\"attach\" />\n        </ResponsiveHoverButton>\n      )}\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n         ** Using ternary operator here causes some attributes from first clause\n         ** transferring to the fragment content in the second clause\n         */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            Posting media content is not allowed in this group.\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(\n                  canSendVideoAndPhoto\n                    ? \"AttachmentMenu.PhotoOrVideo\"\n                    : canSendPhotos\n                    ? \"InputAttach.Popover.Photo\"\n                    : \"InputAttach.Popover.Video\"\n                )}\n              </MenuItem>\n            )}\n            {(canSendDocuments || canSendAudios) && !isPhotoOrVideo && (\n              <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                {lang(\n                  !canSendDocuments && canSendAudios\n                    ? \"InputAttach.Popover.Music\"\n                    : \"AttachDocument\"\n                )}\n              </MenuItem>\n            )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang(\"DebugSendLogs\")}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {/* {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )} */}\n\n        {!editingMessage &&\n          !hasReplaceableMedia &&\n          !isScheduled &&\n          bots?.map((bot) => {\n            if (bot.shortName !== \"Wallet\")\n              return (\n                <AttachBotItem\n                  bot={bot}\n                  chatId={chatId}\n                  threadId={threadId}\n                  theme={theme}\n                  onMenuOpened={markAttachmentBotMenuOpen}\n                  onMenuClosed={unmarkAttachmentBotMenuOpen}\n                />\n              );\n          })}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types/index';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? lang('EditMessage')\n            : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {lang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {lang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {lang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {lang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {lang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions, isModalShown,\n      },\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {/* {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )} */}\n\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            editingMessage={editingMessage}\n            hasReplaceableMedia={canMediaBeReplaced}\n            isButtonVisible={!activeVoiceRecording}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={isInScheduledList}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    return {\n      availableReactions: type === 'story' ? global.reactions.availableReactions : undefined,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageWebPageDocument,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document! || getMessageWebPageDocument(message);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', 'canvas-blur-setup', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useOldLang';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus, draftDate }) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={buildClassName(styles.canvas, 'canvas-blur-setup')}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { CustomPeer, CustomPeerType, UniqueCustomPeer } from '../../types';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByKey } from '../../util/iteratees';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  className?: string;\n  categories?: UniqueCustomPeer[];\n  itemIds: string[];\n  selectedCategories?: CustomPeerType[];\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  onSelectedCategoriesChange?: (categories: CustomPeerType[]) => void;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n  isCountryList?: boolean;\n  countryList?: ApiCountry[];\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  className,\n  categories,\n  itemIds,\n  selectedCategories,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedSelectedIds,\n  lockedUnselectedIds,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  onSelectedCategoriesChange,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  isCountryList,\n  countryList,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      onSelectedCategoriesChange?.(newSelectedCategories);\n    } else {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      onSelectedIdsChange?.(newSelectedIds);\n    }\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useOldLang();\n\n  const countriesByIso = useMemo(() => {\n    if (!countryList) return undefined;\n    return buildCollectionByKey(countryList, 'iso2');\n  }, [countryList]);\n\n  const renderCategory = useLastCallback((category: CustomPeer) => {\n    return (\n      <PrivateChatInfo\n        customPeer={category}\n      />\n    );\n  });\n\n  const renderChatInfo = useLastCallback((id: string) => {\n    const isUnselectable = lockedUnselectedIdsSet.has(id);\n    if (isCountryList && countriesByIso) {\n      const country = countriesByIso[id];\n      return <div>{country.defaultName}</div>;\n    } else if (isUserId(id)) {\n      return (\n        <PrivateChatInfo\n          forceShowSelf={forceShowSelf}\n          userId={id}\n          status={isUnselectable ? lockedUnselectedSubtitle : undefined}\n        />\n      );\n    } else {\n      return <GroupChatInfo chatId={id} status={isUnselectable ? lockedUnselectedSubtitle : undefined} />;\n    }\n  });\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const shouldRenderLockIcon = lockedUnselectedIdsSet.has(id);\n    const isLocked = lockedSelectedIdsSet.has(id) || shouldRenderLockIcon;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n    const renderCheckbox = () => {\n      return (isViewOnly || shouldRenderLockIcon) ? undefined : (\n        <Checkbox\n          label=\"\"\n          disabled={isLocked}\n          checked={isChecked}\n          round={isRoundCheckbox}\n        />\n      );\n    };\n    return (\n      <ListItem\n        key={id}\n        className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        allowDisabledClick={Boolean(onDisabledClick)}\n        secondaryIcon={shouldRenderLockIcon ? 'lock-badge' : undefined}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        ripple\n      >\n        {!isRoundCheckbox ? renderCheckbox() : undefined}\n        {category ? renderCategory(category) : renderChatInfo(id)}\n        {isRoundCheckbox ? renderCheckbox() : undefined}\n      </ListItem>\n    );\n  }, [\n    categoriesByType, isRoundCheckbox, isViewOnly, lockedSelectedIdsSet, lockedUnselectedIdsSet,\n    onDisabledClick, renderChatInfo, selectedCategories, selectedIds,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    return (\n      <div key=\"categories\">\n        {Boolean(categories?.length) && (\n          <div className=\"picker-category-title\">{lang('PrivacyUserTypes')}</div>\n        )}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className=\"picker-category-title\">{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, lang, renderItem]);\n\n  return (\n    <div className={buildClassName('Picker', className)}>\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PickerSelectedItem\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName('picker-list', 'custom-scroll', isRoundCheckbox && 'withRoundedCheckbox')}\n          items={viewportIds}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  customPeer?: CustomPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  customPeer,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <Icon name={icon} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (customPeer || user || chat) {\n    iconElement = (\n      <Avatar\n        peer={customPeer || user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = (customPeer && lang(customPeer.titleKey))\n      || (!chat || (user && !isSavedMessages)\n        ? getUserFirstOrLastName(user)\n        : getChatTitle(lang, chat, isSavedMessages));\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    (chat?.isForum || customPeer?.isAvatarSquare) && 'square-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(customPeer || chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = user || chat;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(peer, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb canvas-blur-setup\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n    emojiStatusSticker?: ApiSticker;\n  }\n  & Pick<GlobalState, 'isSynced'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSynced,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n  emojiStatusSticker,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (isSynced && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, isSynced, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (!photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const peerId = (chatId || userId)!;\n\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const { isSynced } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      isSynced,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      mediaId,\n      avatarOwnerId,\n      emojiStatusSticker,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const wrappedMedia = useMemo(() => {\n    const replyMedia = replyInfo?.type === 'message' && replyInfo.replyMedia;\n    if (!replyMedia) return undefined;\n    return {\n      content: replyMedia,\n    };\n  }, [replyInfo]);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message || wrappedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(wrappedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        lang={lang}\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content);\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerPreviewHash(customEmoji.id) : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n  return orderBy(chatIds, (id) => {\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftPremiumModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker.id);\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker.id);\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftPremiumModal({ forUserIds: [user.id] });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\">{renderText(lang(valueKey, [formattedDate, age], undefined, age))}</div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUserFullInfo, ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { debounce } from '../../../util/schedulers';\nimport stopEvent from '../../../util/stopEvent';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const lang = useOldLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: lang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, lang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), lang(isChat ? 'Link' : 'Username'));\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir=\"auto\">{formatUsername(mainUsername.username, isChat)}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{lang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {lang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{lang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" ripple onClick={handleOpenSavedDialog}>\n          <span>{lang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  shouldDelayInit?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  shouldDelayInit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          loopLimit={loopLimit}\n          forceAlways={!shouldDelayInit}\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways={!shouldDelayInit}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways={!shouldDelayInit}\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden, isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div className=\"blur\" />\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useOldLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(chat: ApiChat, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(chat), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const {\n    openPremiumModal, requestConfetti, checkGiftCode, getReceipt,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isGiftCode = Boolean(message.content.action?.text.startsWith('BoostingReceivedGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}</strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(lang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(lang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'BoostingUnclaimedPrizeDuration',\n            lang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{lang('BoostingReceivedGiftOpenBtn')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\n\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type LangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, '⭐', <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(photo.isSpoiler);\n\n  useEffect(() => {\n    if (photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [photo.isSpoiler]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', !noThumb && 'canvas-blur-setup', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useSignal,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMessageMediaFormat, getMessageMediaHash, getMessageMediaThumbDataUri, hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMessageMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled);\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', 'canvas-blur-setup', thumbClassNames)}\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldSpinnerRender && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldSpinnerRender && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number, isGif?: boolean) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(video.isSpoiler);\n\n  useEffect(() => {\n    if (video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [video.isSpoiler]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id, video?.isGif);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', !noThumb && 'canvas-blur-setup', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    case 'telegram_stickerset':\n      return 'lng_view_button_stickerset';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          isToBottom ? 'end' : 'centerOrTop',\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  onClose,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const availableReactions = useMemo(() => {\n    const reactions = isInSavedMessages ? defaultTagReactions\n      : (enabledReactions?.type === 'some' ? enabledReactions.allowed\n        : allAvailableReactions?.map((reaction) => reaction.reaction));\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction: currentReaction }) => isSameReaction(reaction, currentReaction))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    maxUniqueReactions, topReactions,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction, ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../../hooks/useMenuPosition';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  shouldDelayInit?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  shouldDelayInit,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n\n  const getLayout = () => ({ withPortal: true, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n        shouldDelayInit={shouldDelayInit}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuPosition && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiPostStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport {\n  selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"suggestedReaction\":\"WQ5DA3P_\",\"dark\":\"eic2vQ8c\",\"background\":\"j4MKFabm\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal, focusMessage, closeStoryViewer } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost': {\n            const isShiny = isActive && (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type {\n  ApiInputInvoice, ApiRequestInputInvoice, ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { GlobalState } from '../types';\n\nimport { formatInteger } from '../../util/textFormat';\nimport { selectChat, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug' || inputInvoice.type === 'stars') return inputInvoice;\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      peerColorId: -1, // Defaults to black\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(amount: number) {\n  if (amount < 0) {\n    return `- ${formatInteger(Math.abs(amount))}`;\n  }\n\n  return `+ ${formatInteger(amount)}`;\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        canvas.classList.remove('canvas-blur-setup');\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useSignal } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import twemojiRegex from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_TO_BE_DISTRIBUTED: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'toBeDistributed',\n  titleKey: 'BoostingToBeDistributed',\n  avatarIcon: 'user',\n  withPremiumGradient: true,\n};\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","decodedWaveform","decodeWaveform","Uint8Array","interpolateArray","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","DEFAULT_LIMIT","limit","badgeText","renderingBadgeText","root","peer","Avatar","avatar","badge","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","result","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","COLOR_REPLACE_PATTERN","icon","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","bot","threadId","isInSideMenu","canShowNew","onMenuOpened","onMenuClosed","callAttachBot","toggleAttachBot","icons","find","isMenuOpen","openMenu","closeMenu","menuPosition","setMenuPosition","handleContextMenu","rect","currentTarget","right","bottom","handleClick","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","botId","isEnabled","MenuItem","key","customIcon","AttachBotIcon","onContextMenu","shortName","isDisclaimerNeeded","Menu","isOpen","positionX","autoClose","withPortal","onClose","onCloseAnimationEnd","destructive","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_IMAGE_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","positionY","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","AttachBotItem","BotCommandMenu","selectCurrentMessageList","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuPosition","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","ClosableEmbeddedMessage","isInComposer","faded","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","getHtml","isDisabled","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","isUserId","chatBotFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","user","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","availableReactions","reactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isChatChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentType","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","floor","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","isInvertedMedia","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isSavedDialog","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","getMessageWebPageDocument","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","mimeType","handleDownload","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","isRestricted","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","DotAnimation","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","value","readOnly","DropdownMenu","trigger","isProtected","mediaBlobUrl","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","withAnimation","clientY","shiftX","shiftY","Keys","DEFAULT_TEXT","description","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","categories","itemIds","selectedCategories","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedSelectedIds","lockedUnselectedIds","lockedUnselectedSubtitle","forceShowSelf","isViewOnly","onSelectedCategoriesChange","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","isCountryList","countryList","shouldMinimize","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","handleItemClick","categoryType","newSelectedCategories","splice","newSelectedIds","handleFilterChange","viewportIds","getMore","useInfiniteScroll","countriesByIso","renderCategory","category","PrivateChatInfo","customPeer","renderChatInfo","isUnselectable","country","defaultName","GroupChatInfo","renderItem","isCategory","shouldRenderLockIcon","isLocked","isChecked","renderCheckbox","ListItem","inactive","secondaryIcon","beforeChildren","PickerSelectedItem","clickArg","canClose","isMinimized","InputText","InfiniteScroll","Loading","isSelf","fluid","withPeerColors","iconElement","titleText","titleKey","isAvatarSquare","leftText","rightText","floatingBadgeText","floatingBadgeIcon","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","isSynced","userStatus","selectUserStatus","noFake","noVerified","adminMember","rightElement","loadFullUser","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","mediaViewer","currentTopicId","userFullInfo","emojiStatus","emojiStatusSticker","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","canCopyTitle","isReadDateRestrictedByMe","renderStatus","ProfilePhoto","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","wrappedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","media","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentHeight","handleResize","entry","contentRect","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","priority","lastMessage","selectChatLastMessage","isVerified","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","iconClassName","multiline","isStatic","narrow","withColorTransition","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","birthday","isInSettings","openGiftPremiumModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","split","digit","effectSticker","randomEffect","random","hash","getStickerMediaHash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserIds","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","runDebounced","debounce","chatOrUserId","phoneCodes","phoneCodeList","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","areNotificationsEnabled","setAreNotificationsEnabled","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","UserBirthday","Switcher","BusinessHours","usernameList","otherUsernames","usernameLinks","s","idx","particleSize","onEnded","stickerHash","previewMediaData","paths","generateRandomDropPath","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","shouldDelayInit","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","AnimatedSticker","animatedIcon","roundToNearestEven","play","effect","CustomEmojiEffect","ChatFolderModal","MuteChatModal","lastMessageId","selectChatLastMessageId","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","shouldShowOnlyMostImportant","forceHidden","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","videoTs","videoSizes","l","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","fallbackColor","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","count","selectSimilarChannelIds","toggleChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","clearTimeout","handleToggle","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","checkGiftCode","getReceipt","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","shouldShowConfettiRef","withStars","targetUsers","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","ActionMessageSuggestedAvatar","SimilarChannels","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","setProperty","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","closest","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","withBlurredBackground","useBlurredMediaThumbRef","showSpoiler","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","onStop","playerRef","circleRef","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","shouldPlay","stopPlaying","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","isFinite","isWebPageVideo","calculateVideoDimensions","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleQuickButtonClick","useEnsureStory","hasCustomColor","isWithTextColor","documents","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","Audio","Document","isEmoji","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","REACTION_SIZE","chosen","noAppearAnimation","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","maxUniqueReactions","areReactionsLocked","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","currentReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","isPrimary","ReactionSelectorReaction","getReactionKey","ReactionSelectorCustomReaction","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","PromptDialog","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","statistics","period","schema","getSchemaByType","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideo","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","closeStoryViewer","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","removeProperty","screenAspectRatio","clientWidth","mediaAreas","isShiny","channelId","handleMediaAreaClick","MediaAreaSuggestedReaction","getRequestInputInvoice","inputInvoice","boostChannelId","amount","currency","option","purpose","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","peerColorId","withPremiumGradient","formatStarsTransactionAmount","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","savedCallback","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","scrollLeft","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","ConnectorClass","_len","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","p","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","RE_EMOJI_ONLY","lines","fixNonStandardEmoji","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_TO_BE_DISTRIBUTED","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange","encoded5bit","bitsCount","valuesCount","bitsData","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","fitCount","newData","springFactor","leftFiller","rightFiller","val"],"sourceRoot":""}