{"version":3,"file":"9451.d6d6a3c46ed702991d43.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.module.scss?df39","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.module.scss?1c3e","webpack://telegram-t/./src/components/main/premium/GiftPremiumModal.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/main/AppendEntityPicker.module.scss?b380","webpack://telegram-t/./src/components/main/AppendEntityPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumGiftingModal.module.scss?a8f0","webpack://telegram-t/./src/components/main/premium/PremiumGiftingModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/ReactionEmoji.module.scss?b399","webpack://telegram-t/./src/components/common/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.module.scss?bbd4","webpack://telegram-t/./src/components/modals/stars/BalanceBlock.tsx","webpack://telegram-t/./src/components/modals/stars/PaidMediaThumb.module.scss?e2b6","webpack://telegram-t/./src/components/modals/stars/PaidMediaThumb.tsx","webpack://telegram-t/./src/components/modals/stars/StarsTransactionItem.tsx","webpack://telegram-t/./src/components/modals/stars/StarsTransactionItem.module.scss?2a3b","webpack://telegram-t/./src/components/modals/stars/StarsBalanceModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarsPaymentModal.tsx","webpack://telegram-t/./src/components/common/AboutAdsModal.module.scss?0072","webpack://telegram-t/./src/components/common/AboutAdsModal.tsx","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.module.scss?84a2","webpack://telegram-t/./src/components/middle/DeleteSelectedMessageModal.tsx","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.module.scss?c38f","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/MobileSearch.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/isFullyVisible.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/RightSearch.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.tsx","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.module.scss?dbb9","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/util/launchMediaWorkers.ts"],"sourcesContent":["import type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, standaloneMedia, mediaIndex,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.avatarOwner.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.photo) {\n    return {\n      media: action.photo,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo } = webPage;\n    const media = webPageVideo || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport { isElementInViewport } from '../../../util/isElementInViewport';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [MediaViewerOrigin.Inline, MediaViewerOrigin.ScheduledInline].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  ) || (\n    [MediaViewerOrigin.Album, MediaViewerOrigin.ScheduledAlbum].includes(origin)\n    && !isMessageImageFullyVisible(container, toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(container: HTMLElement, imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n  let imgOffsetTop = container.offsetTop + imageEl.closest<HTMLDivElement>('.content-inner, .WebPage')!.offsetTop;\n  if (container.id.includes('album-media-')) {\n    imgOffsetTop += container.parentElement!.offsetTop + container.closest<HTMLDivElement>('.Message')!.offsetTop;\n  }\n\n  return imgOffsetTop > messageListElement.scrollTop\n    && imgOffsetTop + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useEffect(() => {\n    return () => {\n      setZoomChange(1);\n    };\n  }, []);\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveDownloads, MessageListType } from '../../global/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActions,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReport?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReport: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  isChatProtected,\n  isProtected,\n  canReport,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, mediaIndex } = item;\n    const avatarPhoto = avatarOwner.profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.avatarOwner.profilePhotos!.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <i className=\"icon icon-download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <i className=\"icon icon-download\" />\n      </Button>\n    );\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message') {\n      openDeleteMessageModal({\n        isSchedule: messageListType === 'scheduled',\n        message: item.message,\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReport) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <i className=\"icon icon-forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <i className=\"icon icon-zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <i className=\"icon icon-zoom-in\" />\n      </Button>\n      {canReport && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <i className=\"icon icon-flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <i className=\"icon icon-copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = avatarOwner?.profilePhotos?.photos[item!.mediaIndex!];\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActions(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  onClick: () => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', isForVideo, onClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useEffect(() => {\n    return () => {\n      setCurrentTime(0);\n    };\n  }, []);\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useEffect(() => {\n    return () => {\n      setIsVideoWaiting(false);\n    };\n  }, []);\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon = useMemo(() => {\n    if (volume === 0 || isMuted) return 'icon-muted';\n    if (volume < 0.3) return 'icon-volume-1';\n    if (volume < 0.6) return 'icon-volume-2';\n    return 'icon-volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <i className={buildClassName('icon', isPlaying ? 'icon-pause' : 'icon-play')} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <i className={buildClassName('icon', volumeIcon)} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <i className=\"icon icon-pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <i className={buildClassName('icon ', isFullscreen ? 'icon-smallscreen' : 'icon-fullscreen')} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(!isBuffered && !isUnsupported, undefined, undefined, 'slow');\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, []);\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <i className=\"icon icon-play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  selectIsMessageProtected, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  onClose,\n  onFooterClick,\n}: OwnProps & StateProps) => {\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message: textMessage, forcePlayback: true, isForMediaViewer: true }));\n\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n    } = selectTabState(global).mediaViewer;\n    const textMessage = item.type === 'message' ? item.message : undefined;\n\n    return {\n      origin,\n      textMessage,\n      isProtected: textMessage && selectIsMessageProtected(global, textMessage),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: () => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getSenderTitle, isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatar = avatarOwner?.profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === avatarOwner?.profilePhotos?.fallbackPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = avatarOwner?.profilePhotos?.count\n      && (avatarOwner.profilePhotos.count + (avatarOwner?.profilePhotos?.fallbackPhoto ? 1 : 0));\n    const countText = count && lang('Of', [item.mediaIndex! + 1, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n          : isChannel ? 'lng_mediaview_channel_photo'\n            : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText) parts.push(countText);\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getSenderTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiPhoto,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  chatMessages?: Record<number, ApiMessage>;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  chatMessages,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id;\n  const prevSenderId = usePrevious<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, mediaIndex,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReport = avatarOwner && !isChatWithSelf;\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      document.body.classList.toggle('is-media-viewer-open', isOpen);\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePrevious<ApiMessage | undefined>(message);\n  const prevIsHidden = usePrevious<boolean | undefined>(isHidden);\n  const prevOrigin = usePrevious(origin);\n  const prevItem = usePrevious(currentItem);\n  const prevBestImageData = usePrevious(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.avatarOwner.profilePhotos!.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromAvatarOwner.profilePhotos && nextIndex < fromAvatarOwner.profilePhotos.photos.length) {\n        return { type: 'avatar', avatarOwner: fromAvatarOwner, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = avatarOwner?.profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReport={canReport}\n          onBeforeDelete={handleBeforeDelete}\n          onReport={openReportModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          subject=\"media\"\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = peer?.profilePhotos;\n\n      return {\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../global/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../global/types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <i className=\"icon icon-eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-past', styles.icon)} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<i className={buildClassName('icon icon-stealth-future', styles.icon)} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  usersById: Record<string, ApiUser>;\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  usersById,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterUsersByName([...selectedIds || [], ...contactIds], usersById, searchQuery));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds, usersById]);\n\n  return (\n    <Picker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterUsersByName([...closeFriendIds, ...contactIds], usersById, searchQuery));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery, usersById]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <Picker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiUser } from '../../api/types';\nimport type { ApiPrivacySettings, PrivacyVisibility } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getSenderTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getSenderTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? convertSecondsToHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <i className={`icon icon-${option.icon}`} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <i className=\"icon icon-next\" aria-hidden />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n\nfunction convertSecondsToHours(seconds: number): number {\n  const secondsInHour = 3600;\n  const minutesInHour = 60;\n\n  const hours = Math.floor(seconds / secondsInHour);\n  const remainingSeconds = seconds % secondsInHour;\n  const remainingMinutes = Math.floor(remainingSeconds / minutesInHour);\n\n  // If remaining minutes are greater than or equal to 30, round up the hours\n  return remainingMinutes >= 30 ? hours + 1 : hours;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getSenderTitle,\n  isUserId,\n} from '../../../global/helpers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransition(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport { getStoryKey, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && 'emoticon' in sentReaction\n    ? sentReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={'documentId' in sentReaction ? sentReaction.documentId : sentReaction.emoticon}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../global/types';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getSenderTitle, isChatChannel, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_SAFARI } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isReportModalOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransition(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransition(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransition(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransition(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransition(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransition(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransition(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress(handleLongPressStart, handleLongPressEnd);\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getSenderTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <i className={buildClassName('icon icon-more')} aria-hidden />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <i className={`icon icon-${privacyIcon}`} aria-hidden />\n        {isOut && <i className=\"icon icon-next\" aria-hidden />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getSenderTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getSenderTitle(lang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <i\n                className={buildClassName(\n                  'icon',\n                  isMuted || noSound ? 'icon-speaker-muted-story' : 'icon-speaker-story',\n                )}\n                aria-hidden\n              />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {lang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {lang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>\n                {lang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className={buildClassName('icon icon-close')} aria-hidden />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay story={story} isActive />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || isReportModalOpen || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n  };\n})(Story));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress(\n  onStart: NoneToVoidFunction,\n  onEnd: NoneToVoidFunction,\n) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart();\n      isLongPressActive.current = true;\n    }, DEFAULT_THRESHOLD);\n  }, [onStart]);\n\n  const cancel = useCallback(() => {\n    if (isLongPressActive.current) {\n      onEnd();\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd]);\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(timerId.current);\n    };\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getSenderTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isReportModalOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isReportModalOpen,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePrevious(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isReportModalOpen={isReportModalOpen}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isReportModalOpen={isReportModalOpen}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <i className={buildClassName(\n          'icon',\n          areReactionsFirst ? 'icon-heart-outline' : 'icon-recent',\n          styles.iconSort,\n        )}\n        />\n        <i className={buildClassName('icon icon-down', styles.iconDown)} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <i className={buildClassName('icon icon-check', styles.check)} aria-hidden />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePrevious(isOpen);\n  const prevBestImageData = usePrevious(bestImageData);\n  const prevPeerId = usePrevious(peerId);\n  const prevOrigin = usePrevious(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeReportModal();\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  }, []);\n\n  const handleCloseDeleteModal = useCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  }, []);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className={buildClassName('icon icon-close')} aria-hidden />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isReportModalOpen={isReportModalOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openReportModal}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        subject=\"story\"\n        peerId={peerId!}\n        storyId={storyId}\n      />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { CHAT_HEIGHT_PX } from '../../config';\nimport { getCanPostInChat, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\nimport Transition from '../ui/Transition';\nimport GroupChatInfo from './GroupChatInfo';\nimport PrivateChatInfo from './PrivateChatInfo';\nimport TopicIcon from './TopicIcon';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const topicsResult = forumId ? chatsById[forumId].topics : undefined;\n    if (!topicsResult) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = topicsResult\n      ? Object.values(topicsResult).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chatsById[forumId!], topic.id, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : topicsResult;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!chat.topics) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, '.ListItem-button', true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleClick = useLastCallback((e: React.MouseEvent, chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!chat.topics) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const handleTopicClick = useLastCallback((e: React.MouseEvent, topicId: number) => {\n    onSelectChatOrUser(forumId!, topicId);\n  });\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={!topicIds ? 0 : topicIds.length * CHAT_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {topicIds\n            ? topicIds.map((topicId, i) => (\n              <ListItem\n                key={`${forumId}_${topicId}`}\n                className=\"chat-item-clickable force-rounded-corners small-icon topic-item\"\n                style={`top: ${i * CHAT_HEIGHT_PX}px;`}\n                onClick={handleTopicClick}\n                clickArg={topicId}\n              >\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n                <div dir=\"auto\" className=\"fullName\">{renderText(topics[topicId].title)}</div>\n              </ListItem>\n            ))\n            : <Loading />}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * CHAT_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map((id, i) => (\n              <ListItem\n                key={id}\n                className=\"chat-item-clickable force-rounded-corners small-icon\"\n                style={`height: ${CHAT_HEIGHT_PX}px; top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n                onClick={handleClick}\n                clickArg={id}\n              >\n                {isUserId(id) ? (\n                  <PrivateChatInfo\n                    status={id === currentUserId ? lang('SavedMessagesInfo') : undefined}\n                    userId={id}\n                  />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n              </ListItem>\n            ))}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterChatIdsByType } from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ChatOrUserPicker from './ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chatIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = chatsById[id];\n      const user = usersById[id];\n      if (user && isDeletedUser(user)) return false;\n\n      return chat && getCanPostInChat(chat, MAIN_THREAD_ID, undefined, chatFullInfoById[id]);\n    });\n\n    const sorted = sortChatIds(unique([\n      ...filterChatsByName(lang, chatIds, chatsById, search, currentUserId),\n      ...(contactIds && filter.includes('users') ? filterUsersByName(contactIds, usersById, search) : []),\n    ]), undefined, priorityIds);\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, lang, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePrevious(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError, ApiInviteInfo, ApiPhoto,\n} from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiInviteInfo | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    acceptInviteConfirmation,\n    sendMessage,\n    showNotification,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  function renderInviteHeader(title: string, photo?: ApiPhoto) {\n    return (\n      <div className=\"modal-header\">\n        {photo && <Avatar size=\"small\" photo={photo} withVideo />}\n        <div className=\"modal-title\">\n          {renderText(title)}\n        </div>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={closeModal}>\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    );\n  }\n\n  const renderInvite = (invite: ApiInviteInfo) => {\n    const {\n      hash, title, about, participantsCount, isChannel, photo, isRequestNeeded,\n    } = invite;\n\n    const handleJoinClick = () => {\n      acceptInviteConfirmation({\n        hash,\n      });\n      if (isRequestNeeded) {\n        showNotification({\n          message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n        });\n      }\n      closeModal();\n    };\n\n    const participantsText = isChannel\n      ? lang('Subscribers', participantsCount, 'i')\n      : lang('Members', participantsCount, 'i');\n\n    const joinText = isChannel ? lang('ChannelJoin') : lang('JoinGroup');\n    const requestToJoinText = isChannel\n      ? lang('MemberRequests.RequestToJoinChannel') : lang('MemberRequests.RequestToJoinGroup');\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"error\"\n        header={renderInviteHeader(title, photo)}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {participantsCount !== undefined && <p className=\"modal-help\">{participantsText}</p>}\n        {about && <p className=\"modal-about\">{renderText(about, ['br'])}</p>}\n        {isRequestNeeded && (\n          <p className=\"modal-help\">\n            {isChannel\n              ? lang('MemberRequests.RequestToJoinDescriptionChannel')\n              : lang('MemberRequests.RequestToJoinDescriptionGroup')}\n          </p>\n        )}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            className=\"confirm-dialog-button\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleJoinClick}\n          >\n            {isRequestNeeded ? requestToJoinText : joinText}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiInviteInfo | ApiContact) => {\n    if ('hash' in dialog) {\n      return renderInvite(dialog);\n    }\n\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  const { dismissNotification } = getActions();\n\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map(({\n        message, className, localId, action, actionText, title, duration,\n      }) => (\n        <Notification\n          title={title ? renderText(title, ['simple_markdown', 'emoji', 'br', 'links']) : undefined}\n          action={action}\n          actionText={actionText}\n          className={className}\n          duration={duration}\n          message={renderText(message, ['simple_markdown', 'emoji', 'br', 'links'])}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={() => dismissNotification({ localId })}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"eha3Z6eU\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nimport styles from './UrlAuthModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n          className={styles.checkbox}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { LangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePrevious(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <i className=\"icon icon-previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <i className=\"icon icon-next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: LangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.valueOf() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        closeWebApp();\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n\n        showNotification({\n          message: 'Clipboard access is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [isSimpleView, sendEvent, onEvent, sendCustomStyle, sendTheme, sendViewport, onLoad, windowSize.isResizing]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, windowSize]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, sendViewport, ref]);\n\n  return {\n    sendEvent, reloadFrame, sendViewport, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport type { PopupOptions, WebAppInboundEvent } from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport {\n  selectCurrentChat, selectTabState, selectTheme, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApp'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst PROLONG_INTERVAL = 45000; // 45s\nconst ANIMATION_WAIT = 400;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst LUMA_THRESHOLD = 128;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n}) => {\n  const {\n    closeWebApp,\n    sendWebViewData,\n    prolongWebView,\n    toggleAttachBot,\n    openTelegramLink,\n    openChat,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [isBackButtonVisible, setIsBackButtonVisible] = useState(false);\n  const [isSettingsButtonVisible, setIsSettingsButtonVisible] = useState(false);\n\n  const [backgroundColor, setBackgroundColor] = useState<string>();\n  const [headerColor, setHeaderColor] = useState<string>();\n\n  const [shouldConfirmClosing, setShouldConfirmClosing] = useState(false);\n  const [isCloseModalOpen, openCloseModal, hideCloseModal] = useFlag(false);\n  const [isRemoveModalOpen, openRemoveModal, hideRemoveModal] = useFlag(false);\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequesingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    const themeParams = extractCurrentThemeParams();\n    setBackgroundColor(themeParams.bg_color);\n    setHeaderColor(themeParams.bg_color);\n  }, []);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const lang = useOldLang();\n  const {\n    url, buttonText, queryId, replyInfo,\n  } = modal || {};\n  const isOpen = Boolean(url);\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendViewport, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isSimple, handleEvent, markLoaded);\n\n  const shouldShowMainButton = mainButton?.isVisible && mainButton.text.trim().length > 0;\n\n  useInterval(() => {\n    prolongWebView({\n      botId: bot!.id,\n      queryId: queryId!,\n      peerId: chat!.id,\n      replyInfo,\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(modal!.url);\n  });\n\n  const handleClose = useLastCallback(() => {\n    if (shouldConfirmClosing) {\n      openCloseModal();\n    } else {\n      closeWebApp();\n    }\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n    }, ANIMATION_WAIT);\n  }, [mainButton?.isVisible, sendViewport]);\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendTheme();\n    }, ANIMATION_WAIT);\n  }, [theme, sendTheme]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (modal?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: modal.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, modal?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeWebApp();\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      openRemoveModal();\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleClose();\n    }\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    const result = await callApi('allowBotSendMessages', { bot: bot! });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot: bot!,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n    closeWebApp();\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      const themeParams = extractCurrentThemeParams();\n\n      setShouldConfirmClosing(false);\n      hideCloseModal();\n      hideRemoveModal();\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setIsBackButtonVisible(false);\n      setIsSettingsButtonVisible(false);\n      setBackgroundColor(themeParams.bg_color);\n      setHeaderColor(themeParams.bg_color);\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n    if (eventType === 'web_app_open_tg_link' && !isPaymentModalOpen) {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl });\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      setIsBackButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      setIsSettingsButtonVisible(eventData.is_visible);\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.bg_color;\n      setBackgroundColor(color);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      if (eventData.color_key) {\n        const themeParams = extractCurrentThemeParams();\n        const key = eventData.color_key;\n        const newColor = themeParams[key];\n        const color = validateHexColor(newColor) ? newColor : headerColor;\n        setHeaderColor(color);\n      }\n\n      if (eventData.color) {\n        const color = validateHexColor(eventData.color) ? eventData.color : headerColor;\n        setHeaderColor(color);\n      }\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const themeParams = extractCurrentThemeParams();\n      const color = validateHexColor(eventData.color) ? eventData.color : themeParams.button_color;\n      const textColor = validateHexColor(eventData.text_color) ? eventData.text_color : themeParams.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text || '',\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      setShouldConfirmClosing(eventData.need_confirmation);\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n      || eventData.buttons.length > 3 || isRequestingPhone || isRequesingWriteAccess\n      || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequesingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n  }\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={buildClassName(styles.moreButton, isMenuOpen && 'active')}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme]);\n\n  function renderHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        <DropdownMenu\n          className=\"web-app-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          {chat && bot && chat.id !== bot.id && (\n            <MenuItem icon=\"bots\" onClick={openBotChat}>{lang('BotWebViewOpenBot')}</MenuItem>\n          )}\n          <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{lang('WebApp.ReloadPage')}</MenuItem>\n          {isSettingsButtonVisible && (\n            <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n              {lang('Settings')}\n            </MenuItem>\n          )}\n          {bot?.isAttachBot && (\n            <MenuItem\n              icon={attachBot ? 'stop' : 'install'}\n              onClick={handleToggleClick}\n              destructive={Boolean(attachBot)}\n            >\n              {lang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n            </MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  const prevMainButtonColor = usePrevious(mainButton?.color, true);\n  const prevMainButtonTextColor = usePrevious(mainButton?.textColor, true);\n  const prevMainButtonIsActive = usePrevious(mainButton && Boolean(mainButton.isActive), true);\n  const prevMainButtonText = usePrevious(mainButton?.text, true);\n\n  const mainButtonCurrentColor = mainButton?.color || prevMainButtonColor;\n  const mainButtonCurrentTextColor = mainButton?.textColor || prevMainButtonTextColor;\n  const mainButtonCurrentIsActive = mainButton?.isActive !== undefined ? mainButton.isActive : prevMainButtonIsActive;\n  const mainButtonCurrentText = mainButton?.text || prevMainButtonText;\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideButton, setShouldHideButton] = useState(true);\n\n  const buttonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (buttonChangeTimeout.current) clearTimeout(buttonChangeTimeout.current);\n    if (!shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldHideButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    } else {\n      setShouldHideButton(false);\n      buttonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowMainButton]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={handleClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor}`}\n    >\n      <Spinner className={buildClassName(styles.loadingSpinner, isLoaded && styles.hide)} />\n      {isOpen && (\n        <>\n          <iframe\n            className={buildClassName(styles.frame, shouldDecreaseWebFrameSize && styles.withButton)}\n            src={url}\n            title={`${bot?.firstName} Web App`}\n            sandbox={SANDBOX_ATTRIBUTES}\n            allow=\"camera; microphone; geolocation;\"\n            allowFullScreen\n            ref={frameRef}\n          />\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && styles.visible,\n              shouldHideButton && styles.hidden,\n            )}\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive}\n            onClick={handleMainButtonClick}\n          >\n            {mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </>\n      )}\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={lang('ShareYouPhoneNumberTitle')}\n        text={lang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={lang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequesingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={lang('lng_bot_allow_write_title')}\n        text={lang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={lang('lng_bot_allow_write_confirm')}\n      />\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || lang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={hideCloseModal}\n        title={lang('lng_bot_close_warning_title')}\n        text={lang('lng_bot_close_warning')}\n        confirmHandler={closeWebApp}\n        confirmIsDestructive\n        confirmLabel={lang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={hideRemoveModal}\n        title={lang('BotRemoveFromMenuTitle')}\n        textParts={renderText(lang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { botId } = modal || {};\n    const attachBot = botId ? global.attachMenu.bots[botId] : undefined;\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status } = selectTabState(global).payment;\n    const { isStarPaymentModalOpen } = selectTabState(global);\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || isStarPaymentModalOpen,\n      paymentStatus: status,\n    };\n  },\n)(WebAppModal));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePrevious(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  icon: string;\n  isFontIcon?: boolean;\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n};\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <i\n          className={buildClassName(styles.fontIcon, `icon icon-${icon}`)}\n          aria-hidden\n          style={`--item-color: rgb(${r},${g},${b})`}\n        />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <i className=\"icon icon-previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <i className=\"icon icon-next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <i className={buildClassName(styles.floatingBadgeIcon, `icon-${floatingBadgeIcon}`, 'icon')} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = 5.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type { ApiPremiumPromo, ApiPremiumSubscriptionOption } from '../../../api/types';\nimport type { ApiLimitTypeForPromo, ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePrevious(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium ? lang('OK') : lang('SubscribeToPremium', formatCurrency(perMonthPrice, currency, lang.code));\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const lang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={lang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {lang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrency(amount, currency, lang.code)} x ${users!}`\n            : lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrency(amount, currency, lang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { ApiPremiumSection, GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const stickerSetTitle = useMemo(() => {\n    if (!fromUserStatusSet || !fromUser) return undefined;\n\n    const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n    const [first, second] = template.split('{link}');\n\n    const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n      <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n    ) : undefined;\n    const link = (\n      <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n        {emoji}{renderText(fromUserStatusSet.title)}\n      </span>\n    );\n    return [renderText(first), link, renderText(second)];\n  }, [fromUser, fromUserStatusSet, lang]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      perMonthPrice,\n      currency,\n      lang.code,\n    );\n  }, [selectedSubscriptionOption, lang.code]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n        : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]);\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n      : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium');\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {fromUserStatusSet ? stickerSetTitle : renderText(getHeaderText(), ['simple_markdown', 'emoji'])}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDialog\":\"PMXzSiTT\",\"closeButton\":\"j3gx2vFZ\",\"avatars\":\"yIKcy5ir\",\"center\":\"EIXAUV27\",\"description\":\"TJy4zGvM\",\"premiumFeatures\":\"JqQfM_r9\",\"options\":\"eXU0NjiF\",\"boostIcon\":\"ZsR31o4m\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumGiftCodeOption,\n} from '../../../api/types';\n\nimport { BOOST_PER_SENT_GIFT } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Link from '../../ui/Link';\nimport Modal from '../../ui/Modal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiftPremiumModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  isCompleted?: boolean;\n  gifts?: ApiPremiumGiftCodeOption[] | undefined;\n  forUserIds?: string[];\n  boostPerSentGift?: number;\n};\n\nconst GiftPremiumModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  isCompleted,\n  gifts,\n  boostPerSentGift = BOOST_PER_SENT_GIFT,\n  forUserIds,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  const {\n    openPremiumModal, closeGiftPremiumModal, openInvoice, requestConfetti,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n\n  const selectedUserQuantity = forUserIds && forUserIds.length * boostPerSentGift;\n\n  useEffect(() => {\n    if (forUserIds?.length) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [gifts, forUserIds]);\n\n  const giftingUserList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => usersById[userId]).filter(Boolean);\n  }, [forUserIds]);\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === forUserIds?.length);\n  }, [gifts, selectedMonthOption, forUserIds?.length]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users\n      === forUserIds?.length);\n  }, [gifts, forUserIds?.length]);\n\n  const fullMonthlyGiftAmount = useMemo(() => {\n    if (!filteredGifts?.length) {\n      return undefined;\n    }\n\n    const basicGift = filteredGifts.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    });\n\n    return Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const handleSubmit = useLastCallback(() => {\n    if (!selectedGift) {\n      return;\n    }\n\n    openInvoice({\n      type: 'giftcode',\n      userIds: forUserIds!,\n      currency: selectedGift!.currency,\n      amount: selectedGift!.amount,\n      option: selectedGift!,\n    });\n  });\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isCompleted) {\n      showConfetti();\n    }\n  }, [isCompleted, showConfetti]);\n\n  const userNameList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return forUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [forUserIds]);\n\n  function renderGiftTitle() {\n    if (isCompleted) {\n      return renderText(lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle',\n        [userNameList, selectedGift?.months]), ['simple_markdown']);\n    }\n\n    return lang('GiftTelegramPremiumTitle');\n  }\n\n  function renderGiftText() {\n    if (isCompleted) {\n      return renderText(lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', userNameList),\n        ['simple_markdown']);\n    }\n    return renderText(lang('GiftPremiumUsersGiveAccessManyZero', userNameList), ['simple_markdown']);\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    // Translation hack for rendering component inside string\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={buildClassName(styles.premiumFeatures, styles.center)}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function renderBoostsPluralText() {\n    const giftParts = renderText(lang('GiftPremiumWillReceiveBoostsPlural', selectedUserQuantity), ['simple_markdown']);\n    return giftParts.map((part) => {\n      if (typeof part === 'string') {\n        return part.split(/(⚡)/g).map((subpart) => {\n          if (subpart === '⚡') {\n            return <Icon name=\"boost\" className={styles.boostIcon} />;\n          }\n          return subpart;\n        });\n      }\n      return part;\n    });\n  }\n\n  function renderSubscriptionGiftOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {filteredGifts?.map((gift) => {\n          return (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={gift.months}\n              option={gift}\n              fullMonthlyAmount={fullMonthlyGiftAmount}\n              checked={gift.months === selectedMonthOption}\n              onChange={setSelectedMonthOption}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={dialogRef}\n      onClose={closeGiftPremiumModal}\n      isOpen={isOpen}\n      className={styles.modalDialog}\n    >\n      <div className=\"custom-scroll\">\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeGiftPremiumModal()}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className={styles.avatars}>\n          <AvatarList\n            size=\"large\"\n            peers={giftingUserList}\n          />\n        </div>\n        <h2 className={buildClassName(styles.headerText, styles.center)}>\n          {renderGiftTitle()}\n        </h2>\n        <p className={buildClassName(styles.description, styles.center)}>\n          {renderGiftText()}\n        </p>\n        {!isCompleted && (\n          <>\n            <p className={styles.description}>\n              {renderText(renderBoostsPluralText(), ['simple_markdown', 'emoji'])}\n            </p>\n\n            <div className={styles.options}>\n              {renderSubscriptionGiftOptions()}\n            </div>\n          </>\n        )}\n        {renderPremiumFeaturesLink()}\n      </div>\n\n      {!isCompleted && (\n        <Button withPremiumGradient className={styles.button} isShiny disabled={!selectedGift} onClick={handleSubmit}>\n          {lang(\n            'GiftSubscriptionFor', selectedGift\n            && formatCurrency(selectedGift!.amount, selectedGift.currency, lang.code),\n          )}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    gifts, forUserIds, isCompleted,\n  } = selectTabState(global).giftPremiumModal || {};\n\n  return {\n    isCompleted,\n    gifts,\n    boostPerSentGift: global.appConfig?.boostsPerSentGift,\n    forUserIds,\n  };\n})(GiftPremiumModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport Picker from './Picker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePrevious(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList\n      .filter((country) => !country.isHidden)\n      .map((country) => country.iso2);\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <Picker\n          className={styles.picker}\n          itemIds={displayedIds}\n          selectedIds={selectedCountryIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          isCountryList\n          countryList={countryList}\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fAO_fMJD\",\"main\":\"vtyWYWNc\",\"filter\":\"OM3FgjkD\",\"title\":\"d3EvpDij\",\"buttons\":\"w2D1Ddo7\",\"picker\":\"dWDj6lW6\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUserStatus } from '../../api/types';\n\nimport {\n  filterChatsByName,\n  filterUsersByName, isChatChannel, isChatPublic, isChatSuperGroup, isUserBot, sortUserIds,\n} from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from '../common/helpers/sortChatIds';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Picker from '../common/Picker';\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Modal from '../ui/Modal';\n\nimport styles from './AppendEntityPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  chatId?: string;\n  entityType: 'members' | 'channels' | undefined;\n  onSubmit: (value: string[]) => void;\n  selectionLimit: number;\n};\n\ninterface StateProps {\n  chatId?: string;\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  channelList?: (ApiChat | undefined)[] | undefined;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  currentUserId?: string | undefined;\n}\n\nconst AppendEntityPickerModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  isOpen,\n  onClose,\n  members,\n  adminMembersById,\n  userStatusesById,\n  entityType,\n  isChannel,\n  isSuperGroup,\n  onSubmit,\n  currentUserId,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const channelsIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    const activeChatIds = getGlobal().chats.listIds.active;\n\n    return activeChatIds!.map((id) => chatsById[id])\n      .filter((chat) => chat && (isChatChannel(chat)\n        || isChatSuperGroup(chat)) && chat.id !== chatId)\n      .map((chat) => chat!.id);\n  }, [chatId]);\n\n  const adminIds = useMemo(() => {\n    return adminMembersById && Object.keys(adminMembersById);\n  }, [adminMembersById]);\n\n  const memberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return adminIds ? userIds.filter((userId) => userId !== currentUserId) : userIds;\n  }, [adminIds, currentUserId, members, userStatusesById]);\n\n  const displayedMembersIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = memberIds ? filterUsersByName(memberIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const displayedChannelIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    const foundChannelIds = channelsIds ? filterChatsByName(lang, channelsIds, chatsById, searchQuery) : [];\n\n    return sortChatIds(unique(foundChannelIds).filter((contactId) => {\n      const chat = chatsById[contactId];\n      if (!chat) {\n        return true;\n      }\n\n      return isChannel || isSuperGroup;\n    }),\n    false,\n    selectedIds);\n  }, [channelsIds, lang, searchQuery, selectedIds, isSuperGroup, isChannel]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    onSubmit([]);\n    onClose();\n  });\n\n  const handleSendIdList = useLastCallback(() => {\n    onSubmit(selectedIds);\n    onClose();\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds((prevIds) => unique([...prevIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const handleClose = useLastCallback(() => {\n    onSubmit([]);\n    onClose();\n  });\n\n  function renderSearchField() {\n    return (\n      <div className={styles.filter} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleCloseButtonClick}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <h3 className={styles.title}>{lang(entityType === 'channels'\n          ? 'RequestPeer.ChooseChannelTitle' : 'BoostingAwardSpecificUsers')}\n        </h3>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onEnter={handleSendIdList}\n    >\n      <div className={styles.main}>\n        {renderSearchField()}\n        <div className={buildClassName(styles.main, 'custom-scroll')}>\n          <Picker\n            className={styles.picker}\n            itemIds={entityType === 'members' ? displayedMembersIds : displayedChannelIds}\n            selectedIds={selectedIds}\n            filterValue={searchQuery}\n            filterPlaceholder={lang('Search')}\n            searchInputId={`${entityType}-picker-search`}\n            onSelectedIdsChange={entityType === 'channels'\n              ? handleSelectedChannelIdsChange : handleSelectedMemberIdsChange}\n            onFilterChange={setSearchQuery}\n            isSearchable\n          />\n        </div>\n        <div className={styles.buttons}>\n          <Button size=\"smaller\" onClick={handleSendIdList}>\n            {lang('Save')}\n          </Button>\n        </div>\n      </div>\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId, entityType }): StateProps => {\n  const { statusesById: userStatusesById } = global.users;\n  let isChannel;\n  let isSuperGroup;\n  let members: ApiChatMember[] | undefined;\n  let adminMembersById: Record<string, ApiChatMember> | undefined;\n  let currentUserId: string | undefined;\n\n  if (entityType === 'members') {\n    currentUserId = global.currentUserId;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    if (chatFullInfo) {\n      members = chatFullInfo.members;\n      adminMembersById = chatFullInfo.adminMembersById;\n    }\n  } if (entityType === 'channels') {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    if (chat) {\n      isChannel = isChatChannel(chat);\n      isSuperGroup = isChatSuperGroup(chat);\n    }\n  }\n\n  return {\n    chatId,\n    members,\n    adminMembersById,\n    userStatusesById,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n  };\n})(AppendEntityPickerModal));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'random_users' | 'specific_users';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry, ApiPremiumGiftCodeOption, ApiPrepaidGiveaway, ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport AppendEntityPickerModal from '../AppendEntityPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiveawayUsersRound from '../../../assets/premium/GiveawayUsersRound.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiPrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n};\n\ntype GiveawayAction = 'createRandomlyUsers' | 'createSpecificUsers';\ntype ApiGiveawayType = 'random_users' | 'specific_users';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isEntityPickerModalOpen, openEntityPickerModal, closeEntityPickerModal] = useFlag();\n  const [entityType, setEntityType] = useState<'members' | 'channels' | undefined>(undefined);\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'BoostingCreateGiveaway',\n    text: 'BoostingWinnersRandomly',\n    value: 'random_users',\n    img: GiftBlueRound,\n    actions: 'createRandomlyUsers',\n    isLink: false,\n  }, {\n    name: 'BoostingAwardSpecificUsers',\n    text: 'BoostingSelectRecipients',\n    value: 'specific_users',\n    img: GiveawayUsersRound,\n    actions: 'createSpecificUsers',\n    isLink: true,\n    onClickAction: () => {\n      openEntityPickerModal();\n      setEntityType('members');\n    },\n  }];\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedUserCount, setSelectedUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountriesIds, setSelectedCountriesIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const isRandomUsers = selectedGiveawayOption === 'random_users';\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountriesIds && selectedCountriesIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountriesIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountriesIds && selectedCountriesIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountriesIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountriesIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n\n  const selectedGift = useMemo(() => {\n    return gifts!.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users\n      === (selectedUserIds?.length ? selectedUserIds?.length : selectedUserCount));\n  }, [gifts, selectedUserIds, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    if (!filteredGifts?.length) {\n      return undefined;\n    }\n\n    const basicGift = filteredGifts.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    });\n\n    return Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    const uniqueUserCounts = new Set(gifts?.map((gift) => gift.users));\n    return Array.from(uniqueUserCounts).sort((a, b) => a - b);\n  }, [gifts]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setSelectedMonthOption(prepaidGiveaway ? prepaidGiveaway.months : gifts?.[0].months);\n    }\n  }, [gifts, isOpen, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (prepaidGiveaway) {\n      setSelectedUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedUserIds?.length) {\n      openInvoice({\n        type: 'giftcode',\n        boostChannelId: chatId!,\n        userIds: selectedUserIds,\n        currency: selectedGift!.currency,\n        amount: selectedGift!.amount,\n        option: selectedGift!,\n      });\n    } else {\n      openInvoice({\n        type: 'giveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountriesIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedGift!.currency,\n        amount: selectedGift!.amount,\n        option: selectedGift!,\n      });\n    }\n\n    closeGiveawayModal();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    launchPrepaidGiveaway({\n      chatId: chatId!,\n      giveawayId: dataPrepaidGiveaway!.id,\n      paymentPurpose: {\n        additionalChannelIds: selectedChannelIds,\n        countries: selectedCountriesIds,\n        prizeDescription,\n        areWinnersVisible: shouldShowWinners,\n        untilDate: customExpireDate / 1000,\n        currency: selectedGift!.currency,\n        amount: selectedGift!.amount,\n      },\n    });\n\n    closeConfirmModal();\n    closeGiveawayModal();\n  });\n\n  const handleUserCountChange = useLastCallback((newValue) => {\n    setSelectedUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  const handleAdd = useLastCallback(() => {\n    openEntityPickerModal();\n    setEntityType('channels');\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountriesIds(value);\n  });\n\n  const handleSetIdsListChange = useLastCallback((value: string[]) => {\n    return entityType === 'members'\n      ? (value?.length ? setSelectedUserIds(value) : setGiveawayOption('random_users'))\n      : setSelectedChannelIds(value);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeGiveawayModal();\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  if (!gifts) return undefined;\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {dataPrepaidGiveaway ? (\n          <div className={styles.status}>\n            <div>\n              <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway.months]} alt=\"\" />\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway.quantity)}\n              </h3>\n              <p className={styles.month}>{lang('PrepaidGiveawayMonths', dataPrepaidGiveaway.months)}</p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataPrepaidGiveaway.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isRandomUsers && (\n          <>\n            {!dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingChannelsIncludedGiveaway')}\n              </h2>\n\n              <ListItem\n                inactive\n                className=\"chat-item-clickable contact-list-item\"\n              >\n                <GroupChatInfo\n                  chatId={chatId!}\n                  status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                    : 'BoostingGroupWillReceiveBoost', boostQuantity, 'i')}\n                />\n              </ListItem>\n\n              {selectedChannelIds?.map((channelId) => {\n                return (\n                  <ListItem\n                    ripple\n                    key={channelId}\n                    className=\"chat-item-clickable contact-list-item\"\n                    /* eslint-disable-next-line react/jsx-no-bind */\n                    onClick={() => deleteParticipantsHandler(channelId)}\n                    rightElement={(<Icon name=\"close\" />)}\n                  >\n                    <GroupChatInfo\n                      chatId={channelId.toString()}\n                    />\n                  </ListItem>\n                );\n              })}\n\n              {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n                <ListItem\n                  icon=\"add\"\n                  ripple\n                  onClick={handleAdd}\n                  className={styles.addButton}\n                  iconClassName={styles.addChannel}\n                >\n                  {lang('BoostingAddChannelOrGroup')}\n                </ListItem>\n              )}\n            </div>\n\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingEligibleUsers')}\n              </h2>\n\n              {renderSubscribersOptions()}\n            </div>\n\n            <div className={styles.subscription}>\n              {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n            </div>\n\n            <div className={styles.section}>\n              <div className={styles.checkboxSection}>\n                <h2 className={styles.title}>\n                  {lang('BoostingGiveawayAdditionalPrizes')}\n                </h2>\n\n                <Switcher\n                  label={lang('BoostingGiveawayAdditionalPrizes')}\n                  checked={shouldShowPrizes}\n                  onChange={handleShouldShowPrizesChange}\n                />\n              </div>\n\n              {shouldShowPrizes && (\n                <div className={styles.prizesSection}>\n                  <h2 className={styles.title}>\n                    {dataPrepaidGiveaway ? dataPrepaidGiveaway.quantity : selectedUserCount}\n                  </h2>\n                  <InputText\n                    className={styles.prizesInput}\n                    value={prizeDescription}\n                    onChange={handlePrizeDescriptionChange}\n                    label={lang('BoostingGiveawayEnterYourPrize')}\n                  />\n                </div>\n              )}\n            </div>\n\n            {shouldShowPrizes ? (\n              <div className={styles.subscription}>\n                {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                  dataPrepaidGiveaway\n                    ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                    : [selectedUserCount, prizeDescription, monthQuantity],\n                  undefined,\n                  selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                  dataPrepaidGiveaway\n                    ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                    : [selectedUserCount, monthQuantity],\n                  undefined,\n                  selectedMonthOption), ['simple_markdown'])}\n              </div>\n            ) : (\n              <div className={styles.subscription}>\n                {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n              </div>\n            )}\n\n            <div className={styles.section}>\n              <div className={styles.checkboxSection}>\n                <h2 className={styles.title}>\n                  {lang('BoostingGiveawayShowWinners')}\n                </h2>\n\n                <Switcher\n                  label={lang('BoostingGiveawayAdditionalPrizes')}\n                  checked={shouldShowWinners}\n                  onChange={handleShouldShowWinnersChange}\n                />\n              </div>\n            </div>\n\n            <div className={styles.subscription}>\n              {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n            </div>\n\n            <div className={buildClassName(styles.section, dataPrepaidGiveaway && styles.subscriptionFooter)}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDateWhenGiveawayEnds')}\n              </h2>\n\n              <Button\n                ariaLabel={lang('BoostGift.DateEnds')}\n                className={buildClassName(styles.dateButton, 'expire-limit')}\n                isText\n                onClick={openCalendar}\n              >\n                <h3 className={styles.title}>\n                  {lang('BoostGift.DateEnds')}\n                </h3>\n                {formatDateTimeToString(customExpireDate, lang.code)}\n              </Button>\n            </div>\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button className={styles.button} onClick={dataPrepaidGiveaway ? openConfirmModal : handleClick}>\n              {lang('BoostingStartGiveaway')}\n              <div className={styles.quantity}>\n                <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeButtonColor)}>\n                  <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                  <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                    {dataPrepaidGiveaway ? dataPrepaidGiveaway.quantity : boostQuantity}\n                  </div>\n                </div>\n              </div>\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <AppendEntityPickerModal\n        key={entityType}\n        isOpen={isEntityPickerModalOpen}\n        onClose={closeEntityPickerModal}\n        entityType={entityType}\n        chatId={chatId}\n        onSubmit={handleSetIdsListChange}\n        selectionLimit={entityType === 'members' ? userSelectionLimit : GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n  };\n})(GiveawayModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"cKwZp5xA\",\"main\":\"bo8ICYep\",\"filter\":\"HK8ZNKHl\",\"title\":\"LUU19p8W\",\"buttons\":\"CdZFeuxb\",\"picker\":\"JBzw9a0l\",\"avatars\":\"UAhbe3L3\",\"center\":\"JZ7y_T5c\",\"description\":\"OySCJvvR\",\"premiumFeatures\":\"CrYMy2g6\",\"options\":\"IRkNlxtz\",\"button\":\"HIPk0a6e\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { GIVEAWAY_MAX_ADDITIONAL_CHANNELS } from '../../../config';\nimport {\n  filterUsersByName, isUserBot,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Picker from '../../common/Picker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PremiumGiftingModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  userSelectionLimit?: number;\n  userIds?: string[];\n}\n\nconst PremiumGiftingModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  userIds,\n}) => {\n  const { closePremiumGiftingModal, openGiftPremiumModal, showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedUserIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredContactIds = userIds ? filterUsersByName(userIds, usersById, searchQuery) : [];\n\n    return sortChatIds(unique(filteredContactIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user) && userId !== currentUserId;\n    }));\n  }, [currentUserId, searchQuery, userIds]);\n\n  const handleSendIdList = useLastCallback(() => {\n    if (selectedUserIds?.length) {\n      openGiftPremiumModal({ forUserIds: selectedUserIds });\n\n      closePremiumGiftingModal();\n    }\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > userSelectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', userSelectionLimit),\n      });\n      return;\n    }\n    setSelectedUserIds(newSelectedIds);\n  });\n\n  function renderSearchField() {\n    return (\n      <div className={styles.filter} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closePremiumGiftingModal()}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <h3 className={styles.title}>{lang('GiftTelegramPremiumTitle')}\n        </h3>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={closePremiumGiftingModal}\n      onEnter={handleSendIdList}\n    >\n      <div className={styles.main}>\n        {renderSearchField()}\n        <div className={buildClassName(styles.main, 'custom-scroll')}>\n          <Picker\n            className={styles.picker}\n            itemIds={displayedUserIds}\n            selectedIds={selectedUserIds}\n            filterValue={searchQuery}\n            filterPlaceholder={lang('Search')}\n            searchInputId=\"users-picker-search\"\n            onSelectedIdsChange={handleSelectedUserIdsChange}\n            onFilterChange={setSearchQuery}\n            isSearchable\n          />\n        </div>\n        <div className={styles.buttons}>\n          <Button withPremiumGradient size=\"smaller\" onClick={handleSendIdList} disabled={!selectedUserIds?.length}>\n            {lang('Continue')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { currentUserId } = global;\n\n  return {\n    currentUserId,\n    userIds: global.contactList?.userIds,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n  };\n})(PremiumGiftingModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../global/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: LangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: LangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll(\n        containerRef.current!,\n        stickerSetEl,\n        'start',\n        FOCUS_MARGIN,\n        isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      );\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const hasOnlyStaticThumb = hasStaticThumb && !hasVideoThumb && !hasAnimatedThumb && !thumbCustomEmojiId;\n\n  const shouldFallbackToStatic = hasOnlyStaticThumb || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb);\n  const staticHash = shouldFallbackToStatic && getStickerMediaHash(stickerSet.stickers![0], 'preview');\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransition(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTimeOffset } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuPosition);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n\n  const getLayout = () => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: sticker,\n      expires: Date.now() / 1000 + duration + getServerTimeOffset(),\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Lu0K9UZP\",\"selected\":\"UF8XKO4C\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCoordsInSharedCanvas from '../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport CustomEmoji from './CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReaction) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransition(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={mediaData}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransition(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSet);\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiReaction, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique } from '../../util/iteratees';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: lang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []);\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: lang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, lang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleReactionSelect = useLastCallback((reaction: ApiReaction) => {\n    onReactionSelect?.(reaction);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !loadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={handleReactionSelect}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n\n    return {\n      customEmojisById: !isStatusPicker ? customEmojisById : undefined,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateInFuture } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, chat);\n  }, [chat, lang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(lang, prevBoostedChat);\n  }, [prevBoostedChat, lang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: lang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = lang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? lang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = lang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? lang('BoostChannel') : lang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = lang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = lang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = lang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = lang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, lang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {lang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {lang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : lang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(lang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {lang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {lang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={lang('OK')}\n          title={lang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            lang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatDateInFuture(lang, getServerTime(), boost!.cooldownUntil),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={lang('Common.Yes')}\n          title={lang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(lang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"cell\":\"Cnh5ENvm\",\"logo\":\"jbiW0GE8\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiWebDocument } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string };\n\nexport type TableData = [TeactNode, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerImageUrl?: string;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  headerAvatarWebPhoto?: ApiWebDocument;\n  noHeaderImage?: boolean;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerImageUrl,\n  headerAvatarPeer,\n  headerAvatarWebPhoto,\n  noHeaderImage,\n  header,\n  footer,\n  buttonText,\n  className,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  const withAvatar = Boolean(headerAvatarPeer || headerAvatarWebPhoto);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      isSlim\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {!noHeaderImage && (\n        withAvatar ? (\n          <Avatar peer={headerAvatarPeer} webPhoto={headerAvatarWebPhoto} size=\"jumbo\" className={styles.avatar} />\n        ) : (\n          <img className={styles.logo} src={headerImageUrl} alt=\"\" draggable={false} />\n        )\n      )}\n      {header}\n      <table className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <tr className={styles.row}>\n            <td className={buildClassName(styles.cell, styles.title)}>{label}</td>\n            <td className={buildClassName(styles.cell, styles.value)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PickerSelectedItem\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  fluid\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </td>\n          </tr>\n        ))}\n      </table>\n      {footer}\n      {buttonText && (\n        <Button onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      headerImageUrl={PremiumLogo}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = hasChatsToAdd\n    ? lang('FolderLinkSubtitleChats', [newChatsCount, folder.title], undefined, newChatsCount)\n    : lang('FolderLinkSubtitleAlready', folder.title);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(suggestedPeerIds);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <Picker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(lang('FolderLinkSubtitle', invite.title), ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {lang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n          </div>\n        </div>\n        <Picker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkButtonAdd', invite.title)}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePrevious(modal) || modal;\n  const renderingFolder = usePrevious(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) return renderingFolder.title;\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) return renderingInfo.invite.title;\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: string) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab className={styles.folder} isActive badgeCount={folderTabNumber} isBadgeActive title={folderTitle} />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TtE8LQNJ\",\"transition\":\"nXQS4E59\",\"main\":\"JuWZY1ds\",\"section\":\"lYkNd_gb\",\"secondaryInfo\":\"fBublGG8\",\"logo\":\"sjhpNB8l\",\"logoBackground\":\"jjESKN3H\",\"headerHext\":\"xbpAOr37\",\"description\":\"teXilLxe\",\"header\":\"fnhXotO2\",\"starHeaderText\":\"iUwego5s\",\"hiddenHeader\":\"DZk6d6hF\",\"closeButton\":\"piD1PXHW\",\"balance\":\"LitvQduT\",\"smallerText\":\"rUnPcfmE\",\"balanceBottom\":\"F5BTkZ9G\",\"modalBalance\":\"t8tMrx3y\",\"options\":\"qPBycZTv\",\"option\":\"UJPk4YLZ\",\"optionTop\":\"uYCOjzEO\",\"stackedStars\":\"uulRH8gY\",\"stackedStar\":\"pXdx3arJ\",\"optionBottom\":\"ByyaPmxJ\",\"moreOptions\":\"z4OfLFqg\",\"iconDown\":\"Hj7jRHF8\",\"paymentContent\":\"OReEUNTV\",\"paymentImages\":\"oKorQYTC\",\"paymentPhoto\":\"HGTrEtUF\",\"paymentImageBackground\":\"os8jb_qv\",\"paymentAmount\":\"sd2jk3Hn\",\"paymentButton\":\"VzR5cibf\",\"paymentButtonStar\":\"Uhg7yWxK\",\"transactions\":\"Qvc0fTTH\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\n\nimport styles from './StarsBalanceModal.module.scss';\n\ntype OwnProps = {\n  balance: number;\n  className?: string;\n};\n\nconst BalanceBlock = ({ balance, className }: OwnProps) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.balance, className)}>\n      <span className={styles.smallerText}>{lang('StarsBalance')}</span>\n      <div className={styles.balanceBottom}>\n        <StarIcon type=\"gold\" size=\"middle\" />\n        {formatInteger(balance)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(BalanceBlock);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uRzvCSL9\",\"preview\":\"a3DW6BD4\",\"count\":\"D85xnc2A\",\"thumb\":\"YQkhSHTF\",\"noOutline\":\"DEHX4KE0\",\"itemCount1\":\"v2LXw_Ji\",\"itemCount2\":\"wMnTbflA\",\"itemCount3\":\"mfaJvWR5\",\"blurry\":\"SWzA5Thi\",\"full\":\"tWmMeHMH\",\"fadeIn\":\"rQLLTTKj\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, BoughtPaidMedia } from '../../../api/types';\n\nimport { getMediaHash, getMediaThumbUri } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './PaidMediaThumb.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  media: ApiMediaExtendedPreview[] | BoughtPaidMedia[];\n  isTransactionPreview?: boolean;\n  onClick?: NoneToVoidFunction;\n};\n\nconst THUMB_LIMIT = 3;\nconst PREVIEW_THUMB_LIMIT = 2;\n\nconst PaidMediaThumb = ({\n  media, className, isTransactionPreview, onClick,\n}: OwnProps) => {\n  const count = Math.min(media.length, isTransactionPreview ? PREVIEW_THUMB_LIMIT : THUMB_LIMIT);\n  const isLocked = 'mediaType' in media[0];\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles[`itemCount${count}`],\n        isTransactionPreview && styles.preview,\n        className,\n      )}\n      dir=\"rtl\"\n      onClick={onClick}\n    >\n      {media.slice(0, count).reverse().map((item, i, arr) => {\n        const realIndex = arr.length - i - 1;\n        return 'mediaType' in item ? (\n          <MediaSpoiler\n            className={styles.thumb}\n            isVisible\n            width={item.width}\n            height={item.height}\n            thumbDataUri={item.thumbnail?.dataUri}\n          />\n        ) : (\n          <SingleMediaThumb\n            className={buildClassName(isTransactionPreview && realIndex > 0 && styles.noOutline)}\n            boughtMedia={item}\n            index={realIndex}\n          />\n        );\n      })}\n      {isLocked && (\n        <div className={styles.count}>\n          <Icon name=\"stars-lock\" />\n          {media.length > 1 ? media.length : ''}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SingleMediaThumb({\n  boughtMedia,\n  index,\n  className,\n}: {\n  boughtMedia: BoughtPaidMedia;\n  index?: number;\n  className?: string;\n}) {\n  const media = (boughtMedia.video || boughtMedia.photo)!;\n  const mediaHash = getMediaHash(media, 'pictogram');\n  const thumb = getMediaThumbUri(media);\n\n  const mediaBlob = useMedia(mediaHash);\n\n  return (\n    <div className={buildClassName(styles.thumb, index !== undefined && `stars-transaction-media-${index}`, className)}>\n      {thumb && <img className={styles.blurry} src={thumb} alt=\"\" />}\n      {mediaBlob && <img className={styles.full} src={mediaBlob} alt=\"\" />}\n    </div>\n  );\n}\n\nexport default memo(PaidMediaThumb);\n","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStarsTransaction,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { getSenderTitle } from '../../../global/helpers';\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../../global/helpers/payments';\nimport { selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StarIcon from '../../common/icons/StarIcon';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsTransactionItem.module.scss';\n\ntype OwnProps = {\n  transaction: ApiStarsTransaction;\n};\n\nfunction selectOptionalPeer(peerId?: string) {\n  return (global: GlobalState) => (\n    peerId ? selectPeer(global, peerId) : undefined\n  );\n}\n\nconst StarsTransactionItem = ({ transaction }: OwnProps) => {\n  const { getStarsReceipt } = getActions();\n  const {\n    date,\n    stars,\n    photo,\n    peer: transactionPeer,\n    extendedMedia,\n  } = transaction;\n  const lang = useOldLang();\n\n  const peerId = transactionPeer.type === 'peer' ? transactionPeer.id : undefined;\n  const peer = useSelector(selectOptionalPeer(peerId));\n\n  const data = useMemo(() => {\n    let title = transaction.title || (transaction.extendedMedia ? lang('StarMediaPurchase') : undefined);\n    let description;\n    let status: string | undefined;\n    let avatarPeer: ApiPeer | CustomPeer | undefined;\n\n    if (transaction.peer.type === 'peer') {\n      description = peer && getSenderTitle(lang, peer);\n      avatarPeer = peer || CUSTOM_PEER_PREMIUM;\n    } else {\n      const customPeer = buildStarsTransactionCustomPeer(transaction.peer);\n      title = lang(customPeer.titleKey);\n      description = lang(customPeer.subtitleKey!);\n      avatarPeer = customPeer;\n    }\n\n    if (transaction.photo) {\n      avatarPeer = undefined;\n    }\n\n    if (transaction.isRefund) {\n      status = lang('StarsRefunded');\n    }\n\n    if (transaction.hasFailed) {\n      status = lang('StarsFailed');\n    }\n\n    if (transaction.isPending) {\n      status = lang('StarsPending');\n    }\n\n    return {\n      title,\n      description,\n      avatarPeer,\n      status,\n    };\n  }, [lang, peer, transaction]);\n\n  const handleClick = useLastCallback(() => {\n    getStarsReceipt({ transaction });\n  });\n\n  return (\n    <div className={styles.root} onClick={handleClick}>\n      {extendedMedia ? <PaidMediaThumb media={extendedMedia} isTransactionPreview />\n        : <Avatar size=\"medium\" webPhoto={photo} peer={data.avatarPeer} />}\n      <div className={styles.info}>\n        <h3 className={styles.title}>{data.title}</h3>\n        <p className={styles.description}>{data.description}</p>\n        <p className={styles.date}>\n          {formatDateTimeToString(date * 1000, lang.code, true)}\n          {data.status && ` — (${data.status})`}\n        </p>\n      </div>\n      <div className={styles.stars}>\n        <span className={buildClassName(styles.amount, stars < 0 ? styles.negative : styles.positive)}>\n          {formatStarsTransactionAmount(stars)}\n        </span>\n        <StarIcon className={styles.star} type=\"gold\" size=\"big\" />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StarsTransactionItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ic1OO5om\",\"info\":\"mNSPocCT\",\"stars\":\"mNOFB1jr\",\"amount\":\"vocPCemA\",\"star\":\"Ev50qDRR\",\"title\":\"LiLNLeVH\",\"description\":\"Iu1Cg3HS\",\"date\":\"mPKxgyId\",\"positive\":\"dKHKLKDW\",\"negative\":\"Qsu5djeZ\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarTopupOption, ApiUser } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Modal from '../../ui/Modal';\nimport TabList, { type TabWithProperties } from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport BalanceBlock from './BalanceBlock';\nimport TransactionItem from './StarsTransactionItem';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarLogo from '../../../assets/icons/StarLogo.svg';\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nconst TRANSACTION_TYPES = ['all', 'inbound', 'outbound'] as const;\n\nconst TRANSACTION_TABS: TabWithProperties[] = [\n  { title: 'StarsTransactionsAll' },\n  { title: 'StarsTransactionsIncoming' },\n  { title: 'StarsTransactionsOutgoing' },\n];\n\nexport type OwnProps = {\n  modal: TabState['starsBalanceModal'];\n};\n\ntype StateProps = {\n  starsBalanceState?: GlobalState['stars'];\n  originPaymentBot?: ApiUser;\n};\n\nconst StarsBalanceModal = ({\n  modal, starsBalanceState, originPaymentBot,\n}: OwnProps & StateProps) => {\n  const { closeStarsBalanceModal, loadStarsTransactions, openInvoice } = getActions();\n\n  const { balance, history, topupOptions } = starsBalanceState || {};\n\n  const lang = useOldLang();\n\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n\n  const isOpen = Boolean(modal && starsBalanceState);\n\n  const productStarsPrice = modal?.originPayment?.invoice?.amount;\n  const starsNeeded = productStarsPrice ? productStarsPrice - (balance || 0) : undefined;\n  const originBotName = originPaymentBot && getUserFullName(originPaymentBot);\n  const shouldShowTransactions = Boolean(history?.all?.transactions.length && !modal?.originPayment);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      unmarkOptionsExtended();\n      setSelectedTabIndex(0);\n    }\n  }, [isOpen]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!topupOptions) {\n      return [undefined, false];\n    }\n\n    const maxOption = topupOptions.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption; starsCount: number }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    topupOptions.forEach((option) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: currentStackedStarsCount,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, topupOptions, starsNeeded]);\n\n  const tosText = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const text = lang('lng_credits_summary_options_about');\n    const parts = text.split('{link}');\n    return [\n      parts[0],\n      <SafeLink url={lang('StarsTOSLink')} text={lang('lng_credits_summary_options_about_link')} />,\n      parts[1],\n    ];\n  }, [isOpen, lang]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClick = useLastCallback((option: ApiStarTopupOption) => {\n    openInvoice({\n      type: 'stars',\n      option,\n    });\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadStarsTransactions({\n      type: TRANSACTION_TYPES[selectedTabIndex],\n    });\n  });\n\n  return (\n    <Modal className={styles.root} isOpen={isOpen} onClose={closeStarsBalanceModal}>\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => closeStarsBalanceModal()}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <BalanceBlock balance={balance || 0} className={styles.modalBalance} />\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.starHeaderText}>\n            {lang('TelegramStars')}\n          </h2>\n        </div>\n        <div className={styles.section}>\n          <img className={styles.logo} src={StarLogo} alt=\"\" draggable={false} />\n          <img className={styles.logoBackground} src={StarsBackground} alt=\"\" draggable={false} />\n          <h2 className={styles.headerText}>\n            {starsNeeded ? lang('StarsNeededTitle', starsNeeded) : lang('TelegramStars')}\n          </h2>\n          <div className={styles.description}>\n            {renderText(\n              starsNeeded ? lang('StarsNeededText', originBotName) : lang('TelegramStarsInfo'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          <div className={styles.options}>\n            {renderingOptions?.map(({ option, starsCount }) => (\n              <StarTopupOption option={option} starsCount={starsCount} onClick={handleClick} />\n            ))}\n            {!areOptionsExtended && canExtend && (\n              <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n                {lang('Stars.Purchase.ShowMore')}\n                <Icon className={styles.iconDown} name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n        <div className={styles.secondaryInfo}>\n          {tosText}\n        </div>\n        {shouldShowTransactions && (\n          <>\n            <TabList\n              big\n              activeTab={selectedTabIndex}\n              tabs={TRANSACTION_TABS}\n              onSwitchTab={setSelectedTabIndex}\n            />\n            <div className={styles.section}>\n              <Transition\n                name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n                activeKey={selectedTabIndex}\n                renderCount={TRANSACTION_TABS.length}\n                shouldRestoreHeight\n                className={styles.transition}\n              >\n                <InfiniteScroll\n                  onLoadMore={handleLoadMore}\n                  items={history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions}\n                  className={styles.transactions}\n                  noFastList\n                >\n                  {history?.[TRANSACTION_TYPES[selectedTabIndex]]?.transactions.map((transaction) => (\n                    <TransactionItem\n                      key={`${transaction.id}-${transaction.isRefund}`}\n                      transaction={transaction}\n                    />\n                  ))}\n                </InfiniteScroll>\n              </Transition>\n            </div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nfunction StarTopupOption({\n  option, starsCount, onClick,\n}: {\n  option: ApiStarTopupOption; starsCount: number; onClick?: (option: ApiStarTopupOption) => void;\n}) {\n  const lang = useOldLang();\n\n  return (\n    <div className={styles.option} key={option.stars} onClick={() => onClick?.(option)}>\n      <div className={styles.optionTop}>\n        +{formatInteger(option.stars)}\n        {/* Switch directionality for correct order. Can't use flex because https://issues.chromium.org/issues/40249030 */}\n        <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n          {Array.from({ length: starsCount }).map(() => (\n            <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n          ))}\n        </div>\n      </div>\n      <div className={styles.optionBottom}>\n        {formatCurrency(option.amount, option.currency, lang.code)}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const botId = modal?.originPayment?.botId;\n    const bot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      starsBalanceState: global.stars,\n      originPaymentBot: bot,\n    };\n  },\n)(StarsBalanceModal));\n","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMediaExtendedPreview, ApiMessage, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport {\n  selectChat, selectChatMessage, selectTabState, selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport BalanceBlock from './BalanceBlock';\nimport PaidMediaThumb from './PaidMediaThumb';\n\nimport styles from './StarsBalanceModal.module.scss';\n\nimport StarsBackground from '../../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  modal: TabState['isStarPaymentModalOpen'];\n};\n\ntype StateProps = {\n  payment?: TabState['payment'];\n  starsBalanceState?: GlobalState['stars'];\n  bot?: ApiUser;\n  paidMediaMessage?: ApiMessage;\n  paidMediaChat?: ApiChat;\n};\n\nconst StarPaymentModal = ({\n  modal,\n  bot,\n  starsBalanceState,\n  payment,\n  paidMediaMessage,\n  paidMediaChat,\n}: OwnProps & StateProps) => {\n  const { closePaymentModal, openStarsBalanceModal, sendStarPaymentForm } = getActions();\n  const [isLoading, markLoading, unmarkLoading] = useFlag();\n  const isOpen = Boolean(modal && starsBalanceState);\n\n  const photo = payment?.invoice?.photo;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkLoading();\n    }\n  }, [isOpen]);\n\n  const descriptionText = useMemo(() => {\n    if (!payment?.invoice) {\n      return '';\n    }\n\n    const botName = getUserFullName(bot);\n    const starsText = lang('Stars.Intro.PurchasedText.Stars', payment.invoice.amount);\n\n    if (paidMediaMessage) {\n      const extendedMedia = paidMediaMessage.content.paidMedia!.extendedMedia as ApiMediaExtendedPreview[];\n      const areAllPhotos = extendedMedia.every((media) => !media.duration);\n      const areAllVideos = extendedMedia.every((media) => !!media.duration);\n\n      const mediaText = areAllPhotos ? lang('Stars.Transfer.Photos', extendedMedia.length)\n        : areAllVideos ? lang('Stars.Transfer.Videos', extendedMedia.length)\n          : lang('Media', extendedMedia.length);\n\n      const channelTitle = getChatTitle(lang, paidMediaChat!);\n      return lang('Stars.Transfer.UnlockInfo', [mediaText, channelTitle, starsText]);\n    }\n\n    return lang('Stars.Transfer.Info', [payment.invoice.title, botName, starsText]);\n  }, [payment?.invoice, bot, lang, paidMediaMessage, paidMediaChat]);\n\n  const handlePayment = useLastCallback(() => {\n    const price = payment?.invoice?.amount;\n    const balance = starsBalanceState?.balance;\n    if (price === undefined || balance === undefined) {\n      return;\n    }\n\n    if (price > balance) {\n      openStarsBalanceModal({\n        originPayment: payment,\n      });\n      return;\n    }\n\n    sendStarPaymentForm();\n    markLoading();\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.paymentContent}\n      isOpen={isOpen}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={closePaymentModal}\n    >\n      <BalanceBlock balance={starsBalanceState?.balance || 0} className={styles.modalBalance} />\n      <div className={styles.paymentImages} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n        {paidMediaMessage ? (\n          <PaidMediaThumb media={paidMediaMessage.content.paidMedia!.extendedMedia} />\n        ) : (\n          <>\n            <Avatar peer={bot} size=\"giant\" />\n            {photo && <Avatar className={styles.paymentPhoto} webPhoto={photo} size=\"giant\" />}\n          </>\n        )}\n        <img className={styles.paymentImageBackground} src={StarsBackground} alt=\"\" draggable={false} />\n      </div>\n      <h2 className={styles.headerText}>\n        {lang('StarsConfirmPurchaseTitle')}\n      </h2>\n      <div className={buildClassName(styles.description, styles.smallerText)}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <Button className={styles.paymentButton} size=\"smaller\" onClick={handlePayment} isLoading={isLoading}>\n        {lang('Stars.Transfer.Pay')}\n        <div className={styles.paymentAmount}>\n          {payment?.invoice?.amount}\n          <StarIcon className={styles.paymentButtonStar} size=\"small\" />\n        </div>\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const payment = selectTabState(global).payment;\n    const bot = payment?.botId ? selectUser(global, payment.botId) : undefined;\n\n    const messageInputInvoice = payment.inputInvoice?.type === 'message' ? payment.inputInvoice : undefined;\n    const message = messageInputInvoice\n      ? selectChatMessage(global, messageInputInvoice.chatId, messageInputInvoice.messageId) : undefined;\n    const chat = messageInputInvoice ? selectChat(global, messageInputInvoice.chatId) : undefined;\n    const isPaidMedia = message?.content.paidMedia;\n\n    return {\n      bot,\n      starsBalanceState: global.stars,\n      payment,\n      paidMediaMessage: isPaidMedia ? message : undefined,\n      paidMediaChat: isPaidMedia ? chat : undefined,\n    };\n  },\n)(StarPaymentModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"FqyZSYhX\",\"description\":\"DkalJSBt\",\"secondary\":\"xNUKKd8T\",\"separator\":\"kiRrTaj3\",\"topIcon\":\"PKnc2DV2\",\"content\":\"qxOr0JyQ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useSelectorSignal from '../../hooks/data/useSelectorSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isRevenueSharing?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutAdsModal: FC<OwnProps> = ({\n  isOpen,\n  isRevenueSharing,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  const minLevelSignal = useSelectorSignal((global) => global.appConfig?.channelRestrictAdsLevelMin);\n  const minLevelToRestrictAds = useDerivedState(minLevelSignal);\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{lang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(lang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(lang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(lang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={lang('SponsoredMessageAlertLearnMoreUrl')}\n            text={lang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(lang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [lang]);\n\n  const revenueSharingAdContent = useMemo(() => {\n    return (\n      <>\n        <div className={styles.topIcon}><Icon name=\"channel\" /></div>\n        <h3 className={styles.title}>{lang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {lang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n        <ListItem\n          isStatic\n          multiline\n          icon=\"lock\"\n        >\n          <span className=\"title\">{lang('RevenueSharingAdsInfo1Title')}</span>\n          <span className=\"subtitle\">\n            {renderText(lang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])}\n          </span>\n        </ListItem>\n        <ListItem\n          isStatic\n          multiline\n          icon=\"revenue-split\"\n        >\n          <span className=\"title\">{lang('RevenueSharingAdsInfo2Title')}</span>\n          <span className=\"subtitle\">\n            {renderText(lang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])}\n          </span>\n        </ListItem>\n        <ListItem\n          isStatic\n          multiline\n          icon=\"nochannel\"\n        >\n          <span className=\"title\">{lang('RevenueSharingAdsInfo3Title')}</span>\n          <span className=\"subtitle\">\n            {renderText(lang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])}\n          </span>\n        </ListItem>\n        <Separator className={styles.separator} />\n        <h3 className={styles.title}>{renderText(lang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(lang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={lang('PromoteUrl')}\n            text={lang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n  }, [lang, minLevelToRestrictAds]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {isRevenueSharing ? revenueSharingAdContent : regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={onClose}\n      >\n        {lang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(AboutAdsModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 40;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsoredMessage, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsoredMessage({ chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink text={lang('lng_report_sponsored_reported_link')} url={lang('ReportAd.Help_URL')} />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"PPDx7_5v\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"listItemButton\":\"MsCAZhTn\",\"button\":\"goI3MITH\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiChatMember, ApiMessage, ApiPeer,\n} from '../../api/types';\nimport type { IAlbum } from '../../types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, getUserFullName,\n  isChatBasicGroup,\n  isChatSuperGroup, isOwnMessage,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectAllowedMessageActions,\n  selectBot,\n  selectChat, selectChatFullInfo, selectCurrentMessageIds,\n  selectCurrentMessageList, selectSenderFromMessage, selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isSuperGroup?: boolean;\n  sender: ApiPeer | undefined;\n  currentUserId?: string;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIdList: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  message?: ApiMessage;\n  album?: IAlbum;\n  onConfirm?: NoneToVoidFunction;\n  isOwn?: boolean;\n  canBanUsers?: boolean;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isGroup,\n  isSuperGroup,\n  sender,\n  currentUserId,\n  messageIdList,\n  isSchedule,\n  message,\n  album,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  adminMembersById,\n  chatBot,\n  isOwn,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    deleteScheduledMessages,\n    reportMessages,\n    deleteChatMember,\n    updateChatMemberBannedRights,\n    closeDeleteMessageModal,\n  } = getActions();\n\n  const prevIsOpen = usePrevious(isOpen);\n\n  const lang = useOldLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const isSenderOwner = useMemo(() => {\n    return sender && adminMembersById && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner;\n  }, [sender, adminMembersById]);\n\n  const user = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return undefined;\n\n    return usersById[sender.id];\n  }, [isSchedule, sender]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return user && user.id !== currentUserId;\n  }, [user, currentUserId]);\n\n  const userName = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!sender || isSchedule) return '';\n\n    return getUserFullName(usersById[sender.id]);\n  }, [isSchedule, sender]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('ReportSpamTitle'),\n      },\n    ];\n  }, [lang, user]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: lang('DeleteAllFrom', userName),\n      },\n    ];\n  }, [lang, user, userName]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    if (!user) {\n      return [];\n    }\n\n    return [\n      {\n        value: user.id,\n        label: (message && isAdditionalOptionsVisible ? lang('KickFromSupergroup') : lang('DeleteBan', userName)),\n      },\n    ];\n  }, [isAdditionalOptionsVisible, lang, message, user, userName]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible(!isAdditionalOptionsVisible);\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    return selectedMessageIdList.filter((msgId) => {\n      const senderPeer = selectSenderFromMessage(getGlobal(), chat, msgId);\n      return senderPeer && userIds.includes(senderPeer.id);\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList?.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    deleteMessages({ messageIds, shouldDeleteForAll: true });\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    onConfirm?.();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message!.id];\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (!isOwn && (chosenSpanOption || chosenDeleteOption || chosenBanOption) && (isGroup || isSuperGroup)) {\n      if (chosenSpanOption) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenSpanOption, messageIdList!);\n        if (filteredMessageIdList && filteredMessageIdList.length) {\n          reportMessages({ messageIds: filteredMessageIdList, reason: 'spam', description: '' });\n        }\n      }\n\n      if (chosenDeleteOption) {\n        const filteredMessageIdList = filterMessageIdByUserId(chosenDeleteOption, messageIdList!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged && message) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        deleteMessages({\n          messageIds: [message.id],\n          shouldDeleteForAll: false,\n        });\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const filteredUserIdList = chosenBanOption.filter((userId) => messageIds?.some((msgId) => {\n          const senderPeer = selectSenderFromMessage(getGlobal(), chat, msgId);\n          return senderPeer && senderPeer.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({\n        messageIds,\n        shouldDeleteForAll: false,\n      });\n    }\n    closeDeleteMessageModal();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        {(shouldShowAdditionalOptions && !canDeleteForAll && !isSchedule) && (\n          <Avatar\n            size=\"small\"\n            peer={user!}\n          />\n        )}\n        <h3 className={styles.title}>{lang('DeleteSingleMessagesTitle')}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {lang('UserRestrictionsCanDoUsers', 1)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={buildClassName(styles.mainContainer, 'custom-scroll')}>\n        {renderHeader()}\n        {(shouldShowAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup)) && (\n          <>\n            <p className={styles.actionTitle}>{lang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {lang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(chatBot || !shouldShowAdditionalOptions) && (\n          <>\n            <p>{lang('AreYouSureDeleteSingleMessage')}</p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{lang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{lang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName && renderText(lang('Conversation.DeleteMessagesFor', contactName))}\n              {!contactName && lang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {lang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={handleClose}\n          >{lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const chatId = deleteMessageModal && deleteMessageModal.message?.chatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const { canDeleteForAll } = (deleteMessageModal && deleteMessageModal.message && threadId\n      && selectAllowedMessageActions(global, deleteMessageModal.message, threadId)) || {};\n    const adminMembersById = chatFullInfo && chatFullInfo?.adminMembersById;\n    const messageIdList = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const sender = deleteMessageModal && chat && deleteMessageModal.message\n      && selectSenderFromMessage(global, chat, deleteMessageModal.message.id);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const isChatWithBot = Boolean(deleteMessageModal && deleteMessageModal.message\n      && selectBot(global, deleteMessageModal.message.chatId));\n    const chatBot = Boolean(chat && chat.id !== REPLIES_USER_ID && selectBot(global, chat.id));\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const isOwn = deleteMessageModal && deleteMessageModal.message && isOwnMessage(deleteMessageModal.message);\n\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isSuperGroup,\n      currentUserId: global.currentUserId,\n      sender,\n      messageIdList,\n      canDeleteForAll: deleteMessageModal && !deleteMessageModal.isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      isSchedule: deleteMessageModal && deleteMessageModal.isSchedule,\n      message: deleteMessageModal && deleteMessageModal.message,\n      album: deleteMessageModal && deleteMessageModal.album,\n      onConfirm: deleteMessageModal && deleteMessageModal.onConfirm,\n      isOwn,\n      canBanUsers,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false,\n    });\n    onClose();\n  }, [pinMessage, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [messageId, onClose, pinMessage]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"yBqscugH\",\"container\":\"kXZCbJ2r\",\"title\":\"SM4Gh7ar\",\"actionTitle\":\"fpMDH6cA\",\"restrictionTitle\":\"ujUxllEg\",\"listItemButton\":\"NE9anBBa\",\"button\":\"XbhgbPbE\",\"dropdownList\":\"JqX2Gfp8\",\"dialogButtons\":\"_E_ldIaq\",\"restrictionContainer\":\"SxYVATEo\",\"restrictionContainerOpen\":\"pb31MZG8\",\"dropdownListOpen\":\"xF6oHne7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  getUserFullName,\n  isChatBasicGroup, isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectCanDeleteSelectedMessages,\n  selectChatFullInfo,\n  selectCurrentChat,\n  selectCurrentMessageIds,\n  selectCurrentMessageList,\n  selectSenderFromMessage,\n  selectSendersFromSelectedMessages,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport Avatar from '../common/Avatar';\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './DeleteSelectedMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isSchedule: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  selectedMessageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  messageIds: number[] | undefined;\n  adminMembersById?: Record<string, ApiChatMember>;\n  canBanUsers?: boolean;\n};\n\nconst DeleteSelectedMessageModal: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  isOpen,\n  isSchedule,\n  currentUserId,\n  selectedMessageIds,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  messageIds,\n  onClose,\n  adminMembersById,\n  canBanUsers,\n}) => {\n  const {\n    deleteMessages,\n    reportMessages,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n  } = getActions();\n\n  const prevIsOpen = usePrevious(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [chosenDeleteOption, setChosenDeleteOption] = useState<string[] | undefined>(undefined);\n  const [chosenBanOption, setChosenBanOptions] = useState<string[] | undefined>(undefined);\n  const [chosenSpanOption, setChosenSpanOptions] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n\n  const senderList = useMemo(() => {\n    if (isChannel) {\n      return undefined;\n    }\n    return selectSendersFromSelectedMessages(getGlobal(), chat);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [chat, isChannel, isOpen]);\n\n  const isSenderOwner = useMemo(() => {\n    if (!senderList) {\n      return undefined;\n    }\n\n    return senderList.some((sender) => sender\n      && adminMembersById\n      && adminMembersById[sender.id] && adminMembersById[sender.id].isOwner);\n  }, [senderList, adminMembersById]);\n\n  const userList = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return [];\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n\n    return Array.from(uniqueUserIds)\n      .map((id) => usersById[id])\n      .filter(Boolean);\n  }, [isSchedule, senderList]);\n\n  const nestedOptionsWithAvatarList = useLastCallback(() => {\n    return userList.map((user) => ({\n      value: `${user.id}`,\n      label: getUserFullName(user) || '',\n      leftElement: <Avatar size=\"small\" peer={user} />,\n    }));\n  });\n\n  const showAdditionalOptions = useMemo(() => {\n    return !userList.some((user) => user.id === currentUserId);\n  }, [userList, currentUserId]);\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    if (!senderList || isSchedule) return {};\n\n    const uniqueUserIds = new Set(senderList.map((user) => user!.id));\n    const userIds = Array.from(uniqueUserIds).map((userId) => usersById[userId]);\n\n    return buildCollectionByCallback(userIds, (user) => [user.id, getUserFullName(user)]);\n  }, [isSchedule, senderList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'spam' : userList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'delete_all' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(userNames)[0]),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [oldLang, selectedMessageIds, userList, userNames]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: selectedMessageIds && userList.length >= 2 ? 'ban' : userList?.[0]?.id,\n        label: selectedMessageIds && userList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(userNames)[0])),\n        nestedOptions: selectedMessageIds && userList.length >= 2 ? [\n          ...nestedOptionsWithAvatarList(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, selectedMessageIds, userList, userNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const handleDeleteMessageForAll = useLastCallback(() => {\n    onClose();\n    deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: true });\n  });\n\n  const filterMessageIdByUserId = useLastCallback((userIds: string[], selectedMessageIdList: number[]) => {\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(getGlobal(), chat, msgId);\n      return sender && userIds.includes(sender.id);\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    if (filteredMessageIdList && filteredMessageIdList.length) {\n      deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n    }\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageForSelf = useLastCallback(() => {\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds: selectedMessageIds! });\n    } else if (!isSenderOwner\n      && (chosenSpanOption || chosenDeleteOption || chosenBanOption) && (isGroup || isSuperGroup)) {\n      if (chosenSpanOption) {\n        const userIdList = chosenSpanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, selectedMessageIds!);\n        if (filteredMessageIdList && filteredMessageIdList.length) {\n          reportMessages({ messageIds: filteredMessageIdList, reason: 'spam', description: '' });\n        }\n      }\n\n      if (chosenDeleteOption) {\n        const userIdList = chosenDeleteOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && !havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleDeleteMember(filteredUserIdList);\n        const filteredMessageIdList = filterMessageIdByUserId(userIdList, selectedMessageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (chosenBanOption && havePermissionChanged) {\n        const userIdList = chosenBanOption.filter((option) => !Number.isNaN(Number(option)));\n        const filteredUserIdList = userIdList.filter((userId) => selectedMessageIds?.some((msgId) => {\n          const sender = selectSenderFromMessage(getGlobal(), chat, msgId);\n          return sender && sender.id === userId;\n        }));\n        handleUpdateChatMemberBannedRights(filteredUserIdList);\n      }\n    } else {\n      deleteMessages({ messageIds: selectedMessageIds!, shouldDeleteForAll: false });\n    }\n\n    onClose();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    onClose();\n  });\n\n  const handleDeleteOptionChange = useLastCallback((options: string[]) => {\n    setChosenDeleteOption(options);\n  });\n\n  const handleBanOptionChange = useLastCallback((options: string[]) => {\n    setChosenBanOptions(options);\n  });\n\n  const handleSpanOptionChange = useLastCallback((options: string[]) => {\n    setChosenSpanOptions(options);\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      exitMessageSelectMode();\n      setChosenSpanOptions(undefined);\n      setChosenDeleteOption(undefined);\n      setChosenBanOptions(undefined);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [exitMessageSelectMode, isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div className={styles.container} dir={oldLang.isRtl ? 'rtl' : undefined}>\n        {(showAdditionalOptions && !canDeleteForAll && !isSchedule) && (\n          <AvatarList\n            size=\"small\"\n            peers={userList}\n          />\n        )}\n        <h3 className={styles.title}>{oldLang('Chat.DeleteMessagesConfirmation', selectedMessageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={handleSpanOptionChange}\n          selected={chosenSpanOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        <CheckboxGroup\n          options={ACTION_DELETE_OPTION}\n          onChange={handleDeleteOptionChange}\n          selected={chosenDeleteOption}\n          nestedCheckbox={selectedMessageIds && userList.length >= 2}\n        />\n        {!isSenderOwner && canBanUsers && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={handleBanOptionChange}\n            selected={chosenBanOption}\n            nestedCheckbox={selectedMessageIds && userList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', userList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          permissionGroup\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(styles.dropdownList, isMediaDropdownOpen && styles.dropdownListOpen)}\n        />\n      </div>\n    );\n  }\n\n  if (!selectedMessageIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageForSelf}\n      className=\"delete\"\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {!showAdditionalOptions && <p>{lang('AreYouSureDeleteFewMessages')}</p>}\n        {(showAdditionalOptions && !canDeleteForAll && !isSchedule && (isGroup || isSuperGroup)) && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              chosenBanOption && canBanUsers && chosenBanOption?.length ? (\n                <ListItem\n                  narrow\n                  className={styles.listItemButton}\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {willDeleteForCurrentUserOnly && lang('DeleteForMeDescription')}\n        {(willDeleteForAll && !showAdditionalOptions) && lang('DeleteForEveryoneDescription')}\n        <div className={canDeleteForAll ? 'dialog-buttons-column'\n          : buildClassName('dialog-buttons', isAdditionalOptionsVisible && styles.dialogButtons)}\n        >\n          {canDeleteForAll && (\n            <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n              {contactName\n                ? renderText(oldLang('ChatList.DeleteForEveryone', contactName))\n                : oldLang('Conversation.DeleteMessagesForEveryone')}\n            </Button>\n          )}\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForSelf}>\n            {oldLang(canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isSchedule }): StateProps => {\n    const { messageIds: selectedMessageIds } = selectTabState(global).selectedMessages || {};\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global);\n    const chat = selectCurrentChat(global);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const { threadId, type } = selectCurrentMessageList(global) || {};\n    const messageIds = chat && selectCurrentMessageIds(global, chat.id, threadId!, type!);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n    const willDeleteForCurrentUserOnly = chat && isChatBasicGroup(chat) && !canDeleteForAll;\n    const willDeleteForAll = chat && isChatSuperGroup(chat);\n\n    return {\n      chat,\n      isGroup,\n      isChannel,\n      isSuperGroup,\n      selectedMessageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      messageIds,\n      adminMembersById,\n      canBanUsers,\n    };\n  },\n)(DeleteSelectedMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport ReportModal from '../common/ReportModal';\nimport Button from '../ui/Button';\nimport DeleteSelectedMessageModal from './DeleteSelectedMessageModal';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  useEffect(() => {\n    return isActive && !isDeleteModalOpen && !isReportModalOpen && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? openDeleteModal : undefined,\n        onDelete: canDeleteMessages ? openDeleteModal : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, isDeleteModalOpen, isReportModalOpen, openDeleteModal, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePrevious(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openReportModal)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), openDeleteModal, true)\n            )}\n          </div>\n        )}\n      </div>\n      {canDeleteMessages && (\n        <DeleteSelectedMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={isSchedule}\n          onClose={closeDeleteModal}\n        />\n      )}\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={selectedMessageIds}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall);\n\n    return {\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(isActive ? { 'Mod+C': handleCopy } : undefined);\n};\n\nexport default useCopySelectedMessages;\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useOldLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <i className=\"icon icon-heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <i className=\"icon icon-heart-outline status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../global/types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      dispatchHeavyAnimationStop();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PickerSelectedItem\n        fluid\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: string[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Audio\n            key={message.id}\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Search}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            date={message.date}\n            className=\"scroll-item\"\n            onPlay={handlePlayAudio}\n            onDateClick={handleMessageFocus}\n            canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n            isDownloading={getIsDownloading(activeDownloads, media)}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <i className=\"icon icon-calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectChat } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const topic = chat?.topics?.[topicId];\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { getPrivateChatUserId, isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  onClick,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n}) => {\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useCallback(() => {\n    onClick(chatId);\n  }, [chatId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"large\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"large\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const privateChatUserId = chat && getPrivateChatUserId(chat);\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel=\"Clear recent chats\"\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <i className=\"icon icon-close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  filterChatsByName,\n  filterUsersByName,\n  isChatChannel,\n} from '../../../global/helpers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport PickerSelectedItem from '../../common/PickerSelectedItem';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: string[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal, setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterChatsByName(lang, filteredChatIds, chatsById, searchQuery, currentUserId);\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterUsersByName(\n      contactIdsWithMe, usersById, searchQuery, currentUserId, lang('SavedMessages'),\n    );\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, lang, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = id.split('_');\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[Number(messageId)];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !foundMessages.length;\n\n  if (!searchQuery && !searchDate && !isChannelList) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch custom-scroll\"\n      items={foundMessages}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={lang('ChatList.Search.NoResults')}\n          description={lang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PickerSelectedItem\n              peerId={id}\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {lang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {lang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {lang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n            {lang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(foundMessages.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={lang.isRtl ? 'auto' : undefined}>{lang('SearchMessages')}</h3>\n          {foundMessages.map(renderFoundMessage)}\n        </div>\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n      const message = globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <Document\n            document={getMessageDocument(message)!}\n            message={message}\n            withDate\n            datetime={message.date}\n            smaller\n            sender={getSenderName(lang, message, chatsById, usersById)}\n            className=\"scroll-item\"\n            isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n            observeIntersection={observeIntersectionForMedia}\n            onDateClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <div\n          className=\"ListItem small-icon\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n          key={message.id}\n        >\n          {shouldDrawDateDivider && (\n            <p\n              className={buildClassName(\n                'section-heading',\n                isFirst && 'section-heading-first',\n                !isFirst && 'section-heading-with-border',\n              )}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <WebLink\n            key={message.id}\n            message={message}\n            senderTitle={getSenderName(lang, message, chatsById, usersById)}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onMessageClick={handleMessageFocus}\n          />\n        </div>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = id.split('_');\n\n      return globalMessagesByChatId[chatId]?.byId[Number(messageId)];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch\">\n      <InfiniteScroll\n        className={classNames}\n        items={foundMessages}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\nconst TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'SearchAllChatsShort' },\n  { type: GlobalSearchContent.ChannelList, title: 'ChannelsTab' },\n  { type: GlobalSearchContent.Media, title: 'SharedMediaTab2' },\n  { type: GlobalSearchContent.Links, title: 'SharedLinksTab2' },\n  { type: GlobalSearchContent.Files, title: 'SharedFilesTab2' },\n  { type: GlobalSearchContent.Music, title: 'SharedMusicTab2' },\n  { type: GlobalSearchContent.Voice, title: 'SharedVoiceTab2' },\n];\n\nconst CHAT_TABS = [\n  { type: GlobalSearchContent.ChatList, title: 'All Messages' },\n  ...TABS.slice(2), // Skip ChatList and ChannelList, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = chatId ? CHAT_TABS : TABS;\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterChatsByName } from '../../../../global/helpers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Picker from '../../../common/Picker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterChatsByName(lang, chatIds, chatsById, chatFilter),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, lang, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <Picker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        isRoundCheckbox\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport {\n  EXCLUDED_CHAT_TYPES,\n  INCLUDED_CHAT_TYPES,\n  selectChatFilters,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport Icon from '../../../common/icons/Icon';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? INCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key)\n      : EXCLUDED_CHAT_TYPES.find(({ key: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.key}\n        className=\"settings-folders-list-item mb-1\"\n        icon={chatType.icon}\n        narrow\n        inactive\n      >\n        {lang(chatType.title)}\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n          >\n            <Icon name=\"down\" className=\"down\" />\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIcon\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary mb-0\"\n              icon=\"add\"\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary mb-0\"\n            icon=\"add\"\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item mb-0\"\n              icon=\"link\"\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePrevious(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: lang('FilterAllChats'),\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <i className=\"icon icon-add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {folder.title}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderText(folder.title, ['emoji'])}\n                    {isBlocked && <i className=\"icon icon-lock-badge settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <i className=\"icon icon-link mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">{renderText(folder.title, ['emoji'])}</span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport LinkField from '../../../common/LinkField';\nimport Picker from '../../../common/Picker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  title?: string;\n  includedChatIds?: string[];\n  pinnedChatIds?: string[];\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  title,\n  includedChatIds,\n  pinnedChatIds,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (includedChatIds || []).concat(pinnedChatIds || []);\n  }, [includedChatIds, pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: lang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('FolderLinkScreen.TitleDescriptionSelected', [title, chatsCount]),\n            ['simple_markdown'])}\n        </p>\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? lang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-chatlist\">\n        <Picker\n          itemIds={itemIds}\n          lockedSelectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          isRoundCheckbox\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      title: folder?.title,\n      includedChatIds: folder?.includedChatIds,\n      pinnedChatIds: folder?.pinnedChatIds,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../global/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon\" type=\"premium\" size=\"big\" />}\n        className=\"settings-main-menu-star\"\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n};\n\nfunction PrivacyLockedOption({ label }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={styles.contactsAndPremiumOptionTitle}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_and_premium_option-title\":\"TGUdGos3\",\"contactsAndPremiumOptionTitle\":\"TGUdGos3\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { selectIsCurrentUserPremium, selectNewNoncontactPeersRequirePremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  shouldNewNonContactPeersRequirePremium,\n  isCurrentUserPremium,\n  onReset,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const lang = useOldLang();\n\n  const canChange = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChange ? (\n          lang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption label={lang('PrivacyMessagesContactsAndPremium')} />\n        ),\n        hidden: !canChange,\n      },\n    ];\n  }, [lang, canChange]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({ shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium' });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={shouldNewNonContactPeersRequirePremium ? 'contacts_and_premium' : 'everybody'}\n        />\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Privacy.Messages.SectionFooter')}\n        </p>\n      </div>\n      {!canChange && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p>{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-menu-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      narrow\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-menu-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', lang('FileSize.MB', String(AUTODOWNLOAD_FILESIZE_MB_LIMITS[value]), 'i'));\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettings.Contacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.PrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.GroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettings.Channels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        'Auto-download files', // Proper translation is not available yet\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\nimport type { IRadioOption } from '../../ui/CheckboxGroup';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition, unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<IRadioOption[]>([]);\n  const [search, setSearch] = useState('');\n\n  const options: IRadioOption[] = useMemo(() => {\n    return SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n  }, [language]);\n\n  useEffect(() => {\n    if (!isActive) setSearch('');\n  }, [isActive]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (prevIsActive === isActive) return;\n    if (isActive && displayedOptions.length) return;\n\n    const current = options.find((option) => option.value === language);\n    const otherLanguages = options.filter((option) => option.value !== language);\n\n    const [selected, unselected] = partition(otherLanguages, (option) => doNotTranslate.includes(option.value));\n\n    setDisplayedOptions([current!, ...selected, ...unselected]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, options]);\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, checked } = event.currentTarget;\n    let newDoNotTranslate: string[];\n    if (checked) {\n      newDoNotTranslate = unique([...doNotTranslate, value]);\n    } else {\n      newDoNotTranslate = doNotTranslate.filter((v) => v !== value);\n    }\n\n    setSettingOption({\n      doNotTranslate: newDoNotTranslate,\n    });\n  }, [doNotTranslate, setSettingOption]);\n\n  const handleSearch = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  }, []);\n\n  const filteredDisplayedOptions = useMemo(() => {\n    if (!search.trim()) {\n      return displayedOptions;\n    }\n\n    return displayedOptions.filter((option) => (\n      option.label.toString().toLowerCase().includes(search.toLowerCase())\n      || option.subLabel?.toLowerCase().includes(search.toLowerCase())\n      || option.value.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [displayedOptions, search]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content custom-scroll')}>\n      <div className={buildClassName(styles.item, 'settings-item')}>\n        <InputText\n          key=\"search\"\n          value={search}\n          onChange={handleSearch}\n          placeholder={lang('Search')}\n          teactExperimentControlled\n        />\n        <div className={buildClassName(styles.languages, 'radio-group custom-scroll')}>\n          {filteredDisplayedOptions.map((option) => (\n            <Checkbox\n              className={styles.checkbox}\n              label={option.label}\n              subLabel={option.subLabel}\n              checked={doNotTranslate.includes(option.value)}\n              value={option.value}\n              key={option.value}\n              onChange={handleChange}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\",\"checkbox\":\"obmoCKjY\",\"languages\":\"BccnzXwC\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePrevious(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <UsernameInput\n            currentUsername={currentUsername}\n            isLoading={isLoading}\n            isUsernameAvailable={isUsernameAvailable}\n            checkedUsername={checkedUsername}\n            onChange={handleUsernameChange}\n          />\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldShowLoginCodeInChatList?: boolean;\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldShowLoginCodeInChatList,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => requestConfetti({ withStars: true })}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Show login code in chat list\"\n          checked={Boolean(shouldShowLoginCodeInChatList)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldShowLoginCodeInChatList: !shouldShowLoginCodeInChatList })}\n        />\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldShowLoginCodeInChatList: global.settings.byKey.shouldShowLoginCodeInChatList,\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst TIME_FORMAT_OPTIONS: IRadioOption[] = [{\n  label: '12-hour',\n  value: '12h',\n}, {\n  label: '24-hour',\n  value: '24h',\n}];\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChat.Appearance.Light'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChat.Appearance.Dark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChat.Appearance.System'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('lng_settings_send_enter'), subLabel: 'New line by Shift + Enter' },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'lng_settings_send_cmdenter' : 'lng_settings_send_ctrlenter'),\n      subLabel: 'New line by Enter',\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SETTINGS')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('GeneralSettings.StatusBarItem')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Time Format\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={TIME_FORMAT_OPTIONS}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('VoiceOver.Keyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransition(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransition(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const lang = useOldLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{lang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{lang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{lang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{lang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{lang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{lang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{lang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{lang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{lang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{lang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{lang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{lang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{lang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{lang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{lang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{lang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{lang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{lang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{lang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{lang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{lang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{lang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{lang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{lang('AlwaysShareWith')}</h3>;\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{lang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('Animations and Performance')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{lang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{lang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{lang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{lang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{lang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{lang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{lang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{lang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{lang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{lang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{lang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{lang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{lang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{lang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{lang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{lang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{lang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {lang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {lang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {lang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={lang('lng_settings_information')}\n            >\n              <i className=\"icon icon-edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{lang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={lang('AccDescrGoBack')}\n      >\n        <i className=\"icon icon-arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={lang('lng_sure_logout')}\n        confirmLabel={lang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiLanguage } from '../../../api/types';\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n} & Pick<ISettings, 'languages' | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    loadAttachBots,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n\n      loadAttachBots(); // Should be refetched every language change\n    });\n  });\n\n  const options = useMemo(() => {\n    return languages ? buildOptions(languages) : undefined;\n  }, [languages]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            className=\"pb-2\"\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\">{lang('Localization.InterfaceLanguage')}</h4>\n        {options ? (\n          <RadioGroup\n            name=\"language-settings\"\n            options={options}\n            selected={selectedLanguage}\n            loadingOption={isLoading ? selectedLanguage : undefined}\n            onChange={handleChange}\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction buildOptions(languages: ApiLanguage[]) {\n  const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n  const shortLangCode = currentLangCode.substr(0, 2);\n\n  return languages.map(({ langCode, nativeName, name }) => ({\n    value: langCode,\n    label: nativeName,\n    subLabel: name,\n  })).sort((a) => {\n    return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n  });\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, languages, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: number;\n  shouldDisplayStars?: boolean;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  shouldDisplayStars,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openPremiumGiftingModal,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n        <ListItem\n          icon=\"settings\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('Telegram.GeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('Animations and Performance')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.langName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('StickersName')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon\" type=\"premium\" size=\"big\" />}\n            className=\"settings-main-menu-star\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n        {shouldDisplayStars && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon\" type=\"gold\" size=\"big\" />}\n            className=\"settings-main-menu-star\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openStarsBalanceModal({})}\n          >\n            {lang('MenuTelegramStars')}\n            {Boolean(starsBalance) && (\n              <span className=\"settings-item__current-value\">{formatInteger(starsBalance)}</span>\n            )}\n          </ListItem>\n        )}\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            className=\"settings-main-menu-star\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumGiftingModal()}\n          >\n            {lang('GiftPremiumGifting')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('TelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('PrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('lng_settings_ask_ok')}\n        title={lang('AskAQuestion')}\n        text={lang('lng_settings_ask_sure')}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n    const shouldDisplayStars = Boolean(global.stars?.history?.all?.transactions.length);\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n      shouldDisplayStars,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Web notifications\n        </h4>\n        <Checkbox\n          label=\"Web notifications\"\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasWebNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label=\"Offline notifications\"\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          // eslint-disable-next-line max-len\n          subLabel={areOfflineNotificationsSupported ? lang(hasPushNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled') : 'Not supported'}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label=\"Sound\"\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasPrivateChatsMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          // eslint-disable-next-line max-len\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfo.NotificationsEnabled' : 'UserInfo.NotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [string, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: string;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS = [\n  'Power Saving',\n  'Nice and Fast',\n  'Lots of Stuff',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS = [\n  'Power Saving',\n  'Custom',\n  'Lots of Stuff',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['LiteMode.Key.animations.Title', [\n    { key: 'pageTransitions', label: 'Page Transitions' },\n    { key: 'messageSendingAnimations', label: 'Message Sending Animation' },\n    { key: 'mediaViewerAnimations', label: 'Media Viewer Animations' },\n    { key: 'messageComposerAnimations', label: 'Message Composer Animations' },\n    { key: 'contextMenuAnimations', label: 'Context Menu Animation' },\n    { key: 'contextMenuBlur', label: 'Context Menu Blur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'Right Column Animation' },\n  ]],\n  ['Stickers and Emoji', [\n    { key: 'animatedEmoji', label: 'Allow Animated Emoji' },\n    { key: 'loopAnimatedStickers', label: 'Loop Animated Stickers' },\n    { key: 'reactionEffects', label: 'Reaction Effects' },\n    { key: 'stickerEffects', label: 'Full-Screen Sticker and Emoji Effects' },\n  ]],\n  ['AutoplayMedia', [\n    { key: 'autoplayGifs', label: 'AutoplayGIF' },\n    { key: 'autoplayVideos', label: 'AutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useOldLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n  const animationLevelOptions = animationLevelState === ANIMATION_LEVEL_CUSTOM\n    ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n    : ANIMATION_LEVEL_OPTIONS;\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Animation Level\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          Choose the desired animations amount.\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => (\n                    <Checkbox\n                      key={key}\n                      name={key}\n                      checked={performanceSettings[key]}\n                      label={lang(label)}\n                      disabled={disabled}\n                      onChange={handlePropertyChange}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    const { visibility, shouldAllowPremium } = setting || {};\n    const blockCount = setting ? setting.blockChatIds.length + setting.blockUserIds.length : 0;\n    const allowCount = setting ? setting.allowChatIds.length + setting.allowUserIds.length : 0;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount) total.push(`+${allowCount}`);\n\n    const exceptionString = total.length ? `(${total.join(',')})` : '';\n\n    if (shouldAllowPremium) {\n      return lang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${lang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${lang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${lang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {lang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-menu-item\">\n              <span className=\"title\">{lang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {lang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {lang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {lang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldNewNonContactPeersRequirePremium\n                ? lang('PrivacyMessagesContactsAndPremium')\n                : lang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-menu-item\">\n            <span className=\"title\">{lang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={lang('lng_settings_sensitive_disable_filtering')}\n            subLabel={lang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={lang('ArchiveAndMute')}\n            subLabel={lang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={lang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle, shouldNewNonContactPeersRequirePremium,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterUsersByName, getUserFullName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterUsersByName(availableContactIds, usersById, search)\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <i className=\"icon icon-add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon\" type=\"premium\" size=\"big\" />}\n          className=\"settings-main-menu-star\"\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport type { ApiPrivacySettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const lang = useOldLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PContacts')} />\n        ) : (\n          lang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={lang('P2PNobody')} />\n        ) : (\n          lang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [lang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? lang('PrivacyPhoneInfo') : lang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return lang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return lang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return lang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return lang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return lang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return lang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return lang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return lang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return lang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return lang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return lang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [lang, screen]);\n\n  const prepareSubtitle = useLastCallback((userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean) => {\n    const userIdsCount = userIds?.length || 0;\n    const chatIdsCount = chatIds?.length || 0;\n\n    if (!userIdsCount && !chatIdsCount) {\n      return shouldAllowPremium ? lang('PrivacyPremium') : lang('EditAdminAddUsers');\n    } else if (shouldAllowPremium) {\n      return lang('ContactsAndPremium');\n    }\n\n    const userCountString = userIdsCount > 0 ? lang('Users', userIdsCount) : undefined;\n    const chatCountString = chatIdsCount > 0 ? lang('Chats', chatIdsCount) : undefined;\n\n    return [userCountString, chatCountString].filter(Boolean).join(', ');\n  });\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(privacy?.allowUserIds, privacy?.allowChatIds, privacy?.shouldAllowPremium);\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header mb-4\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-menu-item full-size\">\n                <span className=\"title\">{lang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { ApiPrivacySettings, CustomPeerType } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  filterChatsByName, isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const lang = useOldLang();\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    return [settings.shouldAllowPremium ? CUSTOM_PEER_PREMIUM.type : undefined].filter(Boolean);\n  }, [settings]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return chatId !== currentUserId && chatId !== SERVICE_NOTIFICATIONS_USER_ID && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterChatsByName(lang, chatIds, chatsById, searchQuery);\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...filterChatsByName(lang, chatIds, chatsById, searchQuery),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, lang, searchQuery, currentUserId]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [isAllowList, newSelectedCategoryTypes, newSelectedContactIds, onScreenSelect, screen]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <Picker\n        categories={withPremiumCategory ? PREMIUM_CATEGORY : undefined}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? lang('AlwaysAllowPlaceholder') : lang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? lang('AlwaysAllow') : lang('NeverAllow')}\n      >\n        <i className=\"icon icon-check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          className=\"mt-4\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  error,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  const lang = useOldLang();\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          placeholder={lang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={lang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={lang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={lang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={error}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { filterUsersByName, sortUserIds } from '../../../global/helpers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterUsersByName(contactIds, usersById, filter);\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <i className=\"icon icon-add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { filterUsersByName, isUserBot } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Picker from '../../common/Picker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <Picker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <i className=\"icon icon-arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransition(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransition(isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID).map((folderId) => ({\n      label: foldersById ? foldersById[folderId].title : '',\n      value: String(folderId),\n    })) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('FilterAddTo')}\n    >\n      <CheckboxGroup\n        options={folders}\n        selected={selectedFolderIds}\n        onChange={setSelectedFolderIds}\n        round\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('FilterAddTo')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { IS_SAFARI } from '../../../../util/windowEnvironment';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'inline') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) copyHtmlToClipboard(clipboardText.join(''), getMessageTextWithSpoilers(message)!);\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"lhinieg0\",\"get\":\"wysoV1T4\",\"skeleton\":\"gPqaUijR\",\"transition\":\"Yg6u_MIn\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../lib/teact/teactn';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './ReadTimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  menuSeparatorSize: 'thin' | 'thick';\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu, menuSeparatorSize,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <>\n      <MenuSeparator size={menuSeparatorSize} />\n      <MenuItem icon=\"message-read\" className={styles.item}>\n        <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n          {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n            <>\n              {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n              {!readDate && shouldRenderShowWhen && (\n                <div>\n                  {lang('PmRead')}\n                  <span className={styles.get} onClick={handleOpenModal}>\n                    {lang('PmReadShowWhen')}\n                  </span>\n                </div>\n              )}\n            </>\n          )}\n        </Transition>\n      </MenuItem>\n    </>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiSponsoredMessage,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { getUserFullName, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling, enableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage | ApiSponsoredMessage;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  noTransition?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onAboutAds?: NoneToVoidFunction;\n  onSponsoredHide?: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canReport,\n  canForward,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  noTransition,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onReport,\n  onFaveSticker,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onCopyMessages,\n  onAboutAds,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const withReactions = canShowReactionList && !noReactions;\n  const isSponsoredMessage = !('id' in message);\n  const messageId = !isSponsoredMessage ? message.id : '';\n  const seenByDates = !isSponsoredMessage ? message.seenByDates : undefined;\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = isSponsoredMessage\n    ? []\n    : getMessageCopyOptions(\n      message,\n      targetHref,\n      canCopy,\n      handleAfterCopy,\n      canCopyLink ? onCopyLink : undefined,\n      onCopyMessages,\n      onCopyNumber,\n    );\n\n  const getTriggerElement = useLastCallback(() => {\n    return isSponsoredMessage\n      ? document.querySelector('.Transition_slide-active > .MessageList .SponsoredMessage')\n      : document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${messageId}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const pinnedElement = document.querySelector<HTMLElement>('.HeaderPinnedMessageWrapper');\n    const extraHeightPinned = (((isMobile && !extraHeightAudioPlayer)\n        || (!isMobile && pinnedElement?.classList.contains('full-width')))\n      && pinnedElement?.offsetHeight) || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style, menuStyle, withScroll,\n  } = useMenuPosition(anchor, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  useEffect(() => {\n    disableScrolling(withScroll ? scrollableRef.current : undefined, '.ReactionPicker');\n\n    return enableScrolling;\n  }, [withScroll]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      positionX={positionX}\n      positionY={positionY}\n      style={style}\n      bubbleStyle={menuStyle}\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      shouldSkipTransition={noTransition}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={!isSponsoredMessage ? message.reactions?.results : undefined}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        style={menuStyle}\n        dir={lang.isRtl ? 'rtl' : undefined}\n        ref={scrollableRef}\n      >\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {isSponsoredMessage && message.sponsorInfo && (\n          <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n        )}\n        {isSponsoredMessage && (\n          <MenuItem icon=\"info\" onClick={onAboutAds}>\n            {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && message.canReport && (\n          <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n            {lang('ReportAd')}\n          </MenuItem>\n        )}\n        {isSponsoredMessage && onSponsoredHide && (\n          <>\n            <MenuSeparator />\n            <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>{lang('HideAd')}</MenuItem>\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && !isSponsoredMessage && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {!isSponsoredMessage && (canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            menuSeparatorSize={hasCustomEmoji ? 'thin' : 'thick'}\n            closeContextMenu={onClose}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiMessage,\n  ApiReaction,\n  ApiStickerSet, ApiStickerSetInfo,\n  ApiThreadInfo,\n} from '../../../api/types';\nimport type { ActiveDownloads, MessageListType } from '../../../global/types';\nimport type { IAlbum, IAnchorPosition, ThreadId } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getHasAdminRight,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActions,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen, selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ReportModal from '../../common/ReportModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canPostMessagesInChannel?: boolean;\n};\n\nconst selection = window.getSelection();\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canReport,\n  canShowReactionsCount,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  onClose,\n  onCloseAnimationEnd,\n  isChannel,\n  canPostMessagesInChannel,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [canQuoteSelection, setCanQuoteSelection] = useState(false);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    setCanQuoteSelection(\n      selectionText.text.trim().length > 0\n      && message.content.text!.text!.includes(selectionText.text),\n    );\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    openDeleteMessageModal({ isSchedule: messageListType === 'scheduled', album, message });\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = canQuoteSelection && selectionRange ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (isChannel && !canPostMessagesInChannel) {\n      openReplyMenu({ fromChatId: message.chatId, messageId: message.id, quoteText });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={canQuoteSelection}\n        canDelete={canDelete}\n        canReport={canReport}\n        canPin={canPin}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n      />\n      <ReportModal\n        isOpen={isReportModalOpen}\n        onClose={closeReportModal}\n        messageIds={reportMessageIds}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReply,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canForward,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActions(global, message, threadId)) || {};\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n    const canPostMessagesInChannel = isChannel && getHasAdminRight(chat, 'postMessages');\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    return {\n      threadId,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReply,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canReport,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canPostMessagesInChannel,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  onAboutAds: NoneToVoidFunction;\n  onReportAd: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  message,\n  anchor,\n  onAboutAds,\n  onReportAd,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { openPremiumModal, showDialog } = getActions();\n\n  const [isMenuOpen, , closeMenu] = useFlag(true);\n  const { transitionClassNames } = useShowTransition(isMenuOpen, onCloseAnimationEnd, undefined, false);\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    onAboutAds();\n    closeMenu();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    closeMenu();\n    openPremiumModal();\n    onClose();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    closeMenu();\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    closeMenu();\n    onReportAd();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName('ContextMenuContainer', transitionClassNames)}>\n      <MessageContextMenu\n        isOpen={isMenuOpen}\n        anchor={anchor}\n        message={message}\n        onClose={closeMenu}\n        onCloseAnimationEnd={closeMenu}\n        onAboutAds={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePrevious(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, threadId, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../lib/teact/teactn';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePrevious(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { REPLIES_USER_ID } from '../../config';\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanManage, selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsPremiumPurchaseBlocked,\n  selectIsRightColumnShown, selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport ReportModal from '../common/ReportModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  privacy: {\n    icon: 'info',\n    label: 'Privacy',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canReportChat?: boolean;\n  canDeleteChat?: boolean;\n  canGiftPremium?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canReportChat,\n  canDeleteChat,\n  canGiftPremium,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openBoostStatistics,\n    openGiftPremiumModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isReportModalOpen, setIsReportModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransition(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsReportModalOpen(true);\n  });\n\n  const closeReportModal = useLastCallback(() => {\n    setIsReportModalOpen(false);\n    onClose();\n  });\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftPremiumClick = useLastCallback(() => {\n    openGiftPremiumModal({ forUserIds: [chatId] });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(() => {\n    disableScrolling();\n\n    return enableScrolling;\n  }, []);\n\n  const lang = useOldLang();\n\n  const botButtons = useMemo(() => {\n    return botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n  }, [botCommands, closeMenu, lang, sendBotCommand]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return lang('Delete');\n    }\n\n    if (isPrivate) {\n      return lang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return lang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, lang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGiftPremium && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftPremiumClick}\n            >\n              {lang('GiftPremium')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n        {canReportChat && chat?.id && (\n          <ReportModal\n            isOpen={isReportModalOpen}\n            onClose={closeReportModal}\n            subject=\"peer\"\n            peerId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const canReportChat = isMainThread && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGiftPremium = Boolean(\n      userFullInfo?.premiumGifts?.length\n      && !selectIsPremiumPurchaseBlocked(global),\n    );\n\n    const topic = chat?.topics?.[threadId];\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canReportChat,\n      canDeleteChat: getCanDeleteChat(chat),\n      canGiftPremium,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n    };\n  },\n)(HeaderMenuContainer));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getIsSavedDialog, getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectCurrentTextSearch,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectTabState,\n} from '../../global/selectors';\nimport { getDayStartAt } from '../../util/dates/dateFormat';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS } from '../../util/windowEnvironment';\n\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport SearchInput from '../ui/SearchInput';\nimport SavedTagButton from './message/reactions/SavedTagButton';\n\nimport './MobileSearch.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  query?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  searchTag?: ApiReaction;\n  totalCount?: number;\n  foundIds?: number[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MobileSearchFooter: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  query,\n  savedTags,\n  searchTag,\n  totalCount,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n}) => {\n  const {\n    setLocalTextSearchQuery,\n    setLocalTextSearchTag,\n    searchTextMessagesLocal,\n    focusMessage,\n    closeLocalTextSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const tagsRef = useRef<HTMLDivElement>(null);\n\n  const [focusedIndex, setFocusedIndex] = useState(0);\n\n  const hasQueryData = Boolean(query || searchTag);\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window as any;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Focus message\n  useEffect(() => {\n    if (chat?.id && foundIds?.length) {\n      focusMessage({ chatId: chat.id, messageId: foundIds[0], threadId });\n      setFocusedIndex(0);\n    } else {\n      setFocusedIndex(-1);\n    }\n  }, [chat?.id, focusMessage, foundIds, threadId]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n    searchInput.blur();\n  }, [isHistoryCalendarOpen]);\n\n  const tags = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasTags = Boolean(tags?.length);\n  const areTagsDisabled = hasTags && !isCurrentUserPremium;\n\n  useHorizontalScroll(tagsRef, !hasTags);\n\n  useEffect(() => {\n    if (isActive) loadSavedReactionTags();\n  }, [hasTags, isActive]);\n\n  const handleMessageSearchQueryChange = useLastCallback((newQuery: string) => {\n    setLocalTextSearchQuery({ query: newQuery });\n\n    if (hasQueryData) {\n      runDebouncedForSearch(searchTextMessagesLocal);\n    }\n  });\n\n  const handleTagClick = useLastCallback((tag: ApiReaction) => {\n    if (areTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    setLocalTextSearchTag({ tag });\n\n    runDebouncedForSearch(searchTextMessagesLocal);\n  });\n\n  const handleUp = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleDown = useLastCallback(() => {\n    if (chat && foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      focusMessage({ chatId: chat.id, messageId: foundIds[newFocusIndex], threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleCloseLocalTextSearch = useLastCallback(() => {\n    closeLocalTextSearch();\n  });\n\n  return (\n    <div id=\"MobileSearch\" className={isActive ? 'active' : ''}>\n      <div className=\"header\">\n        <Button\n          size=\"smaller\"\n          round\n          color=\"translucent\"\n          onClick={handleCloseLocalTextSearch}\n        >\n          <i className=\"icon icon-arrow-left\" />\n        </Button>\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          onChange={handleMessageSearchQueryChange}\n        />\n      </div>\n      {hasTags && (\n        <div\n          ref={tagsRef}\n          className=\"tags-subheader custom-scroll-x no-scrollbar\"\n        >\n          {tags.map((tag) => (\n            <SavedTagButton\n              containerId=\"mobile-search\"\n              key={getReactionKey(tag.reaction)}\n              reaction={tag.reaction}\n              tag={tag}\n              withCount\n              isDisabled={areTagsDisabled}\n              isChosen={isSameReaction(tag.reaction, searchTag)}\n              onClick={handleTagClick}\n            />\n          ))}\n        </div>\n      )}\n      <div className=\"footer\">\n        <div className=\"counter\">\n          {hasQueryData ? (\n            foundIds?.length ? (\n              `${focusedIndex + 1} of ${totalCount}`\n            ) : foundIds && !foundIds.length ? (\n              'No results'\n            ) : (\n              ''\n            )\n          ) : (\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel=\"Search messages by date\"\n            >\n              <i className=\"icon icon-calendar\" />\n            </Button>\n          )}\n        </div>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleUp}\n          disabled={!foundIds || !foundIds.length || focusedIndex === foundIds.length - 1}\n        >\n          <i className=\"icon icon-up\" />\n        </Button>\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleDown}\n          disabled={!foundIds || !foundIds.length || focusedIndex === 0}\n        >\n          <i className=\"icon icon-down\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { query, savedTag, results } = selectCurrentTextSearch(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      query,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      searchTag: savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(MobileSearchFooter));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <i className=\"icon icon-favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  onReactionSelect?: (reaction: ApiReaction) => void;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  onReactionSelect,\n  message,\n  reactionsLimit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      return currentReactions.map(({ reaction }) => reaction);\n    }\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      return sortReactions((availableReactions || []).map(({ reaction }) => reaction), topReactions);\n    }\n\n    return sortReactions(enabledReactions.allowed, topReactions);\n  }, [availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { IAnchorPosition } from '../../../../types';\nimport {\n  type ApiAvailableEffect,\n  type ApiMessage, type ApiMessageEntity,\n  type ApiReaction, type ApiReactionCustomEmoji, type ApiSticker, type ApiStory, type ApiStorySkipped,\n  MAIN_THREAD_ID,\n} from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectChatMessage, selectIsContextMenuTranslucent, selectIsCurrentUserPremium,\n  selectPeerStory, selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../../hooks/useMenuPosition';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style,\n  } = useMenuPosition(renderingPosition, getTriggerElement, getRootElement, getMenuElement, getLayout);\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction = sticker.isCustomEmoji\n      ? { documentId: sticker.id } as ApiReactionCustomEmoji\n      : { emoticon: sticker.emoji } as ApiReaction;\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReaction | ApiSticker) => {\n    const reaction = 'id' in item ? { documentId: item.id } : item;\n\n    const sticker = 'documentId' in item\n      ? getGlobal().customEmojis.byId[item.documentId] : 'emoticon' in item ? undefined : item;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in item) {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({ });\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      positionX={positionX}\n      positionY={positionY}\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n  && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <i\n                className={buildClassName('icon', 'icon-delete', styles.actionItem, styles.deleteFile)}\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <i\n            className={buildClassName(\n              'icon',\n              attachment.shouldSendAsSpoiler ? 'icon-spoiler-disable' : 'icon-spoiler',\n              styles.actionItem,\n            )}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            <i\n              className={buildClassName('icon', 'icon-delete', styles.actionItem)}\n              onClick={() => onDelete(index)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n\nexport default isFullyVisible;\n","import animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\nimport isFullyVisible from './isFullyVisible';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll(container, allElements[index], position, SCROLL_MARGIN);\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePrevious(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"drop-target\":\"LhhRTsy6\",\"dropTarget\":\"LhhRTsy6\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState, MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n}) => {\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePrevious(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {lang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {lang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {lang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {lang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? lang('Next') : editingMessage ? lang('Save') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <i className=\"icon icon-close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransition(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, string> = {\n  recent: 'icon-recent',\n  people: 'icon-smile',\n  nature: 'icon-animals',\n  foods: 'icon-eats',\n  activity: 'icon-sport',\n  places: 'icon-car',\n  objects: 'icon-lamp',\n  symbols: 'icon-language',\n  flags: 'icon-flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll(containerRef.current!, categoryEl, 'start', FOCUS_MARGIN, SMOOTH_SCROLL_DISTANCE);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <i className={buildClassName('icon', icon)} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <i className=\"icon icon-close gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail canvas-blur-setup\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <i className=\"icon icon-search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <i className=\"icon icon-delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Button from '../../ui/Button';\nimport { UnfreezableMenu } from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  transformOriginX?: number;\n  transformOriginY?: number;\n  style?: string;\n};\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  positionX,\n  positionY,\n  transformOriginX,\n  transformOriginY,\n  style,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <UnfreezableMenu\n      isOpen={isOpen}\n      positionX={isAttachmentModal ? positionX : 'left'}\n      positionY={isAttachmentModal ? positionY : 'bottom'}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      transformOriginX={transformOriginX}\n      transformOriginY={transformOriginY}\n      style={style}\n    >\n      {content}\n    </UnfreezableMenu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const prevStickers = usePrevious(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransition from '../../../../hooks/useMediaTransition';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransition(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePrevious(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <i className=\"icon icon-lock-badge send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { ANONYMOUS_USER_ID, REPLIES_USER_ID } from '../../config';\nimport { getIsSavedDialog, getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessages,\n  selectCurrentTextSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n} from '../../global/selectors';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { debounce } from '../../util/schedulers';\nimport { renderMessageSummary } from '../common/helpers/renderMessageText';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport LastMessageMeta from '../common/LastMessageMeta';\nimport SavedTagButton from '../middle/message/reactions/SavedTagButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\n\nimport './RightSearch.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  messagesById?: Record<number, ApiMessage>;\n  query?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  searchTag?: ApiReaction;\n  totalCount?: number;\n  foundIds?: number[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst RightSearch: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isActive,\n  messagesById,\n  query,\n  totalCount,\n  foundIds,\n  savedTags,\n  searchTag,\n  isSavedMessages,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const {\n    searchTextMessagesLocal,\n    setLocalTextSearchTag,\n    focusMessage,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const tagsRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isActive]);\n\n  const tags = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasTags = Boolean(tags?.length);\n  const areTagsDisabled = hasTags && !isCurrentUserPremium;\n\n  useHorizontalScroll(tagsRef, !hasTags);\n\n  useEffect(() => {\n    if (isActive) loadSavedReactionTags();\n  }, [hasTags, isActive]);\n\n  const handleSearchTextMessagesLocal = useLastCallback(() => {\n    runDebouncedForSearch(searchTextMessagesLocal);\n  });\n\n  const handleTagClick = useLastCallback((tag: ApiReaction) => {\n    if (areTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    if (isSameReaction(tag, searchTag)) {\n      setLocalTextSearchTag({ tag: undefined });\n      return;\n    }\n\n    setLocalTextSearchTag({ tag });\n    handleSearchTextMessagesLocal();\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(handleSearchTextMessagesLocal, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !searchTag) || !viewportIds?.length || !messagesById) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return viewportIds.map((id) => {\n      const message = messagesById[id];\n      if (!message) {\n        return undefined;\n      }\n\n      const global = getGlobal();\n\n      const originalSender = (isSavedMessages || chatId === REPLIES_USER_ID || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n\n      const senderPeer = originalSender || messageSender;\n\n      const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n      return {\n        message,\n        senderPeer,\n        hiddenForwardTitle,\n        onClick: () => focusMessage({ chatId, threadId, messageId: id }),\n      };\n    }).filter(Boolean);\n  }, [query, searchTag, viewportIds, messagesById, isSavedMessages, chatId, threadId]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, true, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      foundResult.onClick();\n    }\n  }, '.ListItem-button', true);\n\n  const renderSearchResult = ({\n    message, senderPeer, hiddenForwardTitle, onClick,\n  }: {\n    message: ApiMessage;\n    senderPeer?: ApiPeer;\n    hiddenForwardTitle?: string;\n    onClick: NoneToVoidFunction;\n  }) => {\n    const text = renderMessageSummary(lang, message, undefined, query);\n\n    return (\n      <ListItem\n        key={message.id}\n        teactOrderKey={-message.date}\n        className=\"chat-item-clickable search-result-message m-0\"\n        onClick={onClick}\n      >\n        <Avatar\n          peer={senderPeer}\n          text={hiddenForwardTitle}\n        />\n        <div className=\"info\">\n          <div className=\"search-result-message-top\">\n            {senderPeer && <FullNameTitle peer={senderPeer} withEmojiStatus />}\n            {!senderPeer && hiddenForwardTitle}\n            <LastMessageMeta message={message} />\n          </div>\n          <div className=\"subtitle\" dir=\"auto\">\n            {text}\n          </div>\n        </div>\n      </ListItem>\n    );\n  };\n\n  const isOnTop = viewportIds?.[0] === foundIds?.[0];\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className=\"RightSearch custom-scroll\"\n      items={viewportResults}\n      preloadBackwards={0}\n      onLoadMore={getMore}\n      onKeyDown={handleKeyDown}\n    >\n      {hasTags && (\n        <div\n          ref={tagsRef}\n          className=\"search-tags custom-scroll-x no-scrollbar\"\n          key=\"search-tags\"\n        >\n          {tags.map((tag) => (\n            <SavedTagButton\n              containerId=\"local-search\"\n              key={getReactionKey(tag.reaction)}\n              reaction={tag.reaction}\n              tag={tag}\n              withCount\n              isDisabled={areTagsDisabled}\n              isChosen={isSameReaction(tag.reaction, searchTag)}\n              onClick={handleTagClick}\n            />\n          ))}\n        </div>\n      )}\n      {isOnTop && (\n        <p key=\"helper-text\" className=\"helper-text\" dir=\"auto\">\n          {!query ? (\n            lang('lng_dlg_search_for_messages')\n          ) : (totalCount === 0 || !viewportResults.length) ? (\n            lang('lng_search_no_results')\n          ) : totalCount === 1 ? (\n            '1 message found'\n          ) : (\n            `${(viewportResults.length && (totalCount || viewportResults.length))} messages found`\n          )}\n        </p>\n      )}\n      {viewportResults.map(renderSearchResult)}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const messagesById = selectChatMessages(global, chatId);\n    if (!messagesById) {\n      return {};\n    }\n\n    const { query, savedTag, results } = selectCurrentTextSearch(global) || {};\n    const { totalCount, foundIds } = results || {};\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      messagesById,\n      query,\n      totalCount,\n      foundIds,\n      isSavedMessages,\n      savedTags,\n      searchTag: savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(RightSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../global/types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, threadId, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: LangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: LangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small-mobile\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePrevious<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage } from '../../api/types';\n\nimport { getMessagePoll } from '../../global/helpers';\nimport { selectChat, selectChatMessage, selectTabState } from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = getMessagePoll(message)!;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${message.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n\n    return {\n      chat,\n      message,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.topicId ? chat?.topics?.[editTopicPanel?.topicId] : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isSignaturesShown: boolean;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  canPost?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isSignaturesShown,\n  canChangeInfo,\n  canInvite,\n  canPost,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    toggleSignatures,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleToggleSignatures = useCallback(() => {\n    toggleSignatures({ chatId, isEnabled: !isSignaturesShown });\n  }, [chatId, isSignaturesShown, toggleSignatures]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"channel-title\"\n            label={lang('EnterChannelName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"channel-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            onChange={handleAboutChange}\n            value={about}\n            maxLength={CHANNEL_MAX_DESCRIPTION}\n            maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          {canPost && (\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isSignaturesShown}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const isSignaturesShown = Boolean(chat?.isSignaturesShown);\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      isSignaturesShown,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      canPost: getHasAdminRight(chat, 'postMessages'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || chat?.adminRights?.addAdmins);\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    return Object.values(adminMembersById).sort((a, b) => {\n      if (a.isOwner) {\n        return -1;\n      } else if (b.isOwner) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const handleAddAdminClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  }, [onScreenSelect]);\n\n  const getMemberStatus = useCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [lang]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\" dir=\"auto\">\n            {isChannel\n              ? 'You can add administrators to help you manage your channel.'\n              : 'You can add administrators to help you manage your group.'}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <i className=\"icon icon-add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePrevious(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterUsersByName } from '../../../global/helpers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n\n    return filterUsersByName(availableMemberIds, usersById, search);\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"text-muted\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <i className=\"icon icon-add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <Checkbox\n              checked={isJoinToSend}\n              onCheck={handleJoinToSendCheck}\n              label={lang('ChannelSettingsJoinToSend')}\n            />\n            {isJoinToSend && (\n              <Checkbox\n                checked={isJoinRequest}\n                onCheck={handleJoinRequestCheck}\n                label={lang('ChannelSettingsJoinRequest')}\n              />\n            )}\n            <p className=\"text-muted\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <InputText\n            id=\"group-title\"\n            label={lang('GroupName')}\n            onChange={handleTitleChange}\n            value={title}\n            error={error === GROUP_TITLE_EMPTY ? error : undefined}\n            disabled={!canChangeInfo}\n          />\n          <TextArea\n            id=\"group-about\"\n            className=\"mb-2\"\n            label={lang('DescriptionPlaceholder')}\n            maxLength={GROUP_MAX_DESCRIPTION}\n            maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n            onChange={handleAboutChange}\n            value={about}\n            disabled={!canChangeInfo}\n            noReplaceNewlines\n          />\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  filterUsersByName, getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterUsersByName(localContactIds, usersById, searchQuery) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 24 + 32;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"text-muted hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"text-muted hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"text-muted hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <i className=\"icon icon-check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"text-muted\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"text-muted\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"text-muted\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"text-muted\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = lang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = lang('PeopleJoined', usage);\n    } else {\n      text = lang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${lang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${lang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${lang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += lang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += lang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${lang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: lang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: lang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: lang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: lang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"text-muted\">{isChannel ? lang('PrimaryLinkHelpChannel') : lang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <LinkField\n            className=\"section\"\n            link={primaryInviteLink}\n            withShare\n            onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n            title={chat?.usernames ? lang('PublicLink') : lang('lng_create_permanent_link_title')}\n          />\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {lang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"text-muted hint\" key=\"links-hint\">{lang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"text-muted\" key=\"title\">{lang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{lang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<i className={`icon icon-link link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={lang('DeleteAllRevokedLinks')}\n        text={lang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={lang('RevokeLink')}\n        text={lang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={lang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={lang('DeleteLink')}\n        text={lang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={lang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIcon\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"text-muted\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info mt-4\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info mt-4\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <InputText\n            id=\"user-first-name\"\n            label={lang('UserInfo.FirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            id=\"user-last-name\"\n            label={lang('UserInfo.LastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n          />\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"text-muted\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <i className=\"icon icon-check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Record<string, string>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice, ApiPaymentCredentials,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { LangCode, Price } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  invoice?: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n    botName?: string;\n  };\n  prices?: Price[];\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: Price[];\n  currency: string;\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  invoice,\n  prices,\n  shippingPrices,\n  checkoutInfo,\n  currency,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useOldLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    photo, title, text, termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, currency, lang.code, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && <img className={styles.checkoutPicture} src={photoUrl} draggable={false} alt=\"\" />}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {text && <div className={styles.checkoutDescription}>{renderText(text, ['br', 'links', 'emoji'])}</div>}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {prices && prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: LangCode | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      multiline={isMultiline}\n      narrow={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  error?: string;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  error,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const lang = useOldLang();\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={error ? lang(error) : undefined}\n        hint={passwordHint}\n        description={lang('PaymentConfirmationMessage', cardName)}\n        placeholder={lang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    error: payment.error?.message,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.savedCredentials,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const lang = useOldLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber}\n        />\n        { needCardholderName && (\n          <InputText\n            label={lang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry}\n          />\n          <InputText\n            label={lang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv}\n            teactExperimentControlled\n          />\n        </section>\n        { needCountry || needZip ? (\n          <h5>{lang('PaymentBillingAddress')}</h5>\n        ) : undefined }\n        { needCountry && (\n          <Select\n            label={lang('PaymentShippingCountry')}\n            onChange={handleCountryChange}\n            value={state.billingCountry}\n            hasArrow={Boolean(true)}\n            id=\"billing-country\"\n            error={formErrors.billingCountry}\n            tabIndex={0}\n            ref={selectCountryRef}\n          >\n            {\n              countryList.map(({ defaultName, name }) => (\n                <option\n                  value={defaultName}\n                  className=\"county-item\"\n                  selected={defaultName === state.billingCountry}\n                >\n                  {defaultName || name}\n                </option>\n              ))\n            }\n          </Select>\n        ) }\n        { needZip && (\n          <InputText\n            label={lang('PaymentShippingZipPlaceholder')}\n            onChange={handleBillingPostCodeChange}\n            value={state.billingZip}\n            inputMode=\"text\"\n            tabIndex={0}\n            maxLength={12}\n            error={formErrors.billingZip}\n          />\n        )}\n        <Checkbox\n          label={lang('PaymentCardSavePaymentInformation')}\n          checked={canSaveCredentials ? state.saveCredentials : false}\n          tabIndex={0}\n          onChange={handleChangeSaveCredentials}\n          disabled={!canSaveCredentials}\n        />\n        <p className=\"description\">\n          {lang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const lang = useOldLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{lang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={lang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1}\n            />\n            <InputText\n              label={lang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2}\n            />\n            <InputText\n              label={lang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city}\n            />\n            <InputText\n              label={lang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state}\n            />\n            <Select\n              label={lang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={lang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{lang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={lang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={lang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={lang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={lang('PaymentShippingSave')}\n          subLabel={lang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiCountry, ApiPaymentCredentials } from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { Price, ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isNameRequested?: boolean;\n  isShippingAddressRequested?: boolean;\n  isPhoneRequested?: boolean;\n  isEmailRequested?: boolean;\n  shouldSendPhoneToProvider?: boolean;\n  shouldSendEmailToProvider?: boolean;\n  currency?: string;\n  prices?: Price[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\ntype GlobalStateProps = Pick<TabState['payment'], (\n  'step' | 'shippingOptions' |\n  'savedInfo' | 'canSaveCredentials' | 'nativeProvider' | 'passwordMissing' | 'invoice' | 'error'\n)>;\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps & GlobalStateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  savedInfo,\n  canSaveCredentials,\n  isNameRequested,\n  isShippingAddressRequested,\n  isPhoneRequested,\n  isEmailRequested,\n  shouldSendPhoneToProvider,\n  shouldSendEmailToProvider,\n  currency,\n  passwordMissing,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  prices,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePrevious(step, true);\n  const prevRequestId = usePrevious(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.message,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [savedInfo, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.description || 'Error'}</h4>\n        <p>{error.description || 'Error'}</p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            prices={prices}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            currency={currency!}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!passwordMissing && canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(isShippingAddressRequested)}\n            needEmail={Boolean(isEmailRequested || shouldSendEmailToProvider)}\n            needPhone={Boolean(isPhoneRequested || shouldSendPhoneToProvider)}\n            needName={Boolean(isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={currency!}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (isEmailRequested && !email)\n          || (isPhoneRequested && !phone)\n          || (isNameRequested && !fullName);\n\n        if ((isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return lang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return lang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return lang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return lang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return lang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return lang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return lang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, lang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? lang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, currency!, lang.code))\n    : lang('Next');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {lang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <i className={buildClassName(\n            'icon', step === PaymentStep.Checkout ? 'icon-close' : 'icon-arrow-left',\n          )}\n          />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps & GlobalStateProps => {\n    const {\n      step,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      invoice,\n      invoiceContainer,\n      nativeProvider,\n      nativeParams,\n      passwordMissing,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      savedCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n      botId,\n      type,\n    } = selectTabState(global).payment;\n\n    const countryList = global.countryList.general;\n\n    // Handled in `StarPaymentModal`\n    if (type === 'stars') {\n      return {\n        countryList,\n      };\n    }\n\n    let providerName = nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const {\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n    } = (invoiceContainer || {});\n    const bot = botId ? selectUser(global, botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      savedInfo,\n      canSaveCredentials,\n      nativeProvider: providerName,\n      passwordMissing,\n      isNameRequested,\n      isShippingAddressRequested,\n      isPhoneRequested,\n      isEmailRequested,\n      shouldSendPhoneToProvider,\n      shouldSendEmailToProvider,\n      currency,\n      prices,\n      isProviderError,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      savedCredentials,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: Price[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"at4C5dtI\",\"positive\":\"ziem0hIt\",\"negative\":\"w5IBroJ0\",\"header\":\"LGfGeGBe\",\"amount\":\"qw8_2l5a\",\"title\":\"jUEywRxM\",\"description\":\"fqcBAivG\",\"tid\":\"Ryt8HXRa\",\"footer\":\"YxElnkFc\",\"starsBackground\":\"gqB7YL11\",\"mediaShift\":\"IKoS4bgV\",\"copyIcon\":\"VjTcIW6A\",\"mediaPreview\":\"gKrSXXpY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiInvoice,\n  ApiPeer,\n  ApiReceipt, ApiReceiptRegular, ApiShippingAddress,\n  ApiStarsTransactionPeer,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMessageLink } from '../../global/helpers';\nimport { buildStarsTransactionCustomPeer, formatStarsTransactionAmount } from '../../global/helpers/payments';\nimport { selectPeer, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatDateTimeToString } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport StarIcon from '../common/icons/StarIcon';\nimport SafeLink from '../common/SafeLink';\nimport TableInfoModal, { type TableData } from '../modals/common/TableInfoModal';\nimport PaidMediaThumb from '../modals/stars/PaidMediaThumb';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\nimport styles from './ReceiptModal.module.scss';\n\nimport StarsBackground from '../../assets/stars-bg.png';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  receipt?: ApiReceipt;\n  peer?: ApiPeer;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen, receipt, peer, onClose,\n}) => {\n  const { showNotification, openMediaViewer } = getActions();\n  const lang = useOldLang();\n\n  const handleOpenMedia = useLastCallback(() => {\n    const media = receipt?.type === 'stars' && receipt.media;\n    if (!media) return;\n\n    openMediaViewer({\n      origin: MediaViewerOrigin.StarsTransaction,\n      standaloneMedia: media.flatMap((item) => Object.values(item)),\n    });\n  });\n\n  const starModalData = useMemo(() => {\n    if (receipt?.type !== 'stars') return undefined;\n\n    const customPeer = (receipt.peer && receipt.peer.type !== 'peer' && buildStarsTransactionCustomPeer(receipt.peer))\n      || undefined;\n\n    const botId = receipt.botId || (receipt.peer?.type === 'peer' ? receipt.peer.id : undefined);\n    const toName = receipt.peer && lang(getStarsPeerTitleKey(receipt.peer));\n\n    const title = receipt.title || (customPeer ? lang(customPeer.titleKey) : undefined);\n\n    const messageLink = peer && receipt.messageId ? getMessageLink(peer, undefined, receipt.messageId) : undefined;\n\n    const media = receipt.media;\n\n    const mediaAmount = media?.length || 0;\n    const areAllPhotos = media?.every((m) => !m.video);\n    const areAllVideos = media?.every((m) => !m.photo);\n\n    const mediaText = areAllPhotos ? lang('Stars.Transfer.Photos', mediaAmount)\n      : areAllVideos ? lang('Stars.Transfer.Videos', mediaAmount)\n        : lang('Media', mediaAmount);\n\n    const description = receipt.text || (media ? mediaText : undefined);\n\n    const header = (\n      <div className={styles.header}>\n        {media && (\n          <PaidMediaThumb\n            className={buildClassName(styles.mediaPreview, 'transaction-media-preview')}\n            media={media}\n            onClick={handleOpenMedia}\n          />\n        )}\n        <img\n          className={buildClassName(styles.starsBackground, receipt.media && styles.mediaShift)}\n          src={StarsBackground}\n          alt=\"\"\n          draggable={false}\n        />\n        {title && <h1 className={styles.title}>{title}</h1>}\n        <p className={styles.description}>{description}</p>\n        <p className={styles.amount}>\n          <span className={buildClassName(styles.amount, receipt.totalAmount < 0 ? styles.negative : styles.positive)}>\n            {formatStarsTransactionAmount(receipt.totalAmount)}\n          </span>\n          <StarIcon type=\"gold\" size=\"big\" />\n        </p>\n      </div>\n    );\n\n    const tableData: TableData = [];\n\n    tableData.push([\n      lang(receipt.totalAmount < 0 ? 'Stars.Transaction.To' : 'Stars.Transaction.Via'),\n      botId ? { chatId: botId } : toName || '',\n    ]);\n\n    if (messageLink) {\n      tableData.push([lang('Stars.Transaction.Media'), <SafeLink url={messageLink} text={messageLink} />]);\n    }\n\n    tableData.push([\n      lang('Stars.Transaction.Id'),\n      (\n        <span\n          className={styles.tid}\n          onClick={() => {\n            copyTextToClipboard(receipt.transactionId);\n            showNotification({\n              message: lang('StarsTransactionIDCopied'),\n            });\n          }}\n        >\n          {receipt.transactionId}\n          <Icon className={styles.copyIcon} name=\"copy\" />\n        </span>\n      ),\n    ]);\n\n    tableData.push([\n      lang('Stars.Transaction.Date'),\n      formatDateTimeToString(receipt.date * 1000, lang.code, true),\n    ]);\n\n    const footerText = lang('lng_credits_box_out_about');\n    const footerTextParts = footerText.split('{link}');\n\n    const footer = (\n      <span className={styles.footer}>\n        {footerTextParts[0]}\n        <SafeLink url={lang('StarsTOSLink')} text={lang('lng_credits_summary_options_about_link')} />\n        {footerTextParts[1]}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n      avatarPeer: !receipt.photo ? (peer || customPeer) : undefined,\n    };\n  }, [lang, receipt, peer]);\n\n  if (receipt?.type === 'regular') {\n    return <ReceiptModalRegular isOpen={isOpen} receipt={receipt} onClose={onClose} />;\n  }\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      className={styles.modal}\n      header={starModalData?.header}\n      tableData={starModalData?.tableData}\n      footer={starModalData?.footer}\n      noHeaderImage={Boolean(receipt?.media)}\n      headerAvatarWebPhoto={receipt?.photo}\n      headerAvatarPeer={starModalData?.avatarPeer}\n      buttonText={lang('OK')}\n      onClose={onClose}\n    />\n  );\n};\n\nfunction ReceiptModalRegular({\n  isOpen, receipt, onClose,\n}: {\n  isOpen?: boolean;\n  receipt: ApiReceiptRegular;\n  onClose: NoneToVoidFunction;\n}) {\n  const {\n    credentialsTitle,\n    currency,\n    prices,\n    tipAmount,\n    totalAmount,\n    info,\n    photo,\n    shippingMethod,\n    shippingPrices,\n    text,\n    title,\n  } = receipt;\n  const lang = useOldLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const checkoutInfo = useMemo(() => {\n    return getCheckoutInfo(credentialsTitle, info, shippingMethod);\n  }, [info, shippingMethod, credentialsTitle]);\n\n  const invoice: ApiInvoice = useMemo(() => {\n    return {\n      mediaType: 'invoice',\n      photo,\n      text: text!,\n      title: title!,\n      amount: totalAmount!,\n      currency: currency!,\n    };\n  }, [currency, photo, text, title, totalAmount]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      <div>\n        <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className=\"close-button\"\n            color=\"translucent\"\n            round\n            size=\"smaller\"\n            onClick={closeModal}\n            ariaLabel=\"Close\"\n          >\n            <i className=\"icon icon-close\" />\n          </Button>\n          <h3> {lang('PaymentReceipt')} </h3>\n        </div>\n        <div className=\"receipt-content custom-scroll\">\n          <Checkout\n            prices={prices}\n            shippingPrices={shippingPrices}\n            totalPrice={totalAmount}\n            tipAmount={tipAmount}\n            invoice={invoice}\n            checkoutInfo={checkoutInfo}\n            currency={currency!}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n\n    const peerId = receipt?.type === 'stars' && (receipt.botId || (receipt.peer?.type === 'peer' && receipt.peer.id));\n    const peer = peerId ? selectPeer(global, peerId) : undefined;\n\n    return {\n      receipt,\n      peer,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?:\n  { phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getStarsPeerTitleKey(peer: ApiStarsTransactionPeer) {\n  switch (peer.type) {\n    case 'appStore':\n      return 'AppStore';\n    case 'playMarket':\n      return 'PlayMarket';\n    case 'fragment':\n      return 'Fragment';\n    case 'premiumBot':\n      return 'StarsTransactionBot';\n    case 'ads':\n      return 'StarsTransactionAds';\n    default:\n      return 'Stars.Transaction.Unsupported.Title';\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Picker from '../../common/Picker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id), [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  if (!userIds) return undefined;\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <i className=\"icon icon-close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <Picker\n            className={styles.userPicker}\n            itemIds={userIds!}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            isRoundCheckbox\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker);\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n"],"names":["getViewableMedia","params","type","media","mediaIndex","isSingle","length","avatar","avatarOwner","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","isMessageImageFullyVisible","container","imageEl","messageListElement","imgOffsetTop","offsetTop","closest","id","includes","parentElement","scrollTop","offsetHeight","getNodes","index","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","SharedMedia","SearchResult","MiddleHeaderAvatar","SuggestedAvatar","StarsTransaction","undefined","ScheduledInline","Inline","MESSAGE_CONTENT_SELECTOR","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","_ref","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","useMemo","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","arguments","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","getZoomChange","setZoomChange","useZoomChange","memo","isOpen","profileId","onClose","onConfirm","deleteProfilePhoto","deleteChatPhoto","getActions","handleDeletePhoto","useCallback","isUserId","chatId","lang","useOldLang","React","Modal","onEnter","className","title","Button","color","isText","onClick","withGlobal","global","_ref4","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarPhoto","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActions","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","canReport","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","useLastCallback","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","_ref2","onTrigger","round","ariaLabel","renderDeleteModal","DeleteProfilePhotoModal","openDeleteModalHandler","isSchedule","menuItems","isForwardingAllowed","content","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","map","_ref3","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","text","isForVideo","isForceMobileVersion","isMultiline","setIsMultiline","useState","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","classNames","buildClassName","e","stopPropagation","dir","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","request","name","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","SeekLine","ripple","RangeSlider","bold","value","onChange","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransition","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","VideoPlayerControls","textMessage","withAnimation","isMoving","onFooterClick","toggleControlsOnMove","VideoPlayer","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","MediaViewerFooter","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","target","calculateOffsetBoundaries","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","cancelDrag","dragOffsetX","dragOffsetY","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","_ref5","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","MediaViewerContent","isRtl","toFixed","element","selector","matches","messageSender","selectSender","owner","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","subtitle","isFallbackAvatar","fallbackPhoto","date","formattedDate","formatMediaDateTime","count","countText","parts","chat","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getSenderTitle","Avatar","peer","renderText","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","animationKey","senderId","prevSenderId","usePrevious","headerAnimation","isGhostAnimation","isReportModalOpen","openReportModal","closeReportModal","currentItem","getMediaViewerItem","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","dispatchHeavyAnimationEvent","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","handleForward","fromChatId","messageIds","captureEscKeyListener","stopCurrentAudio","peerId","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","SenderInfo","MediaViewerActions","ReportModal","subject","MediaViewerSlides","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","usersById","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterUsersByName","Picker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","forceShowSelf","onSelectedIdsChange","onFilterChange","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","seconds","hours","remainingSeconds","convertSecondsToHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","label","footer","info","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","onCloseAnimationEnd","header","closeButton","headerTitle","renderHeaderContent","slideClassName","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","scrollHeight","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","sender","fromPeerId","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","Icon","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","EmbeddedStoryForward","MessageText","messageOrStory","withTranslucentThumbs","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","emoticon","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","documentId","withEffectOnly","DEFAULT_STORY_DURATION_S","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","appConfig","user","selectUser","selectChat","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransition","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","onStart","isLongPressActive","isPressed","timerId","canProcessEvent","cancel","useLongPress","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryFooter","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","query","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","selected","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","StoryView","Array","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StealthModeModal","StorySettings","TOPIC_ICON_SIZE","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","topicsResult","searchTitle","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","handleTopicClick","topicId","InputText","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","CHAT_HEIGHT_PX","clickArg","TopicIcon","letterClassName","Loading","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","API_CHAT_TYPES","onSelectRecipient","setSearch","ids","priorityIds","chatIds","isDeletedUser","sorted","sortChatIds","filterChatsByName","filterChatIdsByType","renderingIds","ChatOrUserPicker","isForwarding","isManyMessages","isStory","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","isSelf","toChatId","getUserFirstOrLastName","getChatTitle","RecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","dismissDialog","acceptInviteConfirmation","sendMessage","isModalOpen","dialog","contactRequest","invite","hash","about","participantsCount","isRequestNeeded","participantsText","joinText","requestToJoinText","renderInviteHeader","handleJoinClick","renderInvite","handleConfirm","contact","pick","messageList","getReadableErrorText","withVideo","notifications","dismissNotification","localId","actionText","Notification","onDismiss","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","openUrl","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","getHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","valueOf","CalendarModal","userStatus","selectUserStatus","phoneCodeList","countryList","phoneCodes","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","getUserStatus","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","attachBot","attachMenu","bots","selectCurrentChat","theme","selectTheme","isPaymentModalOpen","payment","isStarPaymentModalOpen","paymentStatus","closeWebApp","sendWebViewData","prolongWebView","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","mainButton","setMainButton","isBackButtonVisible","setIsBackButtonVisible","isSettingsButtonVisible","setIsSettingsButtonVisible","backgroundColor","setBackgroundColor","headerColor","setHeaderColor","shouldConfirmClosing","setShouldConfirmClosing","isCloseModalOpen","openCloseModal","hideCloseModal","isRemoveModalOpen","openRemoveModal","hideRemoveModal","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequesingWriteAccess","setIsRequestingWriteAccess","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","themeParams","extractCurrentThemeParams","bg_color","frameRef","buttonText","queryId","replyInfo","isSimple","reloadFrame","sendEvent","sendViewport","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","forceReloadFrame","once","eventType","isNonStable","eventData","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","TME_LINK_PREFIX","path_full","is_visible","validateHexColor","color_key","newColor","button_color","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","need_confirmation","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","shouldShowMainButton","useInterval","handleMainButtonClick","handleSettingsButtonClick","handleRefreshClick","buttonId","button_id","handleAppPopupModalClose","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleToggleClick","handleBackClick","handleAcceptPhone","handleAcceptWriteAccess","openBotChat","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","prevMainButtonColor","prevMainButtonTextColor","prevMainButtonIsActive","prevMainButtonText","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideButton","setShouldHideButton","buttonChangeTimeout","shortName","isAttachBot","sandbox","allow","allowFullScreen","hasCloseButton","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","description","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","fill","isLast","isPreLast","isFirst","isPreFirst","isInvisible","leftValue","rightValue","floatingBadgeIcon","rightStyle","viewBox","COLOR_START","COLOR_END","colorStepProgress","lerp","PremiumLimitsCompare","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","PremiumFeatureItem","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","amount","months","currency","perMonthPrice","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumLimitPreview","PremiumFeaturePreviewStickers","PremiumFeaturePreviewStories","videoSections","PremiumFeaturePreviewVideo","videos","PREMIUM_BOTTOM_VIDEOS","SliderDots","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","dialogRef","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","options","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","stickerSetTitle","template","first","second","emoji","thumbCustomEmojiId","CustomEmoji","link","monthOption","subscribeButtonText","PremiumFeatureModal","isBig","PremiumLogo","PremiumSubscriptionOption","statusText","entities","statusEntities","renderFooterText","gifts","forUserIds","isCompleted","giftPremiumModal","boostPerSentGift","boostsPerSentGift","BOOST_PER_SENT_GIFT","closeGiftPremiumModal","selectedMonthOption","setSelectedMonthOption","selectedUserQuantity","giftingUserList","selectedGift","gift","filteredGifts","fullMonthlyGiftAmount","basicGift","handlePremiumClick","userNameList","modalDialog","avatars","headerText","center","part","subpart","boostIcon","subscriptionOptions","match","premiumFeatures","Link","isPrimary","renderPremiumFeaturesLink","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","main","picker","noScrollRestore","isCountryList","entityType","statusesById","userStatusesById","isSuperGroup","members","adminMembersById","chatFullInfo","selectChatFullInfo","isChatSuperGroup","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","pendingChannelId","setPendingChannelId","channelsIds","adminIds","memberIds","sortUserIds","displayedMembersIds","filteredContactIds","isUserBot","displayedChannelIds","foundChannelIds","contactId","handleSendIdList","confirmPrivateLinkChannelSelection","prevIds","handleSelectedMemberIdsChange","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","isLink","onClickAction","userNames","selectedMemberIds","displayText","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isEntityPickerModalOpen","openEntityPickerModal","closeEntityPickerModal","setEntityType","TYPE_OPTIONS","GiveawayUsersRound","customExpireDate","setCustomExpireDate","selectedUserCount","setSelectedUserCount","selectedGiveawayOption","setGiveawayOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","selectedCountriesIds","setSelectedCountriesIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","boostQuantity","isRandomUsers","SUBSCRIBER_OPTIONS","subLabel","monthQuantity","userCountOptions","uniqueUserCounts","Set","quantity","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleUserCountChange","newValue","handlePrizeDescriptionChange","handleAdd","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSetIdsListChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","GiveawayTypeOption","RangeSliderWithMarks","rangeCount","marks","filteredChannelIds","deleteParticipantsHandler","iconClassName","RadioGroup","subLabelClassName","formatDateTimeToString","CountryPickerModal","AppendEntityPickerModal","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","closePremiumGiftingModal","openGiftPremiumModal","displayedUserIds","handleSelectedUserIdsChange","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","currentIndex","stickerSetEl","isClose","animateScroll","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerMediaHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","noContextMenu","isSavedMessages","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","setEmojiStatus","menuRef","isFree","hasEffect","isCustomEmoji","isLocked","shouldLoad","isIntesectingForShowing","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","shouldRenderContextMenu","getTriggerElement","getRootElement","getMenuElement","transformOriginX","transformOriginY","menuStyle","useMenuPosition","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","expires","getServerTimeOffset","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","withSharedAnimation","noFastClick","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","isSameReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","getReactionKey","ReactionEmoji","isHqEmoji","canvasRef","StickerButton","has","HEADER_BUTTON_WIDTH","DEFAULT_ID_PREFIX","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","defaultTagReactions","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","prefix","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","concat","defaultStatusIconsPack","defaultTopicIconsPack","userSetIds","unshift","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","useHorizontalScroll","newLeft","handleEmojiSelect","handleReactionSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","StickerSetCover","StickerSet","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CustomEmojiPicker","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","boosts","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","handleCloseClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","formatDateInFuture","tableData","headerImageUrl","headerAvatarPeer","headerAvatarWebPhoto","noHeaderImage","onButtonClick","withAvatar","hasAbsoluteCloseButton","webPhoto","logo","table","row","cell","PickerSelectedItem","chatItem","chatMessage","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","isFromGiveaway","TableInfoModal","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","newChatsCount","badgeText","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","alreadyPeerIds","Badge","buttonBadge","isAlternateColor","suggestedPeerIds","leaveChatlist","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","renderingInfo","renderingFolderTitle","folderTabNumber","ChatlistAlready","ChatlistNew","ChatlistDelete","folderTitle","foldersWrapper","folders","badgeCount","isBadgeActive","balance","smallerText","balanceBottom","StarIcon","formatInteger","SingleMediaThumb","boughtMedia","mediaBlob","blurry","full","isTransactionPreview","arr","MediaSpoiler","noOutline","transaction","getStarsReceipt","stars","transactionPeer","useSelector","selectOptionalPeer","avatarPeer","CUSTOM_PEER_PREMIUM","customPeer","buildStarsTransactionCustomPeer","titleKey","subtitleKey","isRefund","hasFailed","isPending","PaidMediaThumb","formatStarsTransactionAmount","TRANSACTION_TYPES","TRANSACTION_TABS","StarTopupOption","starsCount","optionTop","stackedStars","stackedStar","optionBottom","originPayment","starsBalanceState","originPaymentBot","closeStarsBalanceModal","loadStarsTransactions","history","topupOptions","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","selectedTabIndex","setSelectedTabIndex","productStarsPrice","invoice","starsNeeded","originBotName","shouldShowTransactions","all","transactions","renderingOptions","canExtend","maxOption","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","tosText","SafeLink","BalanceBlock","modalBalance","hiddenHeader","starHeaderText","StarLogo","logoBackground","StarsBackground","moreOptions","noForcedUpperCase","secondaryInfo","TabList","big","activeTab","tabs","onSwitchTab","renderCount","shouldRestoreHeight","noFastList","TransactionItem","messageInputInvoice","inputInvoice","isPaidMedia","paidMediaMessage","paidMediaChat","closePaymentModal","openStarsBalanceModal","sendStarPaymentForm","markLoading","unmarkLoading","botName","starsText","areAllPhotos","areAllVideos","mediaText","channelTitle","handlePayment","price","paymentContent","paymentImages","paymentPhoto","paymentImageBackground","paymentButton","paymentAmount","paymentButtonStar","isRevenueSharing","minLevelSignal","useSelectorSignal","channelRestrictAdsLevelMin","minLevelToRestrictAds","regularAdContent","revenueSharingAdContent","isStatic","Separator","reportSponsoredMessage","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","randomId","renderingSection","renderingDepth","sectionDepth","sections","bottomText","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","messageIdList","selectCurrentMessageIds","isChatBasicGroup","selectSenderFromMessage","contactName","getPrivateChatUserId","isChatWithBot","selectBot","chatBot","REPLIES_USER_ID","canBanUsers","isCreator","getHasAdminRight","isOwn","isOwnMessage","willDeleteForCurrentUserOnly","willDeleteForAll","album","deleteMessages","deleteScheduledMessages","reportMessages","deleteChatMember","updateChatMemberBannedRights","closeDeleteMessageModal","defaultBannedRights","chosenDeleteOption","setChosenDeleteOption","chosenBanOption","setChosenBanOptions","chosenSpanOption","setChosenSpanOptions","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","isSenderOwner","isOwner","shouldShowAdditionalOptions","userName","ACTION_SPAM_OPTION","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByUserId","selectedMessageIdList","msgId","senderPeer","handleDeleteMessages","filteredMessageIdList","shouldDeleteForAll","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageForAll","messages","handleDeleteMessageForSelf","reason","handleDeleteOptionChange","handleBanOptionChange","handleSpanOptionChange","mainContainer","actionTitle","CheckboxGroup","restrictionContainer","restrictionContainerOpen","restrictionTitle","PermissionCheckboxList","dropdownList","dropdownListOpen","listItemButton","dialogButtons","isPrivateChat","canPinForAll","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","pinnedMessagesCount","onUnpin","selectedMessageIds","selectedMessages","selectCanDeleteSelectedMessages","exitMessageSelectMode","oldLang","useLang","senderList","selectSendersFromSelectedMessages","userList","uniqueUserIds","nestedOptionsWithAvatarList","showAdditionalOptions","buildCollectionByCallback","nestedOptions","prev","userIdList","isNaN","onCloseHandler","nestedCheckbox","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","onBackspace","onEsc","handleCopy","prevSelectedMessagesCount","formattedMessagesCount","renderButton","DeleteSelectedMessageModal","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","onSuccess","handleOpenPremium","LOCAL_TGS_URLS","ReadTime","LastSeen","reactorModal","reactors","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","LoadMoreDirection","Backwards","formatIntegerCompact","flatMap","peerReactions","reactor","seenByUser","FullNameTitle","withEmojiStatus","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","dispatchHeavyAnimationStop","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","copyTextToClipboard","formattedCollectible","purchaseDate","formatCurrencyAsString","cryptoCurrency","cryptoAmount","Mention","chip","createMapStateToProps","props","fetchingStatus","globalSearch","currentType","isVoice","byChatId","globalMessagesByChatId","searchChatId","shouldWarnAboutSvg","byKey","runThrottled","cb","searchMessagesGlobal","openAudioPlayer","foundMessages","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","privateChatUserId","privateChatUser","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","shouldReplaceHistory","useSelectWithEnter","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","foundTopicIds","dateSearchQuery","onSearchDateSelect","onReset","openThread","nothingFound","DateSuggest","LeftSearchResultTopic","ChatMessage","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","withUsername","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","storyViewerOrigin","MuteChatModal","ChatFolderModal","topUserIds","topPeers","recentlyFoundChatIds","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","LeftSearchResultChat","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","handleChatClick","handlePickerItemClick","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","handleClickShowMoreLocal","handleClickShowMoreGlobal","noScrollRestoreOnTop","RecentContacts","CURRENT_TYPE","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","WebLink","onMessageClick","handleSelectMedia","isMediaGrid","isMessageList","itemSelector","Media","TABS","GlobalSearchContent","ChannelList","Links","Files","Music","Voice","CHAT_TABS","currentContent","setGlobalSearchContent","setGlobalSearchDate","setActiveTab","parseDateString","handleSwitchTab","tab","handleSearchDateSelect","ChatMessageResults","ChatResults","MediaResults","LinkResults","FileResults","AudioResults","INITIAL_STATE","currentPassword","password","hint","email","twoFaReducer","state","payload","maxChats","selectCurrentLimit","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","handleFilterChange","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","isRoundCheckbox","onSelectedCategoriesChange","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","INCLUDED_CHAT_TYPES","typeKey","EXCLUDED_CHAT_TYPES","renderChatType","AnimatedIcon","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","handleDrag","translation","splice","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","allowSelection","shareFolderScreen","pinnedChatIds","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","FoldersShare","withShare","onRevoke","onDisabledClick","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsFoldersMain","SettingsFoldersEdit","SettingsFoldersChatFilters","SettingsShareChatlist","shouldDisablePasswordManager","expectedPassword","clearError","validationError","setValidationError","shouldShowPassword","setShouldShowPassword","newPassword","handleClearError","PasswordMonkey","isPasswordVisible","PasswordForm","shouldResetValue","onChangePasswordVisibility","fullReset","STICKER_SIZE_PASSCODE","Congratulations","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","passcode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeStart","SettingsPasscodeForm","SettingsPasscodeCongratulations","PasscodeEnabled","SettingsPasscodeEnabled","premiumSection","handleOpenPremiumModal","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","canLimitNewMessagesWithoutPremium","canChange","PrivacyLockedOption","hidden","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","SettingsActiveSession","iconDevice","dateActive","box","appName","appVersion","ip","region","getLocation","note","actionHeader","actionName","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","terminateWebAuthorization","renderingBot","browser","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","SettingsActiveWebsite","handleCardClick","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","canPlayAnimatedEmojis","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","StickerSetCard","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","isChecked","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","language","displayedOptions","setDisplayedOptions","otherLanguages","unselected","newDoNotTranslate","filteredDisplayedOptions","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","selectUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","TextArea","maxLengthIndicator","UsernameInput","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","ManageUsernames","shouldShowLoginCodeInChatList","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","Experimental","IS_ELECTRON","TIME_FORMAT_OPTIONS","shouldUseSystemTheme","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","newSize","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","WallpaperTile","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","isDragging","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","callback","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","Notifications","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyPhoneNumberAllowedContacts","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","languages","canTranslate","canTranslateChats","loadLanguages","loadAttachBots","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","buildOptions","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","loadingOption","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","starsBalance","shouldDisplayStars","sessionCount","openSupportChat","openPremiumGiftingModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","langName","FAQ_URL","PRIVACY_URL","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","_ref6","_ref7","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","totalCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","setUserSearchQuery","availableContactIds","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","BlockUserModal","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","selectShouldHideReadMarks","canShowHideReadTime","handleChangeShouldHideReadMarks","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","prepareSubtitle","userIdsCount","chatIdsCount","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","secondaryScreen","SettingsPrivacyPublicProfilePhoto","SettingsPrivacyLastSeen","PREMIUM_CATEGORY","getCurrentPrivacySettings","isAllowList","withPremiumCategory","setPrivacySettings","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","SERVICE_NOTIFICATIONS_USER_ID","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","setDefaultReaction","addedSetIds","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","STICKER_SIZE_TWO_FA","animatedEmoji","selectAnimatedEmoji","codeLength","twoFaSettings","waitingEmailCodeLength","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaStart","SettingsTwoFaPassword","SettingsTwoFaSkippableForm","SettingsTwoFaEmailCode","SettingsTwoFaCongratulations","SettingsTwoFaEnabled","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","SettingsHeader","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsMain","SettingsEditProfile","SettingsGeneral","SettingsQuickReaction","SettingsCustomEmoji","SettingsNotifications","SettingsDataStorage","SettingsPrivacy","SettingsLanguage","SettingsDoNotTranslate","SettingsStickers","SettingsExperimental","SettingsGeneralBackground","SettingsGeneralBackgroundColor","SettingsActiveSessions","SettingsActiveWebsites","SettingsPrivacyBlockedUsers","SettingsPrivacyVisibility","SettingsPrivacyVisibilityExceptionList","SettingsFolders","SettingsTwoFa","SettingsPasscode","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","openNewContactDialog","isSearching","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleDescriptionChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","NewChatStep1","NewChatStep2","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","div","ALLOWED_QUOTE_ENTITIES","ApiMessageEntityTypes","Bold","Italic","Underline","Strike","Spoiler","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","currentElement","tag","wrapHtmlWithMarkupTags","innerHTML","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","PinMessageModal","useModuleLoader","Bundles","Extra","getCopyLabel","hasSelection","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","menuSeparatorSize","openPrivacySettingsNoticeModal","readDate","MenuSeparator","handleOpenModal","isReactionPickerOpen","enabledReactions","reactionsLimit","anchor","targetHref","canSendNow","canReschedule","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","hasCustomEmoji","noTransition","isInSavedMessages","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onCopyMessages","onAboutAds","onSponsoredHide","onSponsorInfo","onSponsoredReport","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","openCustomEmojiSets","scrollableRef","withReactions","isSponsoredMessage","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","customEmojiSet","handleOpenCustomEmojiSets","copyOptions","afterEffect","getMessageText","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","selectionParentNode","selectedMessageElement","checkMessageHasSelection","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","extraHeightAudioPlayer","pinnedElement","extraHeightPinned","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","withScroll","handleOpenMessageReactionPicker","bubbleStyle","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","messagesCount","withPreventDefaultOnMouseDown","inline","withWrap","sponsorInfo","ReadTimeMenuItem","detectedLanguage","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","noOptions","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isScheduled","canPostMessagesInChannel","isMessageLocal","hasTtl","hasMessageTtl","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","isForbidden","hasFullInfo","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectIsReactionPickerOpen","updateDraftReplyInfo","setEditingId","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","setIsMenuOpen","setIsReportModalOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","canQuoteSelection","setCanQuoteSelection","requestCalendar","calendar","useSchedule","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","downloadableMedia","selectionRange","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","startOffset","endOffset","closeMenu","handleDelete","handleReport","closePinModal","handleReply","quoteText","replyToMsgId","replyToPeerId","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","shouldIncludeGrouped","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","MessageContextMenu","onReportAd","showDialog","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendStickers","shouldSchedule","selectShouldSchedule","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","canReportChat","currentChatId","currentThreadId","userFullInfo","canGiftPremium","premiumGifts","canCreateTopic","isUserRightBanned","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","botInfo","commands","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openBoostStatistics","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftPremiumClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","cmd","deleteTitle","DeleteChatModal","isSavedDialog","runDebouncedForSearch","savedTag","selectCurrentTextSearch","savedTags","savedReactionTags","isHistoryCalendarOpen","searchTag","setLocalTextSearchQuery","setLocalTextSearchTag","searchTextMessagesLocal","closeLocalTextSearch","openHistoryCalendar","loadSavedReactionTags","tagsRef","focusedIndex","setFocusedIndex","hasQueryData","visualViewport","mainEl","pageTop","blur","tags","hasTags","areTagsDisabled","handleMessageSearchQueryChange","newQuery","handleTagClick","handleUp","newFocusIndex","handleDown","handleCloseLocalTextSearch","SavedTagButton","withCount","isChosen","getDayStartAt","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","isForEffects","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","isTouchScreen","shouldUseCurrentReactions","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","rowsCount","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","handleStoryReactionSelect","customEmojiMessage","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","StickerPicker","ReactionPickerLimited","BLUR_CANVAS_SIZE","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","filename","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","findInViewport","selectorOrElements","shouldContainBottom","isHorizontal","viewportY1","viewportY2","allElements","visibleIndexes","isFound","y2","setTooltipItemVisible","isFullyVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","member","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","isInAlbum","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","leftChars","leftCharsBeforeLimit","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","isBottomDividerShown","noBackdropClose","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","AttachmentModalItem","uniqueId","MentionTooltip","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","focusInput","addNewOption","requestNextMutation","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","newOptions","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","noReplaceNewlines","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","EmojiButton","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","EmojiCategory","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","GifButton","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","isMessageComposer","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","EmojiPicker","GifPicker","SymbolMenuFooter","mobileClassName","UnfreezableMenu","onMouseEnter","freezeWhenClosed","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","ChatCommand","botCommand","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onSendWhenOnline","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","showItems","handleOpenMessageEffectsPicker","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","EDITABLE_INPUT_ID","textFormat","restoreSelection","removeAllRanges","addRange","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","m","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","CustomEmojiButton","thumbnailDataUrl","getWebDocumentHash","decoding","inlineResult","webThumbnail","BaseResult","_gif","isForGallery","thumbnailBlobUrl","STICKER_SIZE_INLINE_BOT_RESULT","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","GifResult","MediaResult","StickerResult","ArticleResult","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","messagesById","handleSearchTextMessagesLocal","viewportResults","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","hiddenForwardTitle","hiddenUserName","foundResult","isOnTop","preloadBackwards","teactOrderKey","LastMessageMeta","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","loadFeaturedStickers","StickerSetResult","selectCurrentGifSearch","selectIsChatWithBot","canPostInChat","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","storiesById","selectPeerStories","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentMessage","StatisticsRecentStory","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","StatisticsMessagePublicForward","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","itemName","renderViewMoreButton","getMessagePoll","resultsByOption","buildCollectionByKey","PollAnswerResults","ICON_SIZE","createTopicPanel","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","shouldCleanup","noLoopLimit","editTopicPanel","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","isSignaturesShown","canChangeInfo","canInvite","exportedInvites","updateChat","toggleSignatures","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleToggleSignatures","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","joinRequests","onChatMemberSelect","canAddNewAdmins","adminRights","addAdmins","adminMembers","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","loadMoreMembers","usersId","availableMemberIds","isAdmin","canDeleteMembers","removedMembers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","RemoveGroupUserModal","forDiscussionIds","linkedChat","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","updateChatDefaultBannedRights","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","inviteInfo","importers","requesters","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","JoinRequest","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","personalPhoto","notPersonalPhoto","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","ManageBot","ManageUser","ManageGroup","GroupRecentActions","ManageChannel","ManageChatPrivacyType","ManageDiscussion","ManageGroupPermissions","ManageChatRemovedUsers","ManageGroupUserPermissionsCreate","ManageGroupUserPermissions","ManageChatAdministrators","ManageGroupAdminRights","ManageGroupMembers","ManageInvites","ManageInvite","ManageReactions","ManageInviteInfo","ManageJoinRequests","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","defaultName","prices","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","customIcon","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","noRedirect","onPaymentFormSubmit","passwordHint","onPasswordChange","clearPaymentError","cardName","shouldShowSubmit","onInputChange","useFocusAfterAnimation","animationDuration","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","CardInput","ExpiryInput","Select","hasArrow","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","savedInfo","invoiceContainer","nativeProvider","nativeParams","passwordMissing","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","providerName","isProviderError","isNameRequested","isShippingAddressRequested","isPhoneRequested","isEmailRequested","shouldSendPhoneToProvider","shouldSendEmailToProvider","smartGlocalToken","stripeId","passwordValidUntil","validUntil","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","ConfirmPayment","setStep","nextStep","Checkout","field","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","shippingOption","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","handleModalClose","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","SavedPaymentCredentials","PasswordConfirm","renderModalContent","renderError","optionId","ReceiptModalRegular","receipt","credentialsTitle","totalAmount","fullAddress","handleOpenMedia","starModalData","toName","getStarsPeerTitleKey","messageLink","getMessageLink","mediaAmount","transactionId","footerTextParts","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedIds","lockedUnselectedSubtitle","isViewOnly","closeOneTimeMediaModal","handlePlayVoice","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","hardwareConcurrency","instances","IS_TEST","Worker","createConnector"],"sourceRoot":""}